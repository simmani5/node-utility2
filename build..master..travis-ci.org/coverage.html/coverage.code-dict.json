{"/home/travis/build/kaizhu256/node-utility2/test.js":"/* istanbul instrument in package utility2 */\n/* istanbul ignore next */\n/* jslint utility2:true */\n(function (globalThis) {\n    \"use strict\";\n    var consoleError;\n    var local;\n    // init globalThis\n    (function () {\n        try {\n            globalThis = Function(\"return this\")(); // jslint ignore:line\n        } catch (ignore) {}\n    }());\n    globalThis.globalThis = globalThis;\n    // init debug_inline\n    if (!globalThis[\"debug\\u0049nline\"]) {\n        consoleError = console.error;\n        globalThis[\"debug\\u0049nline\"] = function () {\n        /*\n         * this function will both print <arguments> to stderr\n         * and return <arguments>[0]\n         */\n            var argList;\n            argList = Array.from(arguments); // jslint ignore:line\n            // debug arguments\n            globalThis[\"debug\\u0049nlineArguments\"] = argList;\n            consoleError(\"\\n\\ndebug\\u0049nline\");\n            consoleError.apply(console, argList);\n            consoleError(\"\\n\");\n            // return arg0 for inspection\n            return argList[0];\n        };\n    }\n    // init local\n    local = {};\n    local.local = local;\n    globalThis.globalLocal = local;\n    // init isBrowser\n    local.isBrowser = (\n        typeof window === \"object\"\n        && window === globalThis\n        && typeof window.XMLHttpRequest === \"function\"\n        && window.document\n        && typeof window.document.querySelector === \"function\"\n    );\n    // init function\n    local.assertThrow = function (passed, message) {\n    /*\n     * this function will throw err.<message> if <passed> is falsy\n     */\n        var err;\n        if (passed) {\n            return;\n        }\n        err = (\n            // ternary-operator\n            (\n                message\n                && typeof message.message === \"string\"\n                && typeof message.stack === \"string\"\n            )\n            // if message is errObj, then leave as is\n            ? message\n            : new Error(\n                typeof message === \"string\"\n                // if message is a string, then leave as is\n                ? message\n                // else JSON.stringify message\n                : JSON.stringify(message, null, 4)\n            )\n        );\n        throw err;\n    };\n    local.functionOrNop = function (fnc) {\n    /*\n     * this function will if <fnc> exists,\n     * them return <fnc>,\n     * else return <nop>\n     */\n        return fnc || local.nop;\n    };\n    local.identity = function (value) {\n    /*\n     * this function will return <value>\n     */\n        return value;\n    };\n    local.nop = function () {\n    /*\n     * this function will do nothing\n     */\n        return;\n    };\n    local.objectAssignDefault = function (target, source) {\n    /*\n     * this function will if items from <target> are\n     * null, undefined, or empty-string,\n     * then overwrite them with items from <source>\n     */\n        target = target || {};\n        Object.keys(source || {}).forEach(function (key) {\n            if (\n                target[key] === null\n                || target[key] === undefined\n                || target[key] === \"\"\n            ) {\n                target[key] = target[key] || source[key];\n            }\n        });\n        return target;\n    };\n    // require builtin\n    if (!local.isBrowser) {\n        local.assert = require(\"assert\");\n        local.buffer = require(\"buffer\");\n        local.child_process = require(\"child_process\");\n        local.cluster = require(\"cluster\");\n        local.crypto = require(\"crypto\");\n        local.dgram = require(\"dgram\");\n        local.dns = require(\"dns\");\n        local.domain = require(\"domain\");\n        local.events = require(\"events\");\n        local.fs = require(\"fs\");\n        local.http = require(\"http\");\n        local.https = require(\"https\");\n        local.net = require(\"net\");\n        local.os = require(\"os\");\n        local.path = require(\"path\");\n        local.querystring = require(\"querystring\");\n        local.readline = require(\"readline\");\n        local.repl = require(\"repl\");\n        local.stream = require(\"stream\");\n        local.string_decoder = require(\"string_decoder\");\n        local.timers = require(\"timers\");\n        local.tls = require(\"tls\");\n        local.tty = require(\"tty\");\n        local.url = require(\"url\");\n        local.util = require(\"util\");\n        local.vm = require(\"vm\");\n        local.zlib = require(\"zlib\");\n    }\n}(this));\n\n\n\n(function (local) {\n\"use strict\";\n\n\n\n// run shared js-env code - init-before\n(function () {\n// init local\nlocal = (\n    globalThis.utility2 || require(\"./lib.utility2.js\")\n).requireReadme();\nglobalThis.local = local;\n// init test\nlocal.testRunDefault(local);\n}());\n\n\n\n// run shared js-env code - function\n(function () {\nlocal._testCase_testRunDefault_failure = function (opt, onError) {\n/*\n * this function will test testRunDefault's failure handling-behavior\n */\n    // test failure from callback handling-behavior\n    onError(local.errDefault);\n    // test failure from multiple-callback handling-behavior\n    onError(null, opt);\n    // test failure from ajax handling-behavior\n    local.ajax({\n        url: \"/undefined\"\n    }, onError);\n    // test failure from uncaught-uncaughtexception handling-behavior\n    setTimeout(local.throwError);\n    // test console.error handling-behavior\n    local.testMock([\n        [\n            globalThis, {\n                __coverage__: null\n            }\n        ]\n    ], function (onError) {\n        console.error();\n        onError(null, opt);\n    }, local.onErrorThrow);\n    // test failure from thrown err handling-behavior\n    throw local.errDefault;\n};\n\nlocal.testCase_FormData_default = function (opt, onError) {\n/*\n * this function will test FormData's default handling-behavior\n */\n    opt = {};\n    opt.blob1 = new local.Blob([\n        \"aa\", \"bb\", local.stringHelloEmoji, 0\n    ]);\n    opt.blob2 = new local.Blob([\n        \"aa\", \"bb\", local.stringHelloEmoji, 0\n    ], {\n        type: \"text/plain; charset=utf-8\"\n    });\n    opt.data = new local.FormData();\n    opt.data.append(\"text1\", \"aabb\" + local.stringHelloEmoji + \"0\");\n    // test file-upload handling-behavior\n    opt.data.append(\"file1\", opt.blob1);\n    // test file-upload and filename handling-behavior\n    opt.data.append(\"file2\", opt.blob2, \"filename2.txt\");\n    opt.method = \"POST\";\n    opt.url = \"/test.echo\";\n    local.ajax(opt, function (err, xhr) {\n        // validate no err occurred\n        local.assertThrow(!err, err);\n        // validate responseText\n        local.assertThrow(xhr.responseText.indexOf(\n            \"\\r\\nContent-Disposition: form-data; \"\n            + \"name=\\\"text1\\\"\\r\\n\\r\\naabbhello \\ud83d\\ude01\\n0\\r\\n\"\n        ) >= 0, xhr.responseText);\n        local.assertThrow(xhr.responseText.indexOf(\n            \"\\r\\nContent-Disposition: form-data; \"\n            + \"name=\\\"file1\\\"\\r\\n\\r\\naabbhello \\ud83d\\ude01\\n0\\r\\n\"\n        ) >= 0, xhr.responseText);\n        local.assertThrow(xhr.responseText.indexOf(\n            \"\\r\\nContent-Disposition: form-data; name=\\\"file2\\\"; \"\n            + \"filename=\\\"filename2.txt\\\"\\r\\nContent-Type: text/plain; \"\n            + \"charset=utf-8\\r\\n\\r\\naabbhello \\ud83d\\ude01\\n0\\r\\n\"\n        ) >= 0, xhr.responseText);\n        onError(null, opt);\n    });\n};\n\nlocal.testCase_FormData_err = function (opt, onError) {\n/*\n * this function will test FormData's err handling-behavior\n */\n    local.testMock([\n        [\n            local.FormData.prototype, {\n                read: function (onError) {\n                    onError(local.errDefault);\n                }\n            }\n        ]\n    ], function (onError) {\n        local.ajax({\n            data: new local.FormData(),\n            method: \"POST\",\n            url: \"/test.echo\"\n        }, function (err) {\n            // validate err occurred\n            local.assertThrow(err, err);\n            onError(null, opt);\n        });\n    }, onError);\n};\n\nlocal.testCase_FormData_nullCase = function (opt, onError) {\n/*\n * this function will test FormData's null-case handling-behavior\n */\n    local.ajax({\n        data: new local.FormData(),\n        method: \"POST\",\n        url: \"/test.echo\"\n    }, function (err, xhr) {\n        // validate no err occurred\n        local.assertThrow(!err, err);\n        // validate responseText\n        local.assertThrow((\n            /\\r\\n\\r\\n$/\n        ).test(xhr.responseText), xhr.responseText);\n        onError(null, opt);\n    });\n};\n\nlocal.testCase_ajaxProgressUpdate_default = function (opt, onError) {\n/*\n * this function will test ajaxProgressUpdate's default handling-behavior\n */\n    opt = 0;\n    local.testMock([\n        [\n            local, {\n                ajaxProgressCounter: 0,\n                ajaxProgressState: 0\n            }\n        ], [\n            globalThis, {\n                setTimeout: function (fnc) {\n                    opt += 1;\n                    local.ajaxProgressState = opt % 3;\n                    fnc();\n                }\n            }\n        ]\n    ], function (onError) {\n        // update ajax-progress\n        local.ajaxProgressUpdate();\n        // validate data\n        local.assertJsonEqual(local.ajaxProgressCounter, 0);\n        local.assertJsonEqual(local.ajaxProgressState, 2);\n        // update ajax-progress\n        local.ajaxProgressUpdate();\n        // validate data\n        local.assertJsonEqual(local.ajaxProgressCounter, 0);\n        local.assertJsonEqual(local.ajaxProgressState, 1);\n        // update ajax-progress\n        local.ajaxProgressUpdate();\n        // validate data\n        local.assertJsonEqual(local.ajaxProgressCounter, 0);\n        local.assertJsonEqual(local.ajaxProgressState, 0);\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_ajax_cache = function (opt, onError) {\n/*\n * this function will test ajax's cache handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    opt = {};\n    local.onNext(opt, function (err, data) {\n        switch (opt.modeNext) {\n        case 1:\n            // test http GET handling-behavior\n            local.ajax({\n                url: \"assets.hello.txt\"\n            }, opt.onNext);\n            break;\n        case 2:\n            // validate responseText\n            local.assertJsonEqual(data.responseText, local.stringHelloEmoji);\n            // test http GET 304 cache handling-behavior\n            local.ajax({\n                headers: {\n                    \"If-Modified-Since\": (\n                        new Date(Date.now() + 0xffff).toUTCString()\n                    )\n                },\n                url: \"assets.hello.txt\"\n            }, opt.onNext);\n            break;\n        case 3:\n            // validate statusCode\n            local.assertJsonEqual(data.statusCode, 304);\n            opt.onNext();\n            break;\n        default:\n            onError(err, opt);\n        }\n    });\n    opt.modeNext = 0;\n    opt.onNext();\n};\n\nlocal.testCase_ajax_default = function (opt, onError) {\n/*\n * this function will test ajax's default handling-behavior\n */\n    var onParallel;\n    onParallel = local.onParallel(onError);\n    onParallel.counter += 1;\n\n    // test ajax's abort handling-behavior\n    onParallel.counter += 1;\n    local.onParallelList({\n        list: [\n            \"\",\n            \"arraybuffer\",\n            \"blob\",\n            \"text\"\n        ]\n    }, function (responseType, onParallel) {\n        responseType = responseType.elem;\n        onParallel.counter += 1;\n        local.ajax({\n            data: (\n                responseType === \"arraybuffer\"\n                // test POST buffer-data handling-behavior\n                ? new TextEncoder().encode(local.stringHelloEmoji)\n                : responseType === \"blob\"\n                // test POST blob-data handling-behavior\n                ? new local.Blob([\n                    \"\",\n                    new Uint8Array(0),\n                    local.stringHelloEmoji\n                ])\n                // test POST string-data handling-behavior\n                : local.stringHelloEmoji\n            ),\n            method: \"POST\",\n            // test nodejs-res handling-behavior\n            responseType: responseType.replace(\"blob\", \"arraybuffer\"),\n            url: \"/test.body\"\n        }, function (err, xhr) {\n            // validate no err occurred\n            local.assertThrow(!err, err);\n            // validate statusCode\n            local.assertJsonEqual(xhr.statusCode, 200);\n            // validate responseText\n            switch (responseType) {\n            case \"arraybuffer\":\n            case \"blob\":\n                local.assertJsonEqual(xhr.responseBuffer.byteLength, 11);\n                local.assertJsonEqual(Array.from(xhr.responseBuffer), [\n                    0x68,\n                    0x65,\n                    0x6c,\n                    0x6c,\n                    0x6f,\n                    0x20,\n                    0xf0,\n                    0x9f,\n                    0x98,\n                    0x81,\n                    0x0a\n                ]);\n                break;\n            default:\n                local.assertJsonEqual(xhr.responseText, local.stringHelloEmoji);\n            }\n            onParallel(null, opt);\n        });\n    }, onParallel);\n\n    // test ajax's data handling-behavior\n    onParallel.counter += 1;\n    opt = local.ajax({\n        url: \"/test.timeout\"\n    }, function (err, xhr) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        // validate statusCode\n        local.assertJsonEqual(xhr.statusCode, 500);\n        onParallel(null, opt);\n    });\n    // test multiple-callback handling-behavior\n    opt.onEvent({\n        type: \"abort\"\n    });\n    opt.abort();\n    opt.abort();\n\n    // test ajax's echo handling-behavior\n    onParallel.counter += 1;\n    local.ajax({\n        _aa: \"aa\",\n        aa: \"aa\",\n        data: local.stringHelloEmoji,\n        // test req-header handling-behavior\n        headers: {\n            \"X-Req-Header-Test\": \"aa\"\n        },\n        method: \"POST\",\n        // test modeDebug handling-behavior\n        modeDebug: true,\n        url: \"/test.echo\"\n    }, function (err, xhr) {\n        // validate no err occurred\n        local.assertThrow(!err, err);\n        // validate statusCode\n        local.assertJsonEqual(xhr.statusCode, 200);\n        // validate resHeaders\n        local.assertJsonEqual(xhr.resHeaders[\"x-res-header-test\"], \"bb\");\n        // validate responseText\n        local.assertThrow((\n            /\\r\\nhello\\u0020\\ud83d\\ude01\\n$/\n        ).test(xhr.responseText), xhr.responseText);\n        local.assertThrow((\n            /\\r\\nx-req-header-test:\\u0020aa\\r\\n/\n        ).test(xhr.responseText), xhr.responseText);\n        // validate properties\n        local.assertJsonEqual(xhr._aa, undefined);\n        local.assertJsonEqual(xhr.aa, \"aa\");\n        onParallel(null, opt);\n    });\n\n    // test ajax's err handling-behavior\n    onParallel.counter += 1;\n    local.onParallelList({\n        list: [\n            {\n                // test 404-not-found handling-behavior\n                url: \"/test.err-404\"\n            }, {\n                // test 500-internal-server-error handling-behavior\n                url: \"/test.err-500\"\n            }, {\n                // test undefined-status-code handling-behavior\n                url: \"/test.err-undefined\"\n            }, {\n                // test corsForwardProxyHost handling-behavior\n                corsForwardProxyHost: \"https://undefined:0\",\n                location: {\n                    host: \"undefined.github.io\"\n                },\n                timeout: 1,\n                // test undefined-https-url handling-behavior\n                url: \"https://undefined:0\"\n            }\n        ]\n    }, function (option2, onParallel) {\n        onParallel.counter += 1;\n        local.ajax(option2.elem, function (err) {\n            // validate err occurred\n            local.assertThrow(err, err);\n            onParallel(null, opt);\n        });\n    }, onParallel);\n\n    // test ajax's file handling-behavior\n    onParallel.counter += 1;\n    local.ajax({\n        url: \"LICENSE\"\n    }, function (err, xhr) {\n        // validate no err occurred\n        local.assertThrow(!err, err);\n        // validate statusCode\n        local.assertJsonEqual(xhr.statusCode, 200);\n        // validate responseText\n        local.assertThrow(xhr.responseText.indexOf(\n            \"MIT License (https://opensource.org/licenses/MIT)\\n\\n\"\n        ) === 0, xhr.data);\n        onParallel(null, opt);\n    });\n\n    // test ajax's standalone handling-behavior\n    onParallel.counter += 1;\n    local.testMock([\n        [\n            local, {\n                utility2: null\n            }\n        ]\n    ], function (onError) {\n        [\n            \"\", \"arraybuffer\"\n        ].forEach(function (responseType) {\n            // test default handling-behavior\n            onParallel.counter += 1;\n            local.ajax({\n                responseType,\n                url: (\n                    local.isBrowser\n                    ? location.href\n                    : local.serverLocalHost\n                )\n            }, function (err, xhr) {\n                // validate no err occurred\n                local.assertThrow(!err, err);\n                // validate statusCode\n                local.assertJsonEqual(xhr.statusCode, 200);\n                onParallel();\n            });\n            // test err handling-behavior\n            onParallel.counter += 1;\n            local.ajax({\n                responseType,\n                undefined,\n                url: (\n                    local.isBrowser\n                    ? location.href.replace((\n                        /\\?.*$/\n                    ), \"\")\n                    : local.serverLocalHost\n                ) + \"/undefined\"\n            }, function (err, xhr) {\n                // validate err occurred\n                local.assertThrow(err, err);\n                // validate statusCode\n                local.assertJsonEqual(xhr.statusCode, 404);\n                onParallel();\n            });\n        });\n        onError(null, opt);\n    }, onParallel);\n    onParallel();\n\n    // test ajax's timeout handling-behavior\n    onParallel.counter += 1;\n    setTimeout(function () {\n        local.ajax({\n            timeout: 1,\n            url: \"/test.timeout\"\n        }, function (err, xhr) {\n            // validate err occurred\n            local.assertThrow(err, err);\n            // validate statusCode\n            local.assertJsonEqual(xhr.statusCode, 500);\n            onParallel(null, opt);\n        });\n    }, 1000);\n};\n\nlocal.testCase_assertXxx_default = function (opt, onError) {\n/*\n * this function will test assertXxx's default handling-behavior\n */\n    // test assertion passed\n    local.assertThrow(true, true);\n    // test assertion failed with undefined message\n    local.tryCatchOnError(function () {\n        local.assertThrow(null);\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        // validate err.message\n        local.assertJsonEqual(err.message, \"\");\n    });\n    // test assertion failed with string message\n    local.tryCatchOnError(function () {\n        local.assertThrow(null, \"aa\");\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        // validate err.message\n        local.assertJsonEqual(err.message, \"aa\");\n    });\n    // test assertion failed with errObj\n    local.tryCatchOnError(function () {\n        local.assertThrow(null, local.errDefault);\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n    });\n    // test assertion failed with json object\n    local.tryCatchOnError(function () {\n        local.assertThrow(null, {\n            aa: 1\n        });\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        // validate err.message\n        local.assertJsonEqual(err.message, \"{\\n    \\\"aa\\\": 1\\n}\");\n    });\n    [\n        \"\", 0, false, null, undefined\n    ].forEach(function (aa, ii) {\n        [\n            \"\", 0, false, null, undefined\n        ].forEach(function (bb, jj) {\n            if (ii === jj) {\n                // test assertJsonEqual's handling-behavior\n                local.assertJsonEqual(aa, bb);\n            } else {\n                // test assertJsonNotEqual's handling-behavior\n                local.assertJsonNotEqual(aa, bb);\n            }\n        });\n    });\n    onError(null, opt);\n};\n\nlocal.testCase_base64Xxx_default = function (opt, onError) {\n/*\n * this function will test base64Xxx's default handling-behavior\n */\n    opt = {};\n    opt.base64 = local.base64FromBuffer(\n        local.stringCharsetAscii + local.stringHelloEmoji\n    );\n    // test null-case handling-behavior\n    local.assertJsonEqual(local.base64FromBuffer(), \"\");\n    local.assertJsonEqual(local.bufferToUtf8(local.base64ToBuffer()), \"\");\n    local.assertJsonEqual(local.base64ToUtf8(), \"\");\n    local.assertJsonEqual(local.base64FromBuffer(local.base64ToBuffer()), \"\");\n    local.assertJsonEqual(local.base64FromBuffer(local.base64ToUtf8()), \"\");\n    // test identity handling-behavior\n    local.assertJsonEqual(\n        local.base64FromBuffer(local.base64ToBuffer(opt.base64)),\n        opt.base64\n    );\n    local.assertJsonEqual(\n        local.base64FromBuffer(local.base64ToUtf8(opt.base64)),\n        opt.base64\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_blobRead_default = function (opt, onError) {\n/*\n * this function will test blobRead's default handling-behavior\n */\n    var onParallel;\n    onParallel = local.onParallel(onError);\n    onParallel.counter += 1;\n    // test data handling-behavior\n    onParallel.counter += 1;\n    local.blobRead(new local.Blob([\n        \"\",\n        \"aa\",\n        \"bb\",\n        new Uint8Array(0),\n        local.stringHelloEmoji\n    ]), function (err, data) {\n        // validate no err occurred\n        local.assertThrow(!err, err);\n        // validate data\n        local.assertJsonEqual(\n            local.bufferToUtf8(data),\n            \"aabbhello \\ud83d\\ude01\\n\"\n        );\n        onParallel(null, opt);\n    });\n    if (!local.isBrowser) {\n        onParallel(null, opt);\n        return;\n    }\n    // test err handling-behavior\n    onParallel.counter += 1;\n    local.testMock([\n        [\n            FileReader.prototype, {\n                readAsArrayBuffer: function () {\n                    this.onabort({\n                        type: \"abort\"\n                    });\n                    this.onerror({\n                        type: \"error\"\n                    });\n                }\n            }\n        ]\n    ], function (onError) {\n        local.blobRead(null, function (err) {\n            // validate err occurred\n            local.assertThrow(err, err);\n        });\n        onError(null, opt);\n    }, onParallel);\n    onParallel();\n};\n\nlocal.testCase_browserTest_electron = function (opt, onError) {\n/*\n * this function will test browserTest's electron handling-behavior\n */\n    opt = function (aa, bb, cc) {\n        [\n            aa, bb, cc\n        ].forEach(function (fnc, ii) {\n            if (typeof fnc === \"function\") {\n                fnc(ii && opt);\n                opt.onNext(null, opt);\n                opt.utility2_testReportSave();\n            }\n        });\n        return opt;\n    };\n    [\n        \"BrowserWindow\",\n        \"addEventListener\",\n        \"app\",\n        \"browserWindow\",\n        \"capturePage\",\n        \"document\",\n        \"documentElement\",\n        \"electron\",\n        \"fileCoverage\",\n        \"fileElectronHtml\",\n        \"fileScreenshot\",\n        \"fileTestReport\",\n        \"fs\",\n        \"ipcRenderer\",\n        \"loadURL\",\n        \"modeCoverageMerge\",\n        \"on\",\n        \"once\",\n        \"process\",\n        \"prototype\",\n        \"rename\",\n        \"send\",\n        \"toPNG\",\n        \"unref\",\n        \"window\",\n        \"writeFile\"\n    ].forEach(function (key) {\n        opt[key] = (\n            key.indexOf(\"file\") === 0\n            ? \"undefined\"\n            : opt\n        );\n    });\n    opt.ipcMain = {\n        on: function (_, fnc) {\n            [\"html\", \"testReport\", \"undefined\"].forEach(function (type) {\n                [\n                    \"<div></div>\",\n                    null,\n                    {}, {\n                        testPlatformList: [\n                            {}\n                        ]\n                    }, {\n                        coverage: {},\n                        testPlatformList: [\n                            {}\n                        ]\n                    }\n                ].forEach(function (data) {\n                    opt.isDoneTestReport = null;\n                    fnc(_, type, data);\n                });\n            });\n        }\n    };\n    opt.utility2_testReportSave = local.nop;\n    local.testMock([\n        [\n            globalThis, {\n                setTimeout: opt,\n                utility2_testReport: null\n            }\n        ], [\n            local, {\n                fs: opt,\n                fsReadFileOrEmptyStringSync: function () {\n                    return \"\";\n                },\n                fsWriteFileWithMkdirpSync: opt,\n                onParallel: opt\n            }\n        ]\n    ], function (onError) {\n        [\n            \"test\", \"undefined\"\n        ].forEach(function (modeBrowserTest) {\n            [\n                1, 10, 11, 20, 100\n            ].forEach(function (modeNext) {\n                opt.modeBrowserTest = modeBrowserTest;\n                opt.modeNext = modeNext;\n                switch (modeNext) {\n                case 100:\n                    local.tryCatchOnError(function () {\n                        local.browserTest({\n                            modeNext\n                        }, opt);\n                    }, local.nop);\n                    break;\n                default:\n                    local.browserTest(opt, opt);\n                }\n            });\n        });\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_browserTest_screenshot = function (opt, onError) {\n/*\n * this function will test browserTest's screenshot handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.browserTest({\n        modeBrowserTest: \"screenshot\",\n        timeoutDefault: 20000,\n        url: \"tmp/build/test-report.html\"\n    }, onError);\n};\n\nlocal.testCase_bufferIndexOfSubBuffer_default = function (opt, onError) {\n/*\n * this function will test bufferIndexOfSubBuffer's default handling-behavior\n */\n[\n    {\n        buffer: \"\",\n        subBuffer: \"\",\n        validate: 0\n    }, {\n        buffer: \"\",\n        subBuffer: \"aa\",\n        validate: -1\n    }, {\n        buffer: \"aa\",\n        subBuffer: \"\",\n        validate: 0\n    }, {\n        buffer: \"aa\",\n        subBuffer: \"aa\",\n        validate: 0\n    }, {\n        buffer: \"aa\",\n        subBuffer: \"bb\",\n        validate: -1\n    }, {\n        buffer: \"aaaa\",\n        subBuffer: \"aa\",\n        validate: 0\n    }, {\n        buffer: \"aabb\",\n        subBuffer: \"aa\",\n        validate: 0\n    }, {\n        buffer: \"aabb\",\n        subBuffer: \"bb\",\n        validate: 2\n    }, {\n        buffer: \"aabbaa\",\n        subBuffer: \"aa\",\n        validate: 0\n    }, {\n        buffer: \"aabbaa\",\n        subBuffer: \"bb\",\n        validate: 2\n    }, {\n        buffer: \"aabbaa\",\n        subBuffer: \"ba\",\n        validate: 3\n    }\n].forEach(function (opt) {\n    local.assertJsonEqual(local.bufferIndexOfSubBuffer(\n        new TextEncoder().encode(opt.buffer),\n        new TextEncoder().encode(opt.subBuffer),\n        opt.fromIndex\n    ), opt.validate);\n});\nonError(null, opt);\n};\n\nlocal.testCase_bufferValidateAndCoerce_err = function (opt, onError) {\n/*\n * this function will test bufferValidateAndCoerce's err handling-behavior\n */\n    [[], 0, {}].forEach(function (elem) {\n        opt = null;\n        try {\n            local.bufferValidateAndCoerce(elem);\n        } catch (errCaught) {\n            opt = errCaught;\n        }\n        // validate err occurred\n        local.assertThrow(opt, elem);\n    });\n    onError(null, opt);\n};\n\nlocal.testCase_buildApidoc_default = function (opt, onError) {\n/*\n * this function will test buildApidoc's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    // test $npm_config_mode_coverage=all handling-behavior\n    local.testMock([\n        [\n            local.env, {\n                npm_config_mode_coverage: \"all\"\n            }\n        ]\n    ], function (onError) {\n        local.buildApidoc(null, onError);\n    }, local.onErrorThrow);\n    local.buildApidoc({\n        blacklistDict: {}\n    }, onError);\n};\n\nlocal.testCase_buildApp_default = function (opt, onError) {\n/*\n * this function will test buildApp's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.testCase_buildReadme_default(opt, local.onErrorThrow);\n    local.testCase_buildLib_default(opt, local.onErrorThrow);\n    local.testCase_buildTest_default(opt, local.onErrorThrow);\n    local.buildApp({\n        assetsList: [\n            {\n                file: \"/assets.hello.txt\",\n                url: \"/assets.hello.txt\"\n            }, {\n                file: \"/assets.script_only.html\",\n                url: \"/assets.script_only.html\"\n            }, {\n                file: \"/assets.utility2.lib.db.js\",\n                url: \"/assets.utility2.lib.db.js\"\n            }, {\n                file: \"/assets.utility2.lib.istanbul.js\",\n                url: \"/assets.utility2.lib.istanbul.js\"\n            }, {\n                file: \"/assets.utility2.lib.jslint.js\",\n                url: \"/assets.utility2.lib.jslint.js\"\n            }, {\n                file: \"/assets.utility2.lib.marked.js\",\n                url: \"/assets.utility2.lib.marked.js\"\n            }, {\n                file: \"/assets.utility2.lib.sjcl.js\",\n                url: \"/assets.utility2.lib.sjcl.js\"\n            }, {\n                file: \"/assets.utility2.rollup.js\",\n                url: \"/assets.utility2.rollup.js\"\n            }\n        ]\n    }, onError);\n};\n\nlocal.testCase_buildLib_default = function (opt, onError) {\n/*\n * this function will test buildLib's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.testMock([\n        [\n            local, {\n                // test duplicate local function handling-behavior\n                fsReadFileOrEmptyStringSync: function () {\n                    return (\n                        \"local.nop = function () {\\n\"\n                        + \"/*\\n\"\n                        + \" * this function will do nothing\\n\"\n                        + \" */\\n\"\n                        + \"    return;\\n\"\n                        + \"};\\n\"\n                        + \"local.nop = function () {\\n\"\n                        + \"/*\\n\"\n                        + \" * this function will do nothing\\n\"\n                        + \" */\\n\"\n                        + \"    return;\\n\"\n                        + \"};\\n\"\n                    );\n                },\n                templateRenderMyApp: function () {\n                    return local.assetsDict[\"/assets.my_app.template.js\"];\n                }\n            }\n        ], [\n            local.fs, {\n                // test customize-local handling-behavior\n                existsSync: function () {\n                    return true;\n                },\n                writeFileSync: local.nop\n            }\n        ]\n    ], function (onError) {\n        local.buildLib({}, onError);\n    }, local.onErrorThrow);\n    local.buildLib({}, onError);\n};\n\nlocal.testCase_buildReadme_default = function (opt, onError) {\n/*\n * this function will test buildReadme's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    opt = {};\n    // test shNpmTestPublished handling-behavior\n    opt.dataFrom = local.fs.readFileSync(\"README.md\", \"utf8\").replace(\n        \"#\\u0021! shNpmTestPublished\",\n        \"shNpmTestPublished\"\n    );\n    opt = {};\n    opt.customize = function () {\n        // search-and-replace - customize dataTo\n        [\n            // customize quickstart-example-js\n            (\n                /#\\u0020quickstart\\u0020example.js[\\S\\s]*?istanbul\\u0020instrument\\u0020in\\u0020package/\n            ),\n            // customize quickstart-footer\n            (\n                />download\\u0020standalone\\u0020app<[^`]*?\"utility2FooterDiv\"/\n            ), (\n                /```[^`]*?\\n#\\u0020extra\\u0020screenshots/\n            ),\n            // customize build-script\n            (\n                /\\n#\\u0020internal\\u0020build\\u0020script\\n[\\S\\s]*?\\nshBuildCi\\n/\n            )\n        ].forEach(function (rgx) {\n            opt.dataFrom.replace(rgx, function (match0) {\n                opt.dataTo = opt.dataTo.replace(rgx, match0);\n            });\n        });\n    };\n    local.buildReadme(opt, onError);\n};\n\nlocal.testCase_buildXxx_default = function (opt, onError) {\n/*\n * this function will test buildXxx's default handling-behavior\n */\n    local.testMock([\n        [\n            local, {\n                assetsDict: {\n                    \"/\": \"\"\n                },\n                browserTest: local.nop,\n                buildApidoc: local.nop,\n                buildLib: local.nop,\n                buildReadme: local.nop,\n                buildTest: local.nop,\n                testCase_buildReadme_default: local.nop,\n                testCase_buildLib_default: local.nop,\n                testCase_buildTest_default: local.nop\n            }\n        ]\n    ], function (onError) {\n        local._testCase_buildApidoc_default(null, local.nop);\n        local._testCase_buildApp_default(null, local.nop);\n        local._testCase_buildLib_default(null, local.nop);\n        local._testCase_buildReadme_default(null, local.nop);\n        local._testCase_buildTest_default(null, local.nop);\n        local._testCase_webpage_default(null, local.nop);\n        local.assetsDict[\"/\"] = \"<script src=\\\"assets.test.js\\\"></script>\";\n        local._testCase_webpage_default(null, local.nop);\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_childProcessSpawnWithTimeout_default = function (\n    opt,\n    onError\n) {\n/*\n * this function will test\n * childProcessSpawnWithTimeout's default handling-behavior\n */\n    var onParallel;\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    opt = {};\n    onParallel = local.onParallel(onError);\n    onParallel.counter += 1;\n    // test default handling-behavior\n    onParallel.counter += 1;\n    local.childProcessSpawnWithTimeout(\"ls\").on(\n        \"error\",\n        onParallel\n    ).on(\"exit\", function (exitCode, signal) {\n        // validate exitCode\n        local.assertJsonEqual(exitCode, 0);\n        // validate signal\n        local.assertJsonEqual(signal, null);\n        onParallel(null, opt);\n    });\n    // test timeout handling-behavior\n    onParallel.counter += 1;\n    local.testMock([\n        [\n            local, {\n                timeoutDefault: 1000\n            }\n        ]\n    ], function (onError) {\n        opt.childProcess = (\n            local.childProcessSpawnWithTimeout(\"sleep\", [\n                5000\n            ])\n        );\n        onError(null, opt);\n    }, local.onErrorThrow);\n    opt.childProcess\n    .on(\"error\", onParallel)\n    .on(\"exit\", function (exitCode, signal) {\n        // validate exitCode\n        local.assertJsonEqual(exitCode, null);\n        // validate signal\n        local.assertJsonEqual(signal, \"SIGKILL\");\n        onParallel(null, opt);\n    });\n    onParallel(null, opt);\n};\n\nlocal.testCase_childProcessSpawnWithUtility2_err = function (\n    opt,\n    onError\n) {\n/*\n * this function will test\n * childProcessSpawnWithTimeout's err handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.testMock([\n        // test __dirname handling-behavior\n        [\n            process.env, {\n                npm_config_dir_utility2: \"\"\n            }\n        ]\n    ], function (onError) {\n        local.local.childProcessSpawnWithUtility2(\"undefined\", function (err) {\n            // validate err occurred\n            local.assertThrow(err, err);\n        });\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_cliRun_default = function (opt, onError) {\n/*\n * this function will test cliRun's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.testMock([\n        [\n            local, {\n                replStart: null\n            }\n        ], [\n            local.cliDict, {\n                _default: local.nop,\n                _help: null\n            }\n        ], [\n            local.repl, {\n                start: local.nop\n            }\n        ], [\n            local.vm, {\n                runInThisContext: local.nop\n            }\n        ], [\n            process, {\n                argv: []\n            }\n        ]\n    ], function (onError) {\n        // test default handling-behavior\n        local.cliRun({\n            rgxComment: (\n                /^/\n            )\n        });\n        // test builtin handling-behavior\n        [\n            \"--eval\",\n            \"--help\",\n            \"--interactive\",\n            \"--version\",\n            \"undefined\"\n        ].forEach(function (key) {\n            process.argv[2] = key;\n            local.cliRun();\n        });\n        // test err handling-behavior\n        local.cliDict._default = null;\n        local.cliDict._help = null;\n        local.tryCatchOnError(local.cliRun, local.nop);\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_corsBackendHostInject_default = function (opt, onError) {\n/*\n * this function will corsBackendHostInject's default handling-behavior\n */\n    // test null-case handling-behavior\n    local.assertJsonEqual(local.corsBackendHostInject(), undefined);\n    // test override-all handling-behavior\n    local.assertJsonEqual(local.corsBackendHostInject(\n        \"cc.com\",\n        \"aa-alpha.bb.com\",\n        null,\n        {\n            host: \"github.io\",\n            pathname: \"/build..beta..travis-ci.org/\"\n        }\n    ), \"aa-beta.bb.com\");\n    // test override-rgx handling-behavior\n    local.assertJsonEqual(local.corsBackendHostInject(\n        \"cc/dd\",\n        \"aa-alpha.bb.com/\",\n        (\n            /(^cc\\/)/m\n        ),\n        {\n            host: \"github.io\",\n            pathname: \"/build..beta..travis-ci.org/\"\n        }\n    ), \"aa-beta.bb.com/cc/dd\");\n    onError(null, opt);\n};\n\nlocal.testCase_corsForwardProxyHostIfNeeded_default = function (\n    opt,\n    onError\n) {\n/*\n * this function will corsForwardProxyHostIfNeeded's default handling-behavior\n */\n    if (!local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.assertThrow(local.corsForwardProxyHostIfNeeded({\n        location: {\n            host: \"undefined.github.io\"\n        },\n        url: \"https://example.com\"\n    }).indexOf(\".herokuapp.com\") >= 0);\n    onError(null, opt);\n};\n\n/* istanbul ignore next */\nlocal.testCase_cryptoAesXxxCbcRawXxx_default = function (opt, onError) {\n/*\n * this function will cryptoAesXxxCbcRawXxx's default handling-behavior\n */\n    if (!local.nop()) {\n        onError();\n        return;\n    }\n    opt = {};\n    local.onNext(opt, function (err, data) {\n        switch (opt.modeNext) {\n        case 1:\n            // encrypt data\n            opt.data = new TextEncoder().encode(\"aa\");\n            opt.key = \"0123456789abcdef0123456789abcdef\";\n            opt.mode = null;\n            local.cryptoAesXxxCbcRawEncrypt(opt, opt.onNext);\n            break;\n        case 2:\n            // decrypt data\n            opt.data = data.buffer;\n            local.cryptoAesXxxCbcRawDecrypt(opt, opt.onNext);\n            break;\n        case 3:\n            // validate data\n            local.assertJsonEqual(local.bufferToUtf8(data), \"aa\");\n            opt.onNext();\n            break;\n        case 4:\n            // encrypt data - base64\n            opt.data = new TextEncoder().encode(\"aa\");\n            opt.key = (\n                \"0123456789abcdef0123456789abcdef\"\n                + \"0123456789abcdef0123456789abcdef\"\n            );\n            opt.mode = \"base64\";\n            local.cryptoAesXxxCbcRawEncrypt(opt, opt.onNext);\n            break;\n        case 5:\n            // decrypt data - base64\n            opt.data = data;\n            local.cryptoAesXxxCbcRawDecrypt(opt, opt.onNext);\n            break;\n        case 6:\n            // validate data\n            local.assertJsonEqual(local.bufferToUtf8(data), \"aa\");\n            opt.onNext();\n            break;\n        default:\n            onError(err, opt);\n        }\n    });\n    opt.modeNext = 0;\n    opt.onNext();\n};\n\nlocal.testCase_domFragmentRender_default = function (opt, onError) {\n/*\n * this function will test domFragmentRender's default handling-behavior\n */\n    if (!local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.assertJsonEqual(local.domFragmentRender(\"<div>{{value}}</div>\", {\n        value: \"aa\"\n    }).children[0].outerHTML, \"<div>aa</div>\");\n    onError(null, opt);\n};\n\nlocal.testCase_exit_err = function (opt, onError) {\n/*\n * this function will test exit's err handling-behavior\n */\n    local.exit(\"invalid-exitCode\");\n    onError(null, opt);\n};\n\nlocal.testCase_fsWriteFileWithMkdirpSync_default = function (opt, onError) {\n/*\n * this function will test\n * fsWriteFileWithMkdirpSync's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.fsRmrSync(\"tmp/build/testCase_fsWriteFileWithMkdirpSync_default\");\n    // validate data\n    local.assertJsonEqual(local.fsReadFileOrEmptyStringSync(\n        \"tmp/build/testCase_fsWriteFileWithMkdirpSync_default/aa.txt\",\n        \"utf8\"\n    ), \"\");\n    local.fsWriteFileWithMkdirpSync(\n        \"tmp/build/testCase_fsWriteFileWithMkdirpSync_default/aa.txt\",\n        \"aa\"\n    );\n    // validate data\n    local.assertJsonEqual(local.fsReadFileOrEmptyStringSync(\n        \"tmp/build/testCase_fsWriteFileWithMkdirpSync_default/aa.txt\",\n        \"utf8\"\n    ), \"aa\");\n    onError(null, opt);\n};\n\nlocal.testCase_isNullOrUndefined_default = function (opt, onError) {\n/*\n * this function will test isNullOrUndefined's default handling-behavior\n */\n    // validate data\n    local.assertJsonEqual(local.isNullOrUndefined(null), true);\n    // validate data\n    local.assertJsonEqual(local.isNullOrUndefined(undefined), true);\n    // validate data\n    local.assertJsonEqual(local.isNullOrUndefined(false), false);\n    onError(null, opt);\n};\n\nlocal.testCase_jsonCopy_default = function (opt, onError) {\n/*\n * this function will test jsonCopy's default handling-behavior\n */\n// test various data-type handling-behavior\n[\n    undefined, null, false, true, 0, 1, 1.5, \"a\"\n].forEach(function (elem) {\n    local.assertJsonEqual(local.jsonCopy(elem), elem);\n});\nonError(null, opt);\n};\n\nlocal.testCase_jsonStringifyOrdered_default = function (opt, onError) {\n/*\n * this function will test jsonStringifyOrdered's default handling-behavior\n */\n    // test data-type handling-behavior\n    local.identity([\n        undefined,\n        null,\n        false,\n        true,\n        0,\n        1,\n        1.5,\n        \"a\",\n        {},\n        []\n    ]).forEach(function (data) {\n        local.assertJsonEqual(\n            local.jsonStringifyOrdered(data),\n            JSON.stringify(data)\n        );\n    });\n    // test data-ordering handling-behavior\n    opt = {\n        // test nested dict handling-behavior\n        ff: {\n            hh: 2,\n            gg: 1\n        },\n        // test nested array handling-behavior\n        ee: [\n            1, null, undefined\n        ],\n        dd: local.nop,\n        cc: undefined,\n        bb: null,\n        aa: 1\n    };\n    // test circular-reference handling-behavior\n    opt.zz = opt;\n    local.assertJsonEqual(\n        opt,\n        {\n            aa: 1,\n            bb: null,\n            ee: [\n                1, null, null\n            ],\n            ff: {\n                gg: 1,\n                hh: 2\n            }\n        }\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_jwtAes256GcmXxx_default = function (opt, onError) {\n/*\n * this function will test jwtAes256GcmXxx's default handling-behavior\n */\n    opt = {};\n    opt.key = local.jwtAes256KeyCreate();\n    // use canonical example at https://jwt.io/\n    opt.data = JSON.parse(local.jsonStringifyOrdered(local.normalizeJwt({\n        sub: \"1234567890\",\n        name: \"John Doe\",\n        admin: true\n    })));\n    // encrypt token\n    opt.token = local.jwtAes256GcmEncrypt(opt.data, opt.key);\n    // validate encrypted-token\n    local.assertJsonEqual(\n        local.jwtAes256GcmDecrypt(opt.token, opt.key),\n        opt.data\n    );\n    // test decryption-failed handling-behavior\n    local.assertJsonEqual(local.jwtAes256GcmDecrypt(opt.token, null), {});\n    onError(null, opt);\n};\n\nlocal.testCase_jwtHs256Xxx_default = function (opt, onError) {\n/*\n * this function will test jwtHs256Xxx's default handling-behavior\n */\n    opt = {};\n    opt.key = local.normalizeJwtBase64Url(local.base64FromBuffer(\"secret\"));\n    // use canonical example at https://jwt.io/\n    opt.data = {\n        sub: \"1234567890\",\n        name: \"John Doe\",\n        admin: true\n    };\n    opt.token = local.jwtHs256Encode(opt.data, opt.key);\n    // validate encoded-token\n    local.assertJsonEqual(\n        opt.token,\n        (\n            \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n            + \".eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZ\"\n            + \"SI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9\"\n            + \".TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\"\n        )\n    );\n    // validate decoded-data\n    local.assertJsonEqual(\n        local.jwtHs256Decode(opt.token, opt.key),\n        {\n            admin: true,\n            name: \"John Doe\",\n            sub: \"1234567890\"\n        }\n    );\n    // test decoding-failed handling-behavior\n    local.assertJsonEqual(local.jwtHs256Decode(opt.token, \"undefined\"), {});\n    onError(null, opt);\n};\n\nlocal.testCase_libUtility2Js_standalone = function (opt, onError) {\n/*\n * this function will test lib.utility2.js's standalone handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.fs.writeFileSync(\"tmp/lib.utility2.js\", local.fs.readFileSync(\n        \"lib.utility2.js\",\n        \"utf8\"\n    ).replace(\"/* istanbul instrument in package utility2 */\", \"\"));\n    require(\"./tmp/lib.utility2.js\");\n    onError(null, opt);\n};\n\nlocal.testCase_listGetElementRandom_default = function (opt, onError) {\n/*\n * this function will test listGetRandom's default handling-behavior\n */\n    opt = {};\n    // init list\n    opt.list = [\n        \"aa\", \"bb\", \"cc\", \"dd\"\n    ];\n    opt.elemDict = {};\n    // get 1000 random elem from list\n    opt.ii = 0;\n    while (opt.ii < 1000) {\n        opt.elemDict[local.listGetElementRandom(opt.list)] = true;\n        opt.ii += 1;\n    }\n    // validate all elem were retrieved from list\n    local.assertJsonEqual(\n        Object.keys(opt.elemDict).sort(),\n        [\n            \"aa\", \"bb\", \"cc\", \"dd\"\n        ]\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_listShuffle_default = function (opt, onError) {\n/*\n * this function will test listShuffle's default handling-behavior\n */\n    opt = {};\n    // init list\n    opt.list = \"[0,1]\";\n    // shuffle list 100 times\n    opt.ii = 0;\n    while (opt.ii < 100) {\n        opt.listShuffled = JSON.stringify(\n            local.listShuffle(JSON.parse(opt.list))\n        );\n        // validate shuffled list\n        local.assertJsonEqual(opt.listShuffled.length, opt.list.length);\n        opt.changed = opt.changed || opt.listShuffled !== opt.list;\n        opt.ii += 1;\n    }\n    // validate list changed at least once during the shuffle\n    local.assertThrow(opt.changed, opt);\n    onError(null, opt);\n};\n\nlocal.testCase_localStorageSetItemOrClear_default = function (\n    opt,\n    onError\n) {\n/*\n * this function will localStorageSetItemOrClear's default handling-behavior\n */\n    if (!local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.localStorageSetItemOrClear(\n        \"testCase_localStorageSetItemOrClear_default\",\n        null\n    );\n    local.assertJsonEqual(\n        localStorage.testCase_localStorageSetItemOrClear_default,\n        \"null\"\n    );\n    local.testMock([\n        [\n            localStorage, {\n                clear: null,\n                setItem: function () {\n                    throw local.errDefault;\n                }\n            }\n        ]\n    ], function (onError) {\n        localStorage.clear = onError;\n        local.localStorageSetItemOrClear(\n            \"testCase_localStorageSetItemOrClear_default\",\n            null\n        );\n    }, onError);\n};\n\nlocal.testCase_middlewareForwardProxy_default = function (opt, onError) {\n/*\n * this function will test middlewareForwardProxy's default handling-behavior\n */\n    var onParallel;\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    onParallel = local.onParallel(onError);\n    onParallel.counter += 1;\n    // test preflight-cors handling-behavior\n    onParallel.counter += 1;\n    local.ajax({\n        headers: {\n            \"access-control-request-headers\": (\n                \"forward-proxy-headers,forward-proxy-url\"\n            )\n        },\n        method: \"OPTIONS\",\n        url: \"\"\n    }, onParallel);\n    // test forward-proxy-http handling-behavior\n    onParallel.counter += 1;\n    local.ajax({\n        headers: {\n            \"forward-proxy-url\": \"/assets.hello.txt\"\n        },\n        url: \"\"\n    }, function (err, xhr) {\n        // validate no err occurred\n        local.assertThrow(!err, err);\n        // validate responseText\n        local.assertJsonEqual(xhr.responseText, local.stringHelloEmoji);\n        onParallel(null, opt, xhr);\n    });\n    // test err handling-behavior\n    onParallel.counter += 1;\n    local.ajax({\n        headers: {\n            \"forward-proxy-url\": \"https://undefined:0\"\n        },\n        url: \"\"\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        onParallel(null, opt);\n    });\n    onParallel(null, opt);\n};\n\nlocal.testCase_middlewareJsonpStateInit_assetsList = function (\n    opt,\n    onError\n) {\n/*\n * this function will middlewareJsonpStateInit's assetsList handling-behavior\n */\n    local.testMock([\n        [\n            local.env, {\n                npm_package_assetsList: \"undefined\"\n            }\n        ], [\n            local, {\n                assetsDict: {}\n            }\n        ]\n    ], function (onError) {\n        local.middlewareJsonpStateInit({\n            stateInit: true\n        });\n        // validate data\n        local.assertJsonEqual(local.assetsDict[\"/undefined\"], \"\");\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_moduleDirname_default = function (opt, onError) {\n/*\n * this function will test moduleDirname's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    // test null-case handling-behavior\n    local.assertJsonEqual(\n        local.moduleDirname(null, module.paths),\n        process.cwd()\n    );\n    // test path handling-behavior\n    local.assertJsonEqual(\n        local.moduleDirname(\".\", module.paths),\n        process.cwd()\n    );\n    local.assertJsonEqual(\n        local.moduleDirname(\"./\", module.paths),\n        process.cwd()\n    );\n    // test module-exists handling-behavior\n    opt = local.moduleDirname(\"electron-lite\", module.paths);\n    local.assertThrow((\n        /\\/electron-lite$/\n    ).test(opt), opt);\n    // test module-does-not-exist handling-behavior\n    local.assertJsonEqual(\n        local.moduleDirname(\"syntax-err\", module.paths),\n        \"\"\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_numberToRomanNumerals_default = function (opt, onError) {\n/*\n * this function will test numberToRomanNumerals's default handling-behavior\n */\n    opt = {};\n    opt.list = [\n        \"\",\n        \"I\",\n        \"II\",\n        \"III\",\n        \"IV\",\n        \"V\",\n        \"VI\",\n        \"VII\",\n        \"VIII\",\n        \"IX\",\n        \"X\",\n        \"XI\",\n        \"XII\",\n        \"XIII\",\n        \"XIV\",\n        \"XV\",\n        \"XVI\",\n        \"XVII\",\n        \"XVIII\",\n        \"XIX\",\n        \"XX\",\n        \"XXI\",\n        \"XXII\",\n        \"XXIII\",\n        \"XXIV\",\n        \"XXV\",\n        \"XXVI\",\n        \"XXVII\",\n        \"XXVIII\",\n        \"XXIX\",\n        \"XXX\",\n        \"XXXI\",\n        \"XXXII\",\n        \"XXXIII\",\n        \"XXXIV\",\n        \"XXXV\",\n        \"XXXVI\",\n        \"XXXVII\",\n        \"XXXVIII\",\n        \"XXXIX\",\n        \"XL\",\n        \"XLI\",\n        \"XLII\",\n        \"XLIII\",\n        \"XLIV\",\n        \"XLV\",\n        \"XLVI\",\n        \"XLVII\",\n        \"XLVIII\",\n        \"XLIX\",\n        \"L\",\n        \"LI\",\n        \"LII\",\n        \"LIII\",\n        \"LIV\",\n        \"LV\",\n        \"LVI\",\n        \"LVII\",\n        \"LVIII\",\n        \"LIX\",\n        \"LX\",\n        \"LXI\",\n        \"LXII\",\n        \"LXIII\",\n        \"LXIV\",\n        \"LXV\",\n        \"LXVI\",\n        \"LXVII\",\n        \"LXVIII\",\n        \"LXIX\",\n        \"LXX\",\n        \"LXXI\",\n        \"LXXII\",\n        \"LXXIII\",\n        \"LXXIV\",\n        \"LXXV\",\n        \"LXXVI\",\n        \"LXXVII\",\n        \"LXXVIII\",\n        \"LXXIX\",\n        \"LXXX\",\n        \"LXXXI\",\n        \"LXXXII\",\n        \"LXXXIII\",\n        \"LXXXIV\",\n        \"LXXXV\",\n        \"LXXXVI\",\n        \"LXXXVII\",\n        \"LXXXVIII\",\n        \"LXXXIX\",\n        \"XC\",\n        \"XCI\",\n        \"XCII\",\n        \"XCIII\",\n        \"XCIV\",\n        \"XCV\",\n        \"XCVI\",\n        \"XCVII\",\n        \"XCVIII\",\n        \"XCIX\",\n        \"C\"\n    ];\n    opt.ii = 0;\n    while (opt.ii < 10) {\n        local.assertJsonEqual(\n            local.numberToRomanNumerals(opt.ii),\n            opt.list[opt.ii]\n        );\n        opt.ii += 1;\n    }\n    onError(null, opt);\n};\n\nlocal.testCase_objectSetDefault_default = function (opt, onError) {\n/*\n * this function will test objectSetDefault's default handling-behavior\n */\n    // test null-case handling-behavior\n    local.objectSetDefault();\n    local.objectSetDefault({});\n    // test falsy handling-behavior\n    [\n        \"\", 0, false, null, undefined\n    ].forEach(function (aa) {\n        [\n            \"\", 0, false, null, undefined\n        ].forEach(function (bb) {\n            local.assertJsonEqual(\n                local.objectSetDefault({\n                    data: aa\n                }, {\n                    data: bb\n                }).data,\n                (aa === 0 || aa === false || bb === undefined)\n                ? aa\n                : bb\n            );\n        });\n    });\n    // test non-recursive handling-behavior\n    local.assertJsonEqual(local.objectSetDefault({\n        aa: 0,\n        bb: {\n            cc: 1\n        },\n        cc: {\n            dd: {}\n        },\n        dd: [\n            1, 1\n        ],\n        ee: [\n            1, 1\n        ]\n    }, {\n        aa: 2,\n        bb: {\n            dd: 2\n        },\n        cc: {\n            dd: {\n                ee: 2\n            }\n        },\n        dd: [\n            2, 2\n        ],\n        ee: {\n            ff: 2\n        }\n    // test default-depth handling-behavior\n    }, null), {\n        aa: 0,\n        bb: {\n            cc: 1\n        },\n        cc: {\n            dd: {}\n        },\n        dd: [\n            1, 1\n        ],\n        ee: [\n            1, 1\n        ]\n    });\n    // test recursive handling-behavior\n    local.assertJsonEqual(local.objectSetDefault({\n        aa: 0,\n        bb: {\n            cc: 1\n        },\n        cc: {\n            dd: {}\n        },\n        dd: [\n            1, 1\n        ],\n        ee: [\n            1, 1\n        ]\n    }, {\n        aa: 2,\n        bb: {\n            dd: 2\n        },\n        cc: {\n            dd: {\n                ee: 2\n            }\n        },\n        dd: [\n            2, 2\n        ],\n        ee: {\n            ff: 2\n        }\n    // test depth handling-behavior\n    }, 2), {\n        aa: 0,\n        bb: {\n            cc: 1,\n            dd: 2\n        },\n        cc: {\n            dd: {}\n        },\n        dd: [\n            1, 1\n        ],\n        ee: [\n            1, 1\n        ]\n    });\n    onError(null, opt);\n};\n\nlocal.testCase_objectSetOverride_default = function (opt, onError) {\n/*\n * this function will test objectSetOverride's default handling-behavior\n */\n    // test null-case handling-behavior\n    local.objectSetOverride();\n    local.objectSetOverride({});\n    // test falsy handling-behavior\n    [\n        \"\", 0, false, null, undefined\n    ].forEach(function (aa) {\n        [\n            \"\", 0, false, null, undefined\n        ].forEach(function (bb) {\n            local.assertJsonEqual(\n                local.objectSetOverride({\n                    data: aa\n                }, {\n                    data: bb\n                }).data,\n                bb === undefined\n                ? aa\n                : bb\n            );\n        });\n    });\n    // test non-recursive handling-behavior\n    local.assertJsonEqual(local.objectSetOverride({\n        aa: 1,\n        bb: {\n            cc: 1\n        },\n        cc: {\n            dd: 1\n        },\n        dd: [\n            1, 1\n        ],\n        ee: [\n            1, 1\n        ]\n    }, {\n        aa: 2,\n        bb: {\n            dd: 2\n        },\n        cc: {\n            ee: 2\n        },\n        dd: [\n            2, 2\n        ],\n        ee: {\n            ff: 2\n        }\n    // test default-depth handling-behavior\n    }, null), {\n        aa: 2,\n        bb: {\n            dd: 2\n        },\n        cc: {\n            ee: 2\n        },\n        dd: [\n            2, 2\n        ],\n        ee: {\n            ff: 2\n        }\n    });\n    // test recursive handling-behavior\n    local.assertJsonEqual(local.objectSetOverride({\n        aa: 1,\n        bb: {\n            cc: 1\n        },\n        cc: {\n            dd: 1\n        },\n        dd: [\n            1, 1\n        ],\n        ee: [\n            1, 1\n        ]\n    }, {\n        aa: 2,\n        bb: {\n            dd: 2\n        },\n        cc: {\n            ee: 2\n        },\n        dd: [\n            2, 2\n        ],\n        ee: {\n            ff: 2\n        }\n    // test depth handling-behavior\n    }, 2), {\n        aa: 2,\n        bb: {\n            cc: 1,\n            dd: 2\n        },\n        cc: {\n            dd: 1,\n            ee: 2\n        },\n        dd: [\n            2, 2\n        ],\n        ee: {\n            ff: 2\n        }\n    });\n    // test env with empty-string handling-behavior\n    local.assertJsonEqual(local.objectSetOverride(\n        local.env,\n        {\n            \"emptyString\": null\n        },\n        // test default-depth handling-behavior\n        null,\n        local.env\n    ).emptyString, \"\");\n    onError(null, opt);\n};\n\nlocal.testCase_onErrorDefault_default = function (opt, onError) {\n/*\n * this function will test onErrorDefault's default handling-behavior\n */\n    local.testMock([\n        [\n            console, {\n                error: function (arg) {\n                    opt = arg;\n                }\n            }\n        ], [\n            globalThis, {\n                __coverage__: null\n            }\n        ]\n    ], function (onError) {\n        // test no err handling-behavior\n        local.onErrorDefault();\n        // validate opt\n        local.assertThrow(!opt, opt);\n        // test err handling-behavior\n        local.onErrorDefault(local.errDefault);\n        // validate opt\n        local.assertThrow(opt, opt);\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_onErrorThrow_err = function (opt, onError) {\n/*\n * this function will test onErrorThrow's err handling-behavior\n */\n    local.tryCatchOnError(function () {\n        local.onErrorThrow(local.errDefault);\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        onError(null, opt);\n    });\n};\n\nlocal.testCase_onErrorWithStack_toString = function (opt, onError) {\n/*\n * this function will test onErrorWithStack's toString handling-behavior\n */\n    local.assertJsonEqual(\n        String(local.onErrorWithStack(local.nop)),\n        String(local.nop)\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_onFileModifiedRestart_watchFile = function (opt, onError) {\n/*\n * this function will test onFileModifiedRestart's watchFile handling-behavior\n */\n    var onParallel;\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    onParallel = local.onParallel(onError);\n    onParallel.counter += 1;\n    local.fs.stat(__filename, function (err, stat) {\n        // test default watchFile handling-behavior\n        onParallel.counter += 1;\n        local.fs.utimes(__filename, stat.atime, new Date(), onParallel);\n        // test nop watchFile handling-behavior\n        onParallel.counter += 1;\n        setTimeout(function () {\n            local.fs.utimes(__filename, stat.atime, stat.mtime, onParallel);\n        }, 1000);\n        onParallel(err, opt);\n    });\n};\n\nlocal.testCase_onNext_err = function (opt, onError) {\n/*\n * this function will test onNext's err handling-behavior\n */\n\n    opt = {};\n    opt.modeDebug = true;\n    local.onNext(opt, function () {\n        throw local.errDefault;\n    });\n    opt.modeNext = 0;\n    local.tryCatchOnError(function () {\n        opt.onNext();\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        onError(null, opt);\n    });\n};\n\nlocal.testCase_onParallelList_default = function (opt, onError) {\n/*\n * this function will test onParallelList's default handling-behavior\n */\n    opt = {};\n    local.onNext(opt, function (err) {\n        switch (opt.modeNext) {\n        case 1:\n            // test null-case handling-behavior\n            local.onParallelList({}, local.onErrorThrow, opt.onNext);\n            break;\n        case 2:\n            opt.list = [\n                null\n            ];\n            // test retryLimit handling-behavior\n            opt.retryLimit = 1;\n            local.onParallelList(opt, function (option2, onParallel) {\n                onParallel.counter += 1;\n                // test err handling-behavior\n                onParallel(local.errDefault, option2);\n                // test multiple-callback handling-behavior\n                setTimeout(onParallel, 5000);\n            }, function (err) {\n                // validate err occurred\n                local.assertThrow(err, err);\n                opt.onNext();\n            });\n            break;\n        case 3:\n            opt.data = [];\n            // test rateLimit handling-behavior\n            opt.rateLimit = 3;\n            opt.rateMax = 0;\n            // test retryLimit handling-behavior\n            opt.retryLimit = 1;\n            local.onParallelList({\n                list: [\n                    1, 2, 3, 4\n                ],\n                rateLimit: opt.rateLimit\n            }, function (option2, onParallel) {\n                onParallel.counter += 1;\n                opt.rateMax = Math.max(\n                    onParallel.counter - 1,\n                    opt.rateMax\n                );\n                // test async handling-behavior\n                setTimeout(function () {\n                    // test list-growth handling-behavior\n                    if (option2.ii === 3) {\n                        option2.list.push(5);\n                    }\n                    opt.data[option2.ii] = option2.elem;\n                    // test retry handling-behavior\n                    local.assertThrow(option2.retry < 1);\n                    onParallel(null, option2);\n                });\n            }, opt.onNext, opt.rateLimit);\n            break;\n        case 4:\n            // validate data\n            local.assertJsonEqual(opt.data, [\n                1, 2, 3, 4, 5\n            ]);\n            local.assertJsonEqual(opt.rateMax, 3);\n            opt.data = [];\n            opt.rateLimit = \"syntax-err\";\n            opt.rateMax = 0;\n            local.onParallelList({\n                list: [\n                    1, 2, 3, 4, 5\n                ],\n                rateLimit: opt.rateLimit\n            }, function (option2, onParallel) {\n                // test sync handling-behavior\n                onParallel.counter += 1;\n                opt.rateMax = Math.max(onParallel.counter, opt.rateMax);\n                opt.data[option2.ii] = option2.elem;\n                onParallel(null, opt);\n            }, opt.onNext);\n            break;\n        case 5:\n            // validate data\n            local.assertJsonEqual(opt.data, [\n                1, 2, 3, 4, 5\n            ]);\n            local.assertJsonEqual(opt.rateMax, 2);\n            opt.onNext();\n            break;\n        default:\n            onError(err, opt);\n        }\n    });\n    opt.modeNext = 0;\n    opt.onNext();\n};\n\nlocal.testCase_onParallel_default = function (opt, onError) {\n/*\n * this function will test onParallel's default handling-behavior\n */\n    var onParallel;\n    var onParallelError;\n    // test onEach handling-behavior\n    onParallel = local.onParallel(onError, function () {\n        // validate counter\n        local.assertThrow(onParallel.counter >= 0, onParallel);\n    });\n    onParallel.counter += 1;\n    // test multiple-task handling-behavior\n    onParallel.counter += 1;\n    setTimeout(function () {\n        onParallelError = local.onParallel(onParallel);\n        onParallelError.counter += 1;\n        onParallelError();\n        // test multiple-callback-error handling-behavior\n        onParallelError();\n        // validate err occurred\n        local.assertThrow(onParallelError.err, onParallelError.err);\n        // test err handling-behavior\n        onParallelError(local.errDefault);\n        // validate err occurred\n        local.assertThrow(onParallelError.err, onParallelError.err);\n        // test ignore-after-error handling-behavior\n        onParallelError();\n    });\n    // test default handling-behavior\n    onParallel(null, opt);\n};\n\nlocal.testCase_onTimeout_timeout = function (opt, onError) {\n/*\n * this function will test onTimeout's timeout handling-behavior\n */\n    opt = local.timeElapsedStart();\n    local.onTimeout(function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        // validate err.message\n        local.assertThrow(\n            err.message.indexOf(\"testCase_onTimeout_timeout\") >= 0,\n            err\n        );\n        // poll timeElapsed\n        local.timeElapsedPoll(opt);\n        // validate timeElapsed passed is greater than timeout\n        local.assertThrow(opt.timeElapsed >= 1000, opt);\n        onError(null, opt);\n    }, 1000, \"testCase_onTimeout_timeout\");\n};\n\nlocal.testCase_profileXxx_default = function (opt, onError) {\n/*\n * this function will test profileXxx's default handling-behavior\n */\n    opt = {};\n    // test profileSync's handling-behavior\n    opt.timeElapsed = local.profileSync(function () {\n        return;\n    });\n    // validate timeElapsed\n    local.assertThrow(\n        0 <= opt.timeElapsed && opt.timeElapsed < 1000,\n        opt.timeElapsed\n    );\n    // test profile's async handling-behavior\n    local.profile(function (onError) {\n        setTimeout(onError);\n    }, function (err, timeElapsed) {\n        // validate no err occurred\n        local.assertThrow(!err, err);\n        opt.timeElapsed = timeElapsed;\n        // validate timeElapsed\n        local.assertThrow((\n            0 <= opt.timeElapsed\n            && opt.timeElapsed < local.timeoutDefault\n        ), opt.timeElapsed);\n        onError(null, opt);\n    });\n};\n\nlocal.testCase_replStart_default = function (opt, onError) {\n/*\n * this function will test replStart's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.replStart();\n    // coverage-hack - test replStart's muliple-call handling-behavior\n    local.replStart();\n    local.testMock([\n        [\n            local.child_process, {\n                spawn: function () {\n                    return {\n                        on: function (evt, callback) {\n                            callback(null, evt);\n                        }\n                    };\n                }\n            }\n        ],\n        // suppress process.stdout\n        [\n            process.stdout, {\n                write: local.nop\n            }\n        ]\n    ], function (onError) {\n        [\n            // test null-case handling-behavior\n            \"\",\n            // test shell handling-behavior\n            \"$ :\\n\",\n            // test git diff handling-behavior\n            \"$ git diff\\n\",\n            // test git log handling-behavior\n            \"$ git log\\n\",\n            // test charCode handling-behavior\n            \"charCode abcd\\n\",\n            // test charSort handling-behavior\n            \"charSort abcd\\n\",\n            // test grep handling-behavior\n            \"grep \\\\baa\\\\b\\n\",\n            // test keys handling-behavior\n            \"keys {}\\n\",\n            // test print handling-behavior\n            \"print abcd\\n\",\n            // test err handling-behavior\n            \"undefined()\\n\"\n        ].forEach(function (script) {\n            globalThis.utility2_repl1.eval(script, null, \"repl\", local.nop);\n        });\n        // test err handling-behavior\n        globalThis.utility2_repl1.onError(local.errDefault);\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_replStart_tcp = function (opt, onError) {\n/*\n * this function will test replStart's tcp handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    opt = {};\n    opt.data = \"\";\n    opt.input = Math.random();\n    opt.socket = local.net.createConnection(local.env.PORT_REPL);\n    opt.socket.on(\"data\", function (data) {\n    /*\n     * this function will concat data to opt.data\n     */\n        opt.data += data;\n    });\n    opt.socket.setEncoding(\"utf8\");\n    opt.socket.on(\"end\", function () {\n        // validate data\n        local.assertThrow(\n            opt.data.indexOf(opt.input) >= 0,\n            JSON.stringify([\n                opt.data, opt.input\n            ])\n        );\n        onError(null, opt);\n    });\n    opt.socket.write(opt.input + \"\\n\");\n    // test err handling-behavior\n    opt.socket.end(\"undefined()\\n\");\n};\n\nlocal.testCase_requireReadme_start = function (opt, onError) {\n/*\n * this function will test requireReadme's start handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.testMock([\n        [\n            local, {\n                assetsDict: {},\n                onFileModifiedRestart: local.nop\n            }\n        ], [\n            local.env, {\n                npm_config_mode_start: \"1\",\n                npm_package_nameLib: \"_testCase_requireReadme_start\"\n            }\n        ], [\n            local.fs, {\n                readFile: function (file, opt, onError) {\n                    onError(null, \"{}\", file, opt);\n                },\n                readdirSync: function () {\n                    // test jslintAndPrint.conditional handling-behavior\n                    return [\n                        \"aa.css\",\n                        \"aa.html\",\n                        \"aa.js\",\n                        \"aa.json\",\n                        \"aa.rollup.js\",\n                        \"assets.swgg.swagger.json\"\n                    ];\n                }\n            }\n        ]\n    ], function (onError) {\n        // validate data\n        local.requireReadme();\n        local.assertThrow(local._testCase_requireReadme_start === local);\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_semverCompare_default = function (opt, onError) {\n/*\n * this function will test semverCompare's default handling-behavior\n */\n    var aa;\n    // test aa = bb\n    opt = [\n        \"1.2.3\",\n        \"1.2.3-\",\n        \"1.2.3-alpha.beta\",\n        \"1.2.3-alpha.beta\"\n    ];\n    opt.forEach(function (bb, ii) {\n        if (Boolean(ii & 1)) {\n            local.assertThrow(\n                local.semverCompare(aa, bb) === 0,\n                [\n                    local.semverCompare(aa, bb), aa, bb\n                ]\n            );\n        }\n        aa = bb;\n    });\n    opt = [\n        \"1.2.3-a\",\n        \"1.2.3-a.2\",\n        \"1.2.3-a.10\",\n        \"1.2.3-b\",\n        \"1.2.3\",\n        \"1.2.10\"\n    ];\n    // test aa < bb\n    opt.reduce(function (aa, bb) {\n        local.assertThrow(\n            local.semverCompare(aa, bb) === -1,\n            [\n                local.semverCompare(aa, bb), aa, bb\n            ]\n        );\n        return bb;\n    });\n    // test aa > bb\n    opt.reverse().reduce(function (aa, bb) {\n        local.assertThrow(\n            local.semverCompare(aa, bb) === 1,\n            [\n                local.semverCompare(aa, bb), aa, bb\n            ]\n        );\n        return bb;\n    });\n    onError(null, opt);\n};\n\nlocal.testCase_serverRespondTimeoutDefault_timeout = function (\n    opt,\n    onError\n) {\n/*\n * this function will test\n * serverRespondTimeoutDefault's timeout handling-behavior\n */\n    opt = function (fnc1, fnc2) {\n        [\n            fnc1, fnc2\n        ].forEach(function (fnc) {\n            if (typeof fnc === \"function\") {\n                fnc();\n            }\n        });\n    };\n    local.testMock([\n        [\n            local, {\n                onTimeout: opt,\n                serverRespondDefault: local.nop,\n                setTimeout: opt\n            }\n        ]\n    ], function (onError) {\n        local.serverRespondTimeoutDefault({\n            headers: {}\n        }, {\n            on: opt\n        });\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_setTimeoutOnError_default = function (opt, onError) {\n/*\n * this function will test setTimeoutOnError's default handling-behavior\n */\n    // test null-case handling-behavior\n    local.assertJsonEqual(local.setTimeoutOnError(), undefined);\n    // test onError handling-behavior\n    local.assertJsonEqual(\n        local.setTimeoutOnError(onError, 0, null, {}, opt),\n        {}\n    );\n};\n\nlocal.testCase_sjclHashScryptXxx_default = function (opt, onError) {\n/*\n * this function will test sjclHashScryptXxx's default handling-behavior\n */\n    // test sjclHashScryptCreate's null-case handling-behavior\n    local.assertJsonEqual(\n        local.sjclHashScryptCreate().slice(0, 10),\n        \"$s0$10801$\"\n    );\n    // https://github.com/wg/scrypt\n    // test sjclHashScryptValidate's fail handling-behavior\n    local.assertJsonEqual(local.sjclHashScryptValidate(\n        \"password\",\n        (\n            \"$s0$80801$epIxT/h6HbbwHaehFnh/bw==\"\n            + \"$l/guDhz2Q0v/D93gq0K0qtSX6FWP8pH5maAJkbIcRaEA\"\n        )\n    ), false);\n    // https://github.com/wg/scrypt\n    // test sjclHashScryptValidate's pass handling-behavior\n    local.assertJsonEqual(local.sjclHashScryptValidate(\"password\", (\n        \"$s0$80801$epIxT/h6HbbwHaehFnh/bw==\"\n        + \"$l/guDhz2Q0v/D93gq0K0qtSX6FWP8pH5maAJkbIcRaE=\"\n    )), true);\n    onError(null, opt);\n};\n\nlocal.testCase_sjclHashShaXxxCreate_default = function (opt, onError) {\n/*\n * this function will test sjclHashShaXxxCreate's default handling-behavior\n */\n    local.assertJsonEqual(\n        local.sjclHashSha1Create(\"aa\"),\n        \"4MkDWJjdUvxlxBRUzsnE0mEb+zc=\"\n    );\n    local.assertJsonEqual(\n        local.sjclHashSha256Create(\"aa\"),\n        \"lhtt0+3jy47LqsvWjeBAzXjrLtWIkTDM60xJJo6k1QY=\"\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_sjclHmacShaXxx_default = function (opt, onError) {\n/*\n * this function will test sjclHmacShaXxx's default handling-behavior\n */\n    local.assertJsonEqual(\n        local.sjclHmacSha1Create(\"aa\", \"bb\"),\n        \"15pOinCz63A+qZoxnv+mJB6UF1k=\"\n    );\n    local.assertJsonEqual(\n        local.sjclHmacSha256Create(\"aa\", \"bb\"),\n        \"94Xv3VdPHA+ohKyjkM1pb0W5ZVAuMVcmIAAI2AqNRCQ=\"\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_stringHtmlSafe_default = function (opt, onError) {\n/*\n * this function will test stringHtmlSafe's default handling-behavior\n */\n    local.assertJsonEqual(\n        local.stringHtmlSafe(\n            local.stringHtmlSafe(local.stringCharsetAscii).slice(32, -1)\n        ),\n        (\n            \" !&quot;#$%&amp;&apos;()*+,-./0123456789:;&lt;=&gt;?@\"\n            + \"ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n        )\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_stringQuotedToAscii_default = function (opt, onError) {\n/*\n * this function will test stringQuotedToAscii's default handling-behavior\n */\n    local.assertJsonEqual(\n        local.stringQuotedToAscii(local.stringHelloEmoji),\n        \"hello \\\\ud83d\\\\ude01\\n\"\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_stringRegexpEscape_default = function (opt, onError) {\n/*\n * this function will test stringRegexpEscape's default handling-behavior\n */\n    local.assertJsonEqual(\n        local.stringRegexpEscape(local.stringCharsetAscii),\n        (\n            \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\"\n            + \"\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\"\n            + \"\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\"\n            + \"\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f\"\n            + \" !\\\"#\\\\$%&'\\\\(\\\\)\\\\*\\\\+,\\\\-\\\\.\\\\/0123456789:;<=>\\\\?@\"\n            + \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\\[\\\\\\\\\\\\]\\\\^_`\"\n            + \"abcdefghijklmnopqrstuvwxyz\\\\{\\\\|\\\\}~\"\n            + \"\\u007f\"\n        )\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_stringTruncate_default = function (opt, onError) {\n/*\n * this function will test stringTruncate's default handling-behavior\n */\n    local.assertJsonEqual(local.stringTruncate(\"aa\"), \"aa\");\n    local.assertJsonEqual(local.stringTruncate(\"aa\", 1), \"...\");\n    local.assertJsonEqual(local.stringTruncate(\"aa\", 2), \"aa\");\n    onError(null, opt);\n};\n\nlocal.testCase_stringUniqueKey_default = function (opt, onError) {\n/*\n * this function will test stringUniqueKey's default handling-behavior\n */\n    local.assertThrow((\"zqxj\").indexOf(local.stringUniqueKey(\"zqxj\") < 0));\n    onError(null, opt);\n};\n\nlocal.testCase_taskCreateCached_default = function (opt, onError) {\n/*\n * this function will test taskCreateCached's default handling-behavior\n */\n    var cacheValue;\n    var onTask;\n    var option2;\n    opt = {};\n    local.onNext(opt, function (err, data) {\n        switch (opt.modeNext) {\n        // test no cache handling-behavior\n        case 1:\n            onTask = function (onError) {\n                onError(null, cacheValue);\n            };\n            opt.cacheDict = \"testCase_taskCreateCached_default\";\n            opt.key = \"memory\";\n            // cleanup memory-cache\n            local.cacheDict[opt.cacheDict] = null;\n            cacheValue = \"aa\";\n            option2 = {\n                cacheDict: opt.cacheDict,\n                key: opt.key,\n                // test onCacheWrite handling-behavior\n                onCacheWrite: opt.onNext\n            };\n            local.taskCreateCached(option2, onTask, opt.onNext);\n            break;\n        case 2:\n            // validate data\n            local.assertJsonEqual(data, \"aa\");\n            // validate no cache-hit\n            local.assertThrow(!option2.modeCacheHit, option2.modeCacheHit);\n            break;\n        // test cache with update handling-behavior\n        case 3:\n            cacheValue = \"bb\";\n            option2 = {\n                cacheDict: opt.cacheDict,\n                key: opt.key,\n                // test modeCacheUpdate handling-behavior\n                modeCacheUpdate: true,\n                // test onCacheWrite handling-behavior\n                onCacheWrite: opt.onNext\n            };\n            local.taskCreateCached(option2, onTask, opt.onNext);\n            break;\n        case 4:\n            // validate data\n            local.assertJsonEqual(data, \"aa\");\n            // validate modeCacheHit\n            local.assertJsonEqual(option2.modeCacheHit, true);\n            break;\n        // test cache handling-behavior\n        case 5:\n            option2 = {\n                cacheDict: opt.cacheDict,\n                key: opt.key\n            };\n            local.taskCreateCached(option2, onTask, opt.onNext);\n            break;\n        case 6:\n            // validate data\n            local.assertJsonEqual(data, \"bb\");\n            // validate modeCacheHit\n            local.assertJsonEqual(option2.modeCacheHit, true);\n            opt.onNext();\n            break;\n        default:\n            onError(err, opt);\n        }\n    });\n    opt.modeNext = 0;\n    opt.onNext();\n};\n\nlocal.testCase_taskCreate_multipleCallback = function (opt, onError) {\n/*\n * this function will test taskCreate's multiple-callback handling-behavior\n */\n    opt = {\n        counter: 0,\n        key: \"testCase_taskCreate_multiCallback\"\n    };\n    local.taskCreate(opt, function (onError) {\n        onError(null, opt);\n        // test multiple-callback handling-behavior\n        onError(null, opt);\n    }, function () {\n        opt.counter += 1;\n    });\n    // validate counter incremented once\n    local.assertJsonEqual(opt.counter, 1);\n    onError(null, opt);\n};\n\nlocal.testCase_taskCreate_upsert = function (opt, onError) {\n/*\n * this function will test taskCreate's upsert handling-behavior\n */\n    opt = {\n        counter: 0,\n        key: \"testCase_taskCreate_upsert\"\n    };\n    // test upsert handling-behavior\n    [\n        null, null\n    ].forEach(function () {\n        local.taskCreate(opt, function (onError) {\n            opt.counter += 1;\n            setTimeout(onError);\n        });\n    });\n    // validate counter incremented once\n    setTimeout(function () {\n        local.assertJsonEqual(opt.counter, 1);\n        onError(null, opt);\n    });\n};\n\nlocal.testCase_templateRender_default = function (opt, onError) {\n/*\n * this function will test templateRender's default handling-behavior\n */\n    // test null-case handling-behavior\n    local.assertJsonEqual(local.templateRender(), \"\");\n    // test undefined-value handling-behavior\n    local.assertJsonEqual(local.templateRender(\"{{aa}}\", {}), \"{{aa}}\");\n    // test basic handling-behavior\n    local.assertJsonEqual(local.templateRender(\"{{aa}}\", {\n        aa: \"```<aa\\nbb>```\"\n    }), \"```&lt;aa\\nbb&gt;```\");\n    // test markdownToHtml handling-behavior\n    local.assertJsonEqual(\n        local.templateRender(\"{{aa markdownToHtml}}\", {\n            aa: local.stringCharsetAscii.slice(32, -1)\n        }),\n        (\n            \"<p> !&quot;#$%&amp;&apos;()*+,-./0123456789:;&lt;=&gt;?@\"\n            + \"ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n            + \"</p>\\n\"\n        )\n    );\n    // test markdownSafe handling-behavior\n    local.assertJsonEqual(\n        local.templateRender(\"{{aa markdownSafe notHtmlSafe}}\", {\n            aa: local.stringCharsetAscii.slice(32, -1)\n        }),\n        (\n            \" !\\\"#$%&'()*+,-./0123456789:;<=>?@\"\n            + \"ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_'abcdefghijklmnopqrstuvwxyz{|}~\"\n        )\n    );\n    // test notHtmlSafe handling-behavior\n    local.assertJsonEqual(local.templateRender(\"{{aa notHtmlSafe}}\", {\n        aa: \"```<aa\\nbb>```\"\n    }), \"```<aa\\nbb>```\");\n    // test default handling-behavior\n    local.assertJsonEqual(local.templateRender((\n        \"{{aa alphanumeric}} \"\n        + \"{{aa truncate 4 truncate 4}} \"\n        + \"{{aa jsonStringify jsonStringify4 decodeURIComponent\"\n        + \" encodeURIComponent trim}} \"\n        + \"{{bb}} {{cc}} {{dd}} {{ee.ff}}\"\n    ), {\n        // test string value handling-behavior\n        aa: \"`<aa>`\",\n        // test non-string value handling-behavior\n        bb: 1,\n        // test null-value handling-behavior\n        cc: null,\n        // test undefined-value handling-behavior\n        dd: undefined,\n        // test nested value handling-behavior\n        ee: {\n            ff: \"gg\"\n        }\n    }), \"__aa__ `... %22%5C%22%60%3Caa%3E%60%5C%22%22 1 null {{dd}} gg\");\n    // test partial handling-behavior\n    local.assertJsonEqual(\n        local.templateRender((\n            \"{{#undefined aa}}\\n\"\n            + \"list1{{#each list1}}\\n\"\n            + \"    aa - {{aa}}\\n\"\n            + \"    list2{{#eachTrimRightComma list2}}\\n\"\n            + \"        {{#this/ notHtmlSafe jsonStringify}}\\n\"\n            + \"        bb - {{bb}}\\n\"\n            + \"        {{#if bb}}\\n\"\n            + \"        if\\n\"\n            + \"        {{#unless bb}}\\n\"\n            + \"        else\\n\"\n            + \"        {{/if bb}}\\n\"\n            + \"        {{#unless bb}}\\n\"\n            + \"        unless\\n\"\n            + \"        {{/unless bb}}\\n\"\n            + \"        ,\\n\"\n            + \"    {{/eachTrimRightComma list2}}\\n\"\n            + \"{{/each list1}}\\n\"\n            + \"{{/undefined aa}}\\n\"\n        ), {\n            list1: [\n                // test null-value handling-behavior\n                null, {\n                    aa: \"aa\",\n                    // test recursive-list handling-behavior\n                    list2: [\n                        {\n                            bb: \"bb\"\n                        }, {\n                            bb: null\n                        }\n                    ]\n                }\n            ]\n        }),\n        (\n            \"{{#undefined aa}}\\n\"\n            + \"list1\\n\"\n            + \"    aa - {{aa}}\\n\"\n            + \"    list2\\n\"\n            + \"\\n\"\n            + \"    aa - aa\\n\"\n            + \"    list2\\n\"\n            + \"        {\\\"bb\\\":\\\"bb\\\"}\\n\"\n            + \"        bb - bb\\n\"\n            + \"        \\n\"\n            + \"        if\\n\"\n            + \"        \\n\"\n            + \"        \\n\"\n            + \"        ,\\n\"\n            + \"    \\n\"\n            + \"        {\\\"bb\\\":null}\\n\"\n            + \"        bb - null\\n\"\n            + \"        \\n\"\n            + \"        else\\n\"\n            + \"        \\n\"\n            + \"        \\n\"\n            + \"        unless\\n\"\n            + \"        \\n\"\n            + \"        \\n\"\n            + \"\\n\"\n            + \"{{/undefined aa}}\\n\"\n        )\n    );\n    // test err handling-behavior\n    local.tryCatchOnError(function () {\n        local.templateRender(\"{{aa bb}}\", {\n            aa: 1\n        });\n    }, local.nop);\n    // validate err occurred\n    local.assertThrow(local._debugTryCatchError, local._debugTryCatchError);\n    onError(null, opt);\n};\n\nlocal.testCase_testReportCreate_default = function (opt, onError) {\n/*\n * this function will test testReport's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.testMock([], function (onError) {\n        // test null-case handling-behavior\n        local.testReportCreate();\n        // test testsFailed handling-behavior\n        local.testReportCreate({\n            testPlatformList: [\n                {\n                    testCaseList: [\n                        {\n                            status: \"failed\"\n                        }, {\n                            status: \"passed\"\n                        }\n                    ]\n                }\n            ]\n        });\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_throwError_default = function (opt, onError) {\n/*\n * this function will test throwError's default handling-behavior\n */\n    local.tryCatchOnError(function () {\n        local.throwError();\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        onError(null, opt);\n    });\n};\n\nlocal.testCase_uiAnimateXxx_default = function (opt, onError) {\n/*\n * this function will test uiAnimateXxx's default handling-behavior\n */\n    if (!local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    opt = document.createElement(\"div\");\n    // test uiAnimateShake handling-behavior\n    local.uiAnimateShake();\n    local.uiAnimateShake(opt);\n    local.assertThrow(\n        opt.classList.contains(\"uiAnimateShake\"),\n        opt.classList\n    );\n    local.uiAnimateShake(opt);\n    local.assertThrow(\n        opt.classList.contains(\"uiAnimateShake\"),\n        opt.classList\n    );\n    // test uiAnimateShakeIfError handling-behavior\n    local.uiAnimateShakeIfError();\n    local.uiAnimateShakeIfError(null, opt);\n    local.assertThrow(\n        !opt.classList.contains(\"hasError\"),\n        opt.classList\n    );\n    local.uiAnimateShakeIfError(true, opt);\n    local.assertThrow(opt.classList.contains(\"hasError\"), opt.classList);\n    local.uiAnimateShakeIfError(null, opt);\n    local.assertThrow(!opt.classList.contains(\"hasError\"), opt.classList);\n    // test uiAnimateSlideXxx handling-behavior\n    local.uiAnimateSlideDown();\n    local.uiAnimateSlideUp();\n    opt.classList.add(\"uiAnimateSlide\");\n    local.uiAnimateSlideDown(opt);\n    local.assertThrow(\n        opt.style.maxHeight.indexOf(\"px\") >= 0,\n        opt.style.maxHeight\n    );\n    local.uiAnimateSlideUp(opt);\n    local.assertJsonEqual(opt.style.maxHeight, \"0px\");\n    // test uiAnimateSlideAccordian handling-behavior\n    local.uiAnimateSlideAccordian(\n        opt,\n        [\n            opt, document.createElement(\"div\")\n        ]\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_urlJoin_default = function (opt, onError) {\n/*\n * this function will test urlJoin's default handling-behavior\n */\n    local.assertJsonEqual(local.urlJoin(\"\", \"\"), \"/\");\n    local.assertJsonEqual(local.urlJoin(\"http://aa/bb\", \"zz\"), \"http://aa/zz\");\n    local.assertJsonEqual(\n        local.urlJoin(\"http://aa/bb/\", \"zz\"),\n        \"http://aa/bb/zz\"\n    );\n    local.assertJsonEqual(\n        local.urlJoin(\"http://aa/bb/\", \"/zz\"),\n        \"http://aa/zz\"\n    );\n    local.assertJsonEqual(local.urlJoin(\"http://aa/bb/\", \"//zz\"), \"http://zz\");\n    local.assertJsonEqual(\n        local.urlJoin(\"http://aa/bb/\", \"http://zz\"),\n        \"http://zz\"\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_urlParse_default = function (opt, onError) {\n/*\n * this function will test urlParse's default handling-behavior\n */\n    local.testMock([\n        [\n            local, {\n                // test default PORT handling-behavior\n                env: {},\n                // test init-serverLocalHost handling-behavior\n                serverLocalHost: \"\"\n            }\n        ]\n    ], function (onError) {\n        // test default handling-behavior\n        local.assertJsonEqual(local.urlParse(\n            \"https://127.0.0.1:80/foo/bar?aa=1&bb%20cc=dd%20=ee&aa=2&aa#zz=1\"\n        ), {\n            basename: \"bar\",\n            hash: \"#zz=1\",\n            host: \"127.0.0.1:80\",\n            hostname: \"127.0.0.1\",\n            href: (\n                \"https://127.0.0.1:80/foo/bar\"\n                + \"?aa=1&bb%20cc=dd%20=ee&aa=2&aa#zz=1\"\n            ),\n            path: \"/foo/bar?aa=1&bb%20cc=dd%20=ee&aa=2&aa\",\n            pathname: \"/foo/bar\",\n            port: \"80\",\n            protocol: \"https:\",\n            query: {\n                aa: [\n                    \"1\", \"2\", \"\"\n                ],\n                \"bb cc\": \"dd =ee\"\n            },\n            search: \"?aa=1&bb%20cc=dd%20=ee&aa=2&aa\"\n        });\n        // test err handling-behavior\n        local.assertJsonEqual(local.urlParse(null), {\n            basename: \"\",\n            hash: \"\",\n            host: \"\",\n            hostname: \"\",\n            href: \"\",\n            path: \"\",\n            pathname: \"\",\n            port: \"\",\n            protocol: \"\",\n            query: {},\n            search: \"\"\n        });\n        onError(null, opt);\n    }, onError);\n};\n\nlocal.testCase_uuid4Create_default = function (opt, onError) {\n/*\n * this function will test uuid4Create's default handling-behavior\n */\n    local.assertThrow(\n        local.regexpValidateUuid.test(local.uuid4Create()),\n        local.uuid4Create()\n    );\n    onError(null, opt);\n};\n\nlocal.testCase_webpage_err = function (opt, onError) {\n/*\n * this function will test webpage's err handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.browserTest({\n        modeCoverageMerge: true,\n        modeSilent: true,\n        timeoutDefault: local.timeoutDefault - 5000,\n        // https://localhost:8080/assets.script_only.html?modeTest=1&modeTestCase=_testCase_testRunDefault_failure&timeExit=\n        url: (\n            local.serverLocalHost\n            // test script_only handling-behavior\n            + \"/assets.script_only.html\"\n            // test electron-callback handling-behavior\n            + \"?modeTest=1&\"\n            // test specific testCase handling-behavior\n            // test testRunDefault's failure handling-behavior\n            + \"modeTestCase=_testCase_testRunDefault_failure&\"\n            // test timeExit handling-behavior\n            + \"timeExit={{timeExit}}\"\n        )\n    }, function (err) {\n        // validate err occurred\n        local.assertThrow(err, err);\n        onError(null, opt);\n    });\n};\n\nlocal.utility2.serverLocalUrlTest = function (url) {\n/*\n * this function will test if the url is local\n */\n    url = local.urlParse(url).pathname;\n    return local.isBrowser && !local.env.npm_config_mode_backend && (\n        /^\\/test\\./\n    ).test(url);\n};\n}());\n\n\n\n// run shared js-env code - init-after\n(function () {\n// init assets\nlocal.assetsDict[\"/assets.swgg.swagger.json\"] = (\n    local.fsReadFileOrEmptyStringSync(\"assets.swgg.swagger.json\")\n    || local.assetsDict[\"/assets.swgg.swagger.json\"]\n    || local.assetsDict[\"/assets.swgg.swagger.petstore.json\"]\n);\n// coverage-hack - re-run test-server\nlocal.testRunServer(local);\n// coverage-hack - stateInit\nlocal.stateInit({});\n// init test-middleware\nlocal.middlewareList.push(function (req, res, next) {\n/*\n * this function will run the test-middleware\n */\n    switch (req.urlParsed.pathname) {\n    // test http POST handling-behavior\n    case \"/test.body\":\n        // test req-body-read handling-behavior\n        local.middlewareBodyRead(req, res, function () {\n            // test multiple req-body-read handling-behavior\n            local.middlewareBodyRead(req, res, function () {\n                res.write(req.bodyRaw);\n                res.end();\n            });\n        });\n        break;\n    // test http POST handling-behavior\n    case \"/test.echo\":\n        // test res-header handling-behavior\n        local.serverRespondHeadSet(req, res, null, {\n            \"X-Res-Header-Test\": \"bb\"\n        });\n        local.serverRespondEcho(req, res);\n        break;\n    // test 500-internal-server-error handling-behavior\n    case \"/test.err-500\":\n        // test multiple-callback serverRespondHeadSet handling-behavior\n        local.serverRespondHeadSet(req, res, null, {});\n        next(local.errDefault);\n        // test multiple-callback-error handling-behavior\n        next(local.errDefault);\n        // test onErrorDefault handling-behavior\n        local.testMock([\n            [\n                local, {\n                    swgg: null\n                }\n            ]\n        ], function (onError) {\n            var err;\n            err = new Error(\"error\");\n            err.statusCode = 500;\n            local.middlewareError(err, req, res);\n            onError();\n        }, local.onErrorThrow);\n        break;\n    // test undefined-status-code handling-behavior\n    case \"/test.err-undefined\":\n        local.serverRespondDefault(req, res, 999);\n        break;\n    // test timeout handling-behavior\n    case \"/test.timeout\":\n        setTimeout(function () {\n            res.end();\n        }, 2000);\n        break;\n    // serve file\n    default:\n        local.middlewareFileServer(req, res, next);\n    }\n});\n}());\n\n\n\n// run node js-env code - init-after\n/* istanbul ignore next */\n(function () {\nif (local.isBrowser) {\n    return;\n}\n\n\n\n(function () {\n    switch (local.env.HEROKU_APP_NAME) {\n    case \"h1-cron1\":\n        // heroku-keepalive\n        setInterval(function () {\n            local.ajax({\n                url: \"https://h1-cron1.herokuapp.com\"\n            }, local.onErrorThrow);\n        }, 5 * 60 * 1000);\n        local.cronJob = local.nop;\n        // update cron\n        local.ajax({\n            url: \"https://kaizhu256.github.io/node-utility2/cronJob.js\"\n        }, function (err, xhr) {\n            if (!err && xhr.responseText !== local.cronScript) {\n                local.cronScript = xhr.responseText;\n                local.vm.runInThisContext(local.cronScript);\n            }\n        });\n        setInterval(function () {\n            var cronTime;\n            cronTime = new Date();\n            if (\n                cronTime.toISOString().slice(0, 16)\n                < (local.cronTime && local.cronTime.toISOString())\n            ) {\n                return;\n            }\n            local.cronTime = cronTime;\n            // cron every 5 minutes\n            if (local.cronTime.getUTCMinutes() % 5 === 0) {\n                // update cron\n                local.ajax({\n                    url: \"https://kaizhu256.github.io/node-utility2/cronJob.js\"\n                }, function (err, xhr) {\n                    if (!err && xhr.responseText !== local.cronScript) {\n                        local.cronScript = xhr.responseText;\n                        local.vm.runInThisContext(local.cronScript);\n                    }\n                });\n            }\n            local.cronJob();\n        }, 30000);\n        break;\n    case \"h1-proxy1\":\n        // heroku-keepalive\n        setInterval(function () {\n            local.ajax({\n                url: \"https://h1-proxy1.herokuapp.com\"\n            }, local.onErrorThrow);\n        }, 5 * 60 * 1000);\n        break;\n    }\n}());\n\n\n\n// init cli\nif (module !== require.main || globalThis.utility2_rollup) {\n    return;\n}\nlocal.assetsDict[\"/assets.script_only.html\"] = (\n    \"<h1>script_only_test</h1>\\n\"\n    + \"<script src=\\\"assets.utility2.js\\\"></script>\\n\"\n    + \"<script>window.utility2_onReadyBefore.counter += 1;</script>\\n\"\n    + \"<script src=\\\"assets.example.js\\\"></script>\\n\"\n    + \"<script src=\\\"assets.test.js\\\"></script>\\n\"\n    + \"<script>window.utility2_onReadyBefore();</script>\\n\"\n);\nif (process.argv[2]) {\n    // start with coverage\n    if (local.env.npm_config_mode_coverage) {\n        process.argv.splice(1, 1, __dirname + \"/lib.istanbul.js\", \"cover\");\n        local.istanbul.cliDict[process.argv[2]]();\n        return;\n    }\n    // start\n    process.argv.splice(1, 1);\n    process.argv[1] = local.path.resolve(process.cwd(), process.argv[1]);\n    local.Module.runMain();\n}\n}());\n\n\n\n}());\n","/home/travis/build/kaizhu256/node-utility2/lib.utility2.js":"// usr/bin/env node\n/*\n * lib.utility2.js (2019.8.11)\n * https://github.com/kaizhu256/node-utility2\n * this zero-dependency package will provide a collection of high-level functions to to build, test, and deploy webapps\n *\n */\n\n\n\n/* istanbul instrument in package utility2 */\n/* istanbul ignore next */\n/* jslint utility2:true */\n(function (globalThis) {\n    \"use strict\";\n    var consoleError;\n    var local;\n    // init globalThis\n    (function () {\n        try {\n            globalThis = Function(\"return this\")(); // jslint ignore:line\n        } catch (ignore) {}\n    }());\n    globalThis.globalThis = globalThis;\n    // init debug_inline\n    if (!globalThis[\"debug\\u0049nline\"]) {\n        consoleError = console.error;\n        globalThis[\"debug\\u0049nline\"] = function () {\n        /*\n         * this function will both print <arguments> to stderr\n         * and return <arguments>[0]\n         */\n            var argList;\n            argList = Array.from(arguments); // jslint ignore:line\n            // debug arguments\n            globalThis[\"debug\\u0049nlineArguments\"] = argList;\n            consoleError(\"\\n\\ndebug\\u0049nline\");\n            consoleError.apply(console, argList);\n            consoleError(\"\\n\");\n            // return arg0 for inspection\n            return argList[0];\n        };\n    }\n    // init local\n    local = {};\n    local.local = local;\n    globalThis.globalLocal = local;\n    // init isBrowser\n    local.isBrowser = (\n        typeof window === \"object\"\n        && window === globalThis\n        && typeof window.XMLHttpRequest === \"function\"\n        && window.document\n        && typeof window.document.querySelector === \"function\"\n    );\n    // init function\n    local.assertThrow = function (passed, message) {\n    /*\n     * this function will throw err.<message> if <passed> is falsy\n     */\n        var err;\n        if (passed) {\n            return;\n        }\n        err = (\n            // ternary-operator\n            (\n                message\n                && typeof message.message === \"string\"\n                && typeof message.stack === \"string\"\n            )\n            // if message is errObj, then leave as is\n            ? message\n            : new Error(\n                typeof message === \"string\"\n                // if message is a string, then leave as is\n                ? message\n                // else JSON.stringify message\n                : JSON.stringify(message, null, 4)\n            )\n        );\n        throw err;\n    };\n    local.functionOrNop = function (fnc) {\n    /*\n     * this function will if <fnc> exists,\n     * them return <fnc>,\n     * else return <nop>\n     */\n        return fnc || local.nop;\n    };\n    local.identity = function (value) {\n    /*\n     * this function will return <value>\n     */\n        return value;\n    };\n    local.nop = function () {\n    /*\n     * this function will do nothing\n     */\n        return;\n    };\n    local.objectAssignDefault = function (target, source) {\n    /*\n     * this function will if items from <target> are\n     * null, undefined, or empty-string,\n     * then overwrite them with items from <source>\n     */\n        target = target || {};\n        Object.keys(source || {}).forEach(function (key) {\n            if (\n                target[key] === null\n                || target[key] === undefined\n                || target[key] === \"\"\n            ) {\n                target[key] = target[key] || source[key];\n            }\n        });\n        return target;\n    };\n    // require builtin\n    if (!local.isBrowser) {\n        local.assert = require(\"assert\");\n        local.buffer = require(\"buffer\");\n        local.child_process = require(\"child_process\");\n        local.cluster = require(\"cluster\");\n        local.crypto = require(\"crypto\");\n        local.dgram = require(\"dgram\");\n        local.dns = require(\"dns\");\n        local.domain = require(\"domain\");\n        local.events = require(\"events\");\n        local.fs = require(\"fs\");\n        local.http = require(\"http\");\n        local.https = require(\"https\");\n        local.net = require(\"net\");\n        local.os = require(\"os\");\n        local.path = require(\"path\");\n        local.querystring = require(\"querystring\");\n        local.readline = require(\"readline\");\n        local.repl = require(\"repl\");\n        local.stream = require(\"stream\");\n        local.string_decoder = require(\"string_decoder\");\n        local.timers = require(\"timers\");\n        local.tls = require(\"tls\");\n        local.tty = require(\"tty\");\n        local.url = require(\"url\");\n        local.util = require(\"util\");\n        local.vm = require(\"vm\");\n        local.zlib = require(\"zlib\");\n    }\n}(this));\n\n\n\n(function (local) {\n\"use strict\";\n\n\n\n/* istanbul ignore next */\n// run shared js-env code - init-before\n(function () {\n// init local\nlocal = (\n    globalThis.utility2_rollup\n    // || globalThis.utility2_rollup_old\n    // || require(\"./assets.utility2.rollup.js\")\n    || globalThis.globalLocal\n);\n// init exports\nif (local.isBrowser) {\n    globalThis.utility2_utility2 = local;\n} else {\n    module.exports = local;\n    module.exports.__dirname = __dirname;\n}\n// init lib main\nlocal.utility2 = local;\n\n\n\n/* validateLineSortedReset */\n// init lib utility2\nglobalThis.utility2 = local;\n// init lib extra\n[\n    \"apidoc\",\n    \"db\",\n    \"github_crud\",\n    \"istanbul\",\n    \"jslint\",\n    \"marked\",\n    \"sjcl\"\n].forEach(function (key) {\n    try {\n        local[key] = (\n            local.isBrowser\n            ? globalThis[\"utility2_\" + key]\n            : require(\"./lib.\" + key + \".js\")\n        );\n    } catch (errCaught) {\n        local.assertThrow(errCaught.code === \"MODULE_NOT_FOUND\", errCaught);\n    }\n    local[key] = local[key] || {};\n});\n// init assets and templates\nlocal.assetsDict = local.assetsDict || {};\n\n\n\n/* jslint ignore:start */\nlocal.assetsDict[\"/assets.index.template.html\"] =\nlocal.assetsDict[\"/assets.utility2.template.html\"] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"utf-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<!-- \"assets.utility2.template.html\" -->\\n\\\n<title>{{env.npm_package_name}} ({{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/* jslint utility2:true */\\n\\\n/*csslint\\n\\\n*/\\n\\\n/* csslint ignore:start */\\n\\\n*,\\n\\\n*:after,\\n\\\n*:before {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\n/* csslint ignore:end */\\n\\\n@keyframes uiAnimateShake {\\n\\\n0%,\\n\\\n50% {\\n\\\n    transform: translateX(10px);\\n\\\n}\\n\\\n100% {\\n\\\n    transform: translateX(0);\\n\\\n}\\n\\\n25%,\\n\\\n75% {\\n\\\n    transform: translateX(-10px);\\n\\\n}\\n\\\n}\\n\\\n@keyframes uiAnimateSpin {\\n\\\n0% {\\n\\\n    transform: rotate(0deg);\\n\\\n}\\n\\\n100% {\\n\\\n    transform: rotate(360deg);\\n\\\n}\\n\\\n}\\n\\\na {\\n\\\n    overflow-wrap: break-word;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #eef;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    font-size: small;\\n\\\n    margin: 0 40px;\\n\\\n}\\n\\\nbody > div,\\n\\\nbody > form > div,\\n\\\nbody > form > input,\\n\\\nbody > form > pre,\\n\\\nbody > form > .button,\\n\\\nbody > form > .textarea,\\n\\\nbody > input,\\n\\\nbody > pre,\\n\\\nbody > .button,\\n\\\nbody > .textarea {\\n\\\n    margin-bottom: 20px;\\n\\\n    margin-top: 0;\\n\\\n}\\n\\\nbody > form > input,\\n\\\nbody > form > .button,\\n\\\nbody > input,\\n\\\nbody > .button {\\n\\\n    width: 20rem;\\n\\\n}\\n\\\nbody > form > .textarea,\\n\\\nbody > .textarea {\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\nbody > .readonly {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\ncode,\\n\\\npre,\\n\\\n.textarea {\\n\\\n    font-family: Consolas, Menlo, monospace;\\n\\\n    font-size: smaller;\\n\\\n}\\n\\\npre {\\n\\\n    overflow-wrap: break-word;\\n\\\n    white-space: pre-wrap;\\n\\\n}\\n\\\n.button {\\n\\\n    background-color: #fff;\\n\\\n    border: 1px solid;\\n\\\n    border-bottom-color: rgb(186, 186, 186);\\n\\\n    border-left-color: rgb(209, 209, 209);\\n\\\n    border-radius: 4px;\\n\\\n    border-right-color: rgb(209, 209, 209);\\n\\\n    border-top-color: rgb(216, 216, 216);\\n\\\n    color: #00d;\\n\\\n    cursor: pointer;\\n\\\n    display: inline-block;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    font-size: 12px;\\n\\\n    font-style: normal;\\n\\\n    font-weight: normal;\\n\\\n    margin: 0;\\n\\\n    padding: 2px 7px 3px 7px;\\n\\\n    text-align: center;\\n\\\n    text-decoration: underline;\\n\\\n}\\n\\\n.colorError {\\n\\\n    color: #d00;\\n\\\n}\\n\\\n.textarea {\\n\\\n    background: #fff;\\n\\\n    border: 1px solid #999;\\n\\\n    border-radius: 0;\\n\\\n    cursor: auto;\\n\\\n    overflow: auto;\\n\\\n    padding: 2px;\\n\\\n}\\n\\\n.uiAnimateShake {\\n\\\n    animation-duration: 500ms;\\n\\\n    animation-name: uiAnimateShake;\\n\\\n}\\n\\\n.uiAnimateSlide {\\n\\\n    overflow-y: hidden;\\n\\\n    transition: max-height ease-in 250ms, min-height ease-in 250ms, padding-bottom ease-in 250ms, padding-top ease-in 250ms;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    text-align: center;\\n\\\n}\\n\\\n.zeroPixel {\\n\\\n    border: 0;\\n\\\n    height: 0;\\n\\\n    margin: 0;\\n\\\n    padding: 0;\\n\\\n    width: 0;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 500ms, width 1500ms; width: 0%; z-index: 1;\"></div>\\n\\\n<div class=\"uiAnimateSpin\" style=\"animation: uiAnimateSpin 2s linear infinite; border: 5px solid #999; border-radius: 50%; border-top: 5px solid #7d7; display: none; height: 25px; vertical-align: middle; width: 25px;\"></div>\\n\\\n<a class=\"zeroPixel\" download=\"db.persistence.json\" href=\"\" id=\"dbExportA1\"></a>\\n\\\n<input class=\"zeroPixel\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbImportInput\" type=\"file\">\\n\\\n<script>\\n\\\n/* jslint utility2:true */\\n\\\n// init domOnEventWindowOnloadTimeElapsed\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will measure and print time-elapsed for window.onload\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    if (window.domOnEventWindowOnloadTimeElapsed) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventWindowOnloadTimeElapsed = Date.now() + 100;\\n\\\n    window.addEventListener(\"load\", function () {\\n\\\n        setTimeout(function () {\\n\\\n            window.domOnEventWindowOnloadTimeElapsed = (\\n\\\n                Date.now()\\n\\\n                - window.domOnEventWindowOnloadTimeElapsed\\n\\\n            );\\n\\\n            console.error(\\n\\\n                \"domOnEventWindowOnloadTimeElapsed = \"\\n\\\n                + window.domOnEventWindowOnloadTimeElapsed\\n\\\n            );\\n\\\n        }, 100);\\n\\\n    });\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n// init domOnEventDelegateDict\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will handle delegated dom-event\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    var timerTimeoutDict;\\n\\\n    if (window.domOnEventDelegateDict) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventDelegateDict = {};\\n\\\n    timerTimeoutDict = {};\\n\\\n    window.domOnEventDelegateDict.domOnEventDelegate = function (evt) {\\n\\\n        evt.targetOnEvent = evt.target.closest(\\n\\\n            \"[data-onevent]\"\\n\\\n        );\\n\\\n        if (\\n\\\n            !evt.targetOnEvent\\n\\\n            || evt.targetOnEvent.dataset.onevent === \"domOnEventNop\"\\n\\\n            || evt.target.closest(\\n\\\n                \".disabled, .readonly\"\\n\\\n            )\\n\\\n        ) {\\n\\\n            return;\\n\\\n        }\\n\\\n        // rate-limit high-frequency-event\\n\\\n        switch (evt.type) {\\n\\\n        case \"keydown\":\\n\\\n        case \"keyup\":\\n\\\n            // filter non-input keyboard-event\\n\\\n            if (!evt.target.closest(\\n\\\n                \"input, option, select, textarea\"\\n\\\n            )) {\\n\\\n                return;\\n\\\n            }\\n\\\n            if (timerTimeoutDict[evt.type] !== true) {\\n\\\n                timerTimeoutDict[evt.type] = timerTimeoutDict[\\n\\\n                    evt.type\\n\\\n                ] || setTimeout(function () {\\n\\\n                    timerTimeoutDict[evt.type] = true;\\n\\\n                    window.domOnEventDelegateDict.domOnEventDelegate(evt);\\n\\\n                }, 50);\\n\\\n                return;\\n\\\n            }\\n\\\n            timerTimeoutDict[evt.type] = null;\\n\\\n            break;\\n\\\n        }\\n\\\n        switch (evt.targetOnEvent.tagName) {\\n\\\n        case \"BUTTON\":\\n\\\n        case \"FORM\":\\n\\\n            evt.preventDefault();\\n\\\n            break;\\n\\\n        }\\n\\\n        evt.stopPropagation();\\n\\\n        window.domOnEventDelegateDict[evt.targetOnEvent.dataset.onevent](\\n\\\n            evt\\n\\\n        );\\n\\\n    };\\n\\\n    window.domOnEventDelegateDict.domOnEventResetOutput = function () {\\n\\\n        Array.from(document.querySelectorAll(\\n\\\n            \".onevent-reset-output\"\\n\\\n        )).forEach(function (elem) {\\n\\\n            switch (elem.tagName) {\\n\\\n            case \"INPUT\":\\n\\\n            case \"TEXTAREA\":\\n\\\n                elem.value = \"\";\\n\\\n                break;\\n\\\n            case \"PRE\":\\n\\\n                elem.textContent = \"\";\\n\\\n                break;\\n\\\n            default:\\n\\\n                elem.innerHTML = \"\";\\n\\\n            }\\n\\\n        });\\n\\\n    };\\n\\\n    // init event-handling\\n\\\n    [\\n\\\n        \"change\",\\n\\\n        \"click\",\\n\\\n        \"keydown\",\\n\\\n        \"submit\"\\n\\\n    ].forEach(function (eventType) {\\n\\\n        document.addEventListener(\\n\\\n            eventType,\\n\\\n            window.domOnEventDelegateDict.domOnEventDelegate\\n\\\n        );\\n\\\n    });\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n// init timerIntervalAjaxProgressUpdate\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will increment ajax-progress-bar\\n\\\n * until webpage has loaded\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    var ajaxProgressDiv1;\\n\\\n    var ajaxProgressState;\\n\\\n    var ajaxProgressUpdate;\\n\\\n    if (\\n\\\n        window.timerIntervalAjaxProgressUpdate\\n\\\n        || !document.querySelector(\\n\\\n            \"#ajaxProgressDiv1\"\\n\\\n        )\\n\\\n    ) {\\n\\\n        return;\\n\\\n    }\\n\\\n    ajaxProgressDiv1 = document.querySelector(\\n\\\n        \"#ajaxProgressDiv1\"\\n\\\n    );\\n\\\n    setTimeout(function () {\\n\\\n        ajaxProgressDiv1.style.width = \"25%\";\\n\\\n    });\\n\\\n    ajaxProgressState = 0;\\n\\\n    ajaxProgressUpdate = (\\n\\\n        window.local\\n\\\n        && window.local.ajaxProgressUpdate\\n\\\n    ) || function () {\\n\\\n        ajaxProgressDiv1.style.width = \"100%\";\\n\\\n        setTimeout(function () {\\n\\\n            ajaxProgressDiv1.style.background = \"transparent\";\\n\\\n            setTimeout(function () {\\n\\\n                ajaxProgressDiv1.style.width = \"0%\";\\n\\\n            }, 500);\\n\\\n        }, 1000);\\n\\\n    };\\n\\\n    window.timerIntervalAjaxProgressUpdate = setInterval(function () {\\n\\\n        ajaxProgressState += 1;\\n\\\n        ajaxProgressDiv1.style.width = Math.max(\\n\\\n            100 - 75 * Math.exp(-0.125 * ajaxProgressState),\\n\\\n            ajaxProgressDiv1.style.width.slice(0, -1) | 0\\n\\\n        ) + \"%\";\\n\\\n    }, 1000);\\n\\\n    window.addEventListener(\"load\", function () {\\n\\\n        clearInterval(window.timerIntervalAjaxProgressUpdate);\\n\\\n        ajaxProgressUpdate();\\n\\\n    });\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n// init domOnEventSelectAllWithinPre\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will limit select-all within <pre tabIndex=\"0\"> elements\\n\\\n * https://stackoverflow.com/questions/985272/selecting-text-in-an-element-akin-to-highlighting-with-your-mouse\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    if (window.domOnEventSelectAllWithinPre) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventSelectAllWithinPre = function (evt) {\\n\\\n        var range;\\n\\\n        var selection;\\n\\\n        if (\\n\\\n            evt\\n\\\n            && evt.key === \"a\"\\n\\\n            && (evt.ctrlKey || evt.metaKey)\\n\\\n            && evt.target.closest(\\n\\\n                \"pre\"\\n\\\n            )\\n\\\n        ) {\\n\\\n            range = document.createRange();\\n\\\n            range.selectNodeContents(evt.target.closest(\\n\\\n                \"pre\"\\n\\\n            ));\\n\\\n            selection = window.getSelection();\\n\\\n            selection.removeAllRanges();\\n\\\n            selection.addRange(range);\\n\\\n            evt.preventDefault();\\n\\\n        }\\n\\\n    };\\n\\\n    // init event-handling\\n\\\n    document.addEventListener(\\n\\\n        \"keydown\",\\n\\\n        window.domOnEventSelectAllWithinPre\\n\\\n    );\\n\\\n}());\\n\\\n</script>\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} ({{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\\n\\\n<button class=\"button\" data-onevent=\"testRunBrowser\" data-onevent-reset-output=\"1\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div class=\"uiAnimateSlide\" id=\"testReportDiv1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<pre class=\"onevent-reset-output readonly textarea\" id=\"outputStdout1\" tabIndex=\"0\"></pre>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore.counter += 1;</script>\\n\\\n<script src=\"jsonp.utility2.stateInit?callback=window.utility2.stateInit\"></script>\\n\\\n<script src=\"assets.{{packageJson.nameLib}}.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore();</script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n\n\n\n/* validateLineSortedReset */\n// https://img.shields.io/badge/last_build-0000_00_00_00_00_00_UTC_--_master_--_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-0077ff.svg?style=flat\nlocal.assetsDict[\"/assets.buildBadge.template.svg\"] =\n'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"563\" height=\"20\"><linearGradient id=\"a\" x2=\"0\" y2=\"100%\"><stop offset=\"0\" stop-color=\"#bbb\" stop-opacity=\".1\"/><stop offset=\"1\" stop-opacity=\".1\"/></linearGradient><rect rx=\"0\" width=\"563\" height=\"20\" fill=\"#555\"/><rect rx=\"0\" x=\"61\" width=\"502\" height=\"20\" fill=\"#07f\"/><path fill=\"#07f\" d=\"M61 0h4v20h-4z\"/><rect rx=\"0\" width=\"563\" height=\"20\" fill=\"url(#a)\"/><g fill=\"#fff\" text-anchor=\"middle\" font-family=\"DejaVu Sans,Verdana,Geneva,sans-serif\" font-size=\"11\"><text x=\"31.5\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">last build</text><text x=\"31.5\" y=\"14\">last build</text><text x=\"311\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">0000-00-00 00:00:00 UTC - master - aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</text><text x=\"311\" y=\"14\">0000-00-00 00:00:00 UTC - master - aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</text></g></svg>';\n\n\n\nlocal.assetsDict[\"/assets.example.begin.js\"] = '\\\n(function (globalThis) {\\n\\\n    \"use strict\";\\n\\\n    var consoleError;\\n\\\n    var local;\\n\\\n    // init globalThis\\n\\\n    (function () {\\n\\\n        try {\\n\\\n            globalThis = Function(\"return this\")(); // jslint ignore:line\\n\\\n        } catch (ignore) {}\\n\\\n    }());\\n\\\n    globalThis.globalThis = globalThis;\\n\\\n    // init debug_inline\\n\\\n    if (!globalThis[\"debug\\\\u0049nline\"]) {\\n\\\n        consoleError = console.error;\\n\\\n        globalThis[\"debug\\\\u0049nline\"] = function () {\\n\\\n        /*\\n\\\n         * this function will both print <arguments> to stderr\\n\\\n         * and return <arguments>[0]\\n\\\n         */\\n\\\n            var argList;\\n\\\n            argList = Array.from(arguments); // jslint ignore:line\\n\\\n            // debug arguments\\n\\\n            globalThis[\"debug\\\\u0049nlineArguments\"] = argList;\\n\\\n            consoleError(\"\\\\n\\\\ndebug\\\\u0049nline\");\\n\\\n            consoleError.apply(console, argList);\\n\\\n            consoleError(\"\\\\n\");\\n\\\n            // return arg0 for inspection\\n\\\n            return argList[0];\\n\\\n        };\\n\\\n    }\\n\\\n    // init local\\n\\\n    local = {};\\n\\\n    local.local = local;\\n\\\n    globalThis.globalLocal = local;\\n\\\n    // init isBrowser\\n\\\n    local.isBrowser = (\\n\\\n        typeof window === \"object\"\\n\\\n        && window === globalThis\\n\\\n        && typeof window.XMLHttpRequest === \"function\"\\n\\\n        && window.document\\n\\\n        && typeof window.document.querySelector === \"function\"\\n\\\n    );\\n\\\n    // init function\\n\\\n    local.assertThrow = function (passed, message) {\\n\\\n    /*\\n\\\n     * this function will throw err.<message> if <passed> is falsy\\n\\\n     */\\n\\\n        var err;\\n\\\n        if (passed) {\\n\\\n            return;\\n\\\n        }\\n\\\n        err = (\\n\\\n            // ternary-operator\\n\\\n            (\\n\\\n                message\\n\\\n                && typeof message.message === \"string\"\\n\\\n                && typeof message.stack === \"string\"\\n\\\n            )\\n\\\n            // if message is errObj, then leave as is\\n\\\n            ? message\\n\\\n            : new Error(\\n\\\n                typeof message === \"string\"\\n\\\n                // if message is a string, then leave as is\\n\\\n                ? message\\n\\\n                // else JSON.stringify message\\n\\\n                : JSON.stringify(message, null, 4)\\n\\\n            )\\n\\\n        );\\n\\\n        throw err;\\n\\\n    };\\n\\\n    local.functionOrNop = function (fnc) {\\n\\\n    /*\\n\\\n     * this function will if <fnc> exists,\\n\\\n     * them return <fnc>,\\n\\\n     * else return <nop>\\n\\\n     */\\n\\\n        return fnc || local.nop;\\n\\\n    };\\n\\\n    local.identity = function (value) {\\n\\\n    /*\\n\\\n     * this function will return <value>\\n\\\n     */\\n\\\n        return value;\\n\\\n    };\\n\\\n    local.nop = function () {\\n\\\n    /*\\n\\\n     * this function will do nothing\\n\\\n     */\\n\\\n        return;\\n\\\n    };\\n\\\n    local.objectAssignDefault = function (target, source) {\\n\\\n    /*\\n\\\n     * this function will if items from <target> are\\n\\\n     * null, undefined, or empty-string,\\n\\\n     * then overwrite them with items from <source>\\n\\\n     */\\n\\\n        target = target || {};\\n\\\n        Object.keys(source || {}).forEach(function (key) {\\n\\\n            if (\\n\\\n                target[key] === null\\n\\\n                || target[key] === undefined\\n\\\n                || target[key] === \"\"\\n\\\n            ) {\\n\\\n                target[key] = target[key] || source[key];\\n\\\n            }\\n\\\n        });\\n\\\n        return target;\\n\\\n    };\\n\\\n    // require builtin\\n\\\n    if (!local.isBrowser) {\\n\\\n        local.assert = require(\"assert\");\\n\\\n        local.buffer = require(\"buffer\");\\n\\\n        local.child_process = require(\"child_process\");\\n\\\n        local.cluster = require(\"cluster\");\\n\\\n        local.crypto = require(\"crypto\");\\n\\\n        local.dgram = require(\"dgram\");\\n\\\n        local.dns = require(\"dns\");\\n\\\n        local.domain = require(\"domain\");\\n\\\n        local.events = require(\"events\");\\n\\\n        local.fs = require(\"fs\");\\n\\\n        local.http = require(\"http\");\\n\\\n        local.https = require(\"https\");\\n\\\n        local.net = require(\"net\");\\n\\\n        local.os = require(\"os\");\\n\\\n        local.path = require(\"path\");\\n\\\n        local.querystring = require(\"querystring\");\\n\\\n        local.readline = require(\"readline\");\\n\\\n        local.repl = require(\"repl\");\\n\\\n        local.stream = require(\"stream\");\\n\\\n        local.string_decoder = require(\"string_decoder\");\\n\\\n        local.timers = require(\"timers\");\\n\\\n        local.tls = require(\"tls\");\\n\\\n        local.tty = require(\"tty\");\\n\\\n        local.url = require(\"url\");\\n\\\n        local.util = require(\"util\");\\n\\\n        local.vm = require(\"vm\");\\n\\\n        local.zlib = require(\"zlib\");\\n\\\n    }\\n\\\n}(this));\\n\\\n'\n\n\n\nlocal.assetsDict[\"/assets.example.html\"] = \"\";\n\n\n\nlocal.assetsDict[\"/assets.example.template.js\"] = '\\\n/*\\n\\\nexample.js\\n\\\n\\n\\\nthis script will run a web-demo of my-app-lite\\n\\\n\\n\\\ninstruction\\n\\\n    1. save this script as example.js\\n\\\n    2. run shell-command:\\n\\\n        $ npm install my-app-lite && PORT=8081 node example.js\\n\\\n    3. open a browser to http://127.0.0.1:8081 and play with web-demo\\n\\\n    4. edit this script to suit your needs\\n\\\n*/\\n\\\n\\n\\\n\\n\\\n\\n\\\n/* istanbul instrument in package my_app */\\n\\\n/* istanbul ignore next */\\n\\\n/* jslint utility2:true */\\n\\\n' + local.assetsDict[\"/assets.example.begin.js\"] + '\\\n\\n\\\n\\n\\\n\\n\\\n(function (local) {\\n\\\n\"use strict\";\\n\\\n\\n\\\n\\n\\\n\\n\\\n// run shared js\\-env code - init-before\\n\\\n(function () {\\n\\\n// init local\\n\\\nlocal = (\\n\\\n    globalThis.utility2_rollup\\n\\\n    || globalThis.utility2_my_app\\n\\\n    || require(\"my-app-lite\")\\n\\\n);\\n\\\n// init exports\\n\\\nglobalThis.local = local;\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n/* istanbul ignore next */\\n\\\n// run browser js\\-env code - init-test\\n\\\n(function () {\\n\\\nif (!local.isBrowser) {\\n\\\n    return;\\n\\\n}\\n\\\n// log stderr and stdout to #outputStdout1\\n\\\n[\"error\", \"log\"].forEach(function (key) {\\n\\\n    var argList;\\n\\\n    var elem;\\n\\\n    var fnc;\\n\\\n    elem = document.querySelector(\\n\\\n        \"#outputStdout1\"\\n\\\n    );\\n\\\n    if (!elem) {\\n\\\n        return;\\n\\\n    }\\n\\\n    fnc = console[key];\\n\\\n    console[key] = function () {\\n\\\n        argList = Array.from(arguments); // jslint ignore:line\\n\\\n        fnc.apply(console, argList);\\n\\\n        // append text to #outputStdout1\\n\\\n        elem.textContent += argList.map(function (arg) {\\n\\\n            return (\\n\\\n                typeof arg === \"string\"\\n\\\n                ? arg\\n\\\n                : JSON.stringify(arg, null, 4)\\n\\\n            );\\n\\\n        }).join(\" \").replace((\\n\\\n            /\\\\u001b\\\\[\\\\d*m/g\\n\\\n        ), \"\") + \"\\\\n\";\\n\\\n        // scroll textarea to bottom\\n\\\n        elem.scrollTop = elem.scrollHeight;\\n\\\n    };\\n\\\n});\\n\\\nObject.assign(local, globalThis.domOnEventDelegateDict);\\n\\\nglobalThis.domOnEventDelegateDict = local;\\n\\\nlocal.onEventDomDb = (\\n\\\n    local.db && local.db.onEventDomDb\\n\\\n);\\n\\\nlocal.testRunBrowser = function (evt) {\\n\\\n/*\\n\\\n * this function will run browser-tests\\n\\\n */\\n\\\n    switch (\\n\\\n        !evt.ctrlKey\\n\\\n        && !evt.metaKey\\n\\\n        && (\\n\\\n            evt.modeInit\\n\\\n            || (evt.type + \".\" + (evt.target && evt.target.id))\\n\\\n        )\\n\\\n    ) {\\n\\\n    // custom-case\\n\\\n    case true:\\n\\\n        return;\\n\\\n    // run browser-tests\\n\\\n    default:\\n\\\n        if (\\n\\\n            (evt.target && evt.target.id) !== \"testRunButton1\"\\n\\\n            && !(evt.modeInit && (\\n\\\n                /\\\\bmodeTest=1\\\\b/\\n\\\n            ).test(location.search))\\n\\\n        ) {\\n\\\n            return;\\n\\\n        }\\n\\\n        // show browser-tests\\n\\\n        if (document.querySelector(\\n\\\n            \"#testReportDiv1\"\\n\\\n        ).style.maxHeight === \"0px\") {\\n\\\n            globalThis.domOnEventDelegateDict.domOnEventResetOutput();\\n\\\n            local.uiAnimateSlideDown(document.querySelector(\\n\\\n                \"#testReportDiv1\"\\n\\\n            ));\\n\\\n            document.querySelector(\\n\\\n                \"#testRunButton1\"\\n\\\n            ).textContent = \"hide internal test\";\\n\\\n            local.modeTest = 1;\\n\\\n            local.testRunDefault(local);\\n\\\n            return;\\n\\\n        }\\n\\\n        // hide browser-tests\\n\\\n        local.uiAnimateSlideUp(document.querySelector(\\n\\\n            \"#testReportDiv1\"\\n\\\n        ));\\n\\\n        document.querySelector(\\n\\\n            \"#testRunButton1\"\\n\\\n        ).textContent = \"run internal test\";\\n\\\n    }\\n\\\n};\\n\\\n\\n\\\nlocal.testRunBrowser({\\n\\\n    modeInit: true\\n\\\n});\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n/* istanbul ignore next */\\n\\\n// run node js\\-env code - init-test\\n\\\n(function () {\\n\\\nif (local.isBrowser) {\\n\\\n    return;\\n\\\n}\\n\\\n// init exports\\n\\\nmodule.exports = local;\\n\\\n/* validateLineSortedReset */\\n\\\n// init assets\\n\\\nlocal.assetsDict = local.assetsDict || {};\\n\\\n[\\n\\\n    \"assets.index.template.html\",\\n\\\n    \"assets.swgg.swagger.json\",\\n\\\n    \"assets.swgg.swagger.server.json\"\\n\\\n].forEach(function (file) {\\n\\\n    file = \"/\" + file;\\n\\\n    local.assetsDict[file] = local.assetsDict[file] || \"\";\\n\\\n    if (local.fs.existsSync(local.__dirname + file)) {\\n\\\n        local.assetsDict[file] = local.fs.readFileSync(\\n\\\n            local.__dirname + file,\\n\\\n            \"utf8\"\\n\\\n        );\\n\\\n    }\\n\\\n});\\n\\\n/* jslint ignore:start */\\n\\\nlocal.assetsDict[\"/assets.index.template.html\"] = \\'\\\\\\n\\\n' + local.assetsDict[\"/assets.index.template.html\"].replace((/\\n/g), \"\\\\n\\\\\\n\") + '\\';\\n\\\n/* jslint ignore:end */\\n\\\n/* validateLineSortedReset */\\n\\\n/* jslint ignore:start */\\n\\\nlocal.assetsDict[\"/assets.my_app.js\"] =\\n\\\n    local.assetsDict[\"/assets.my_app.js\"] ||\\n\\\n    local.fs.readFileSync(local.__dirname + \"/lib.my_app.js\", \"utf8\"\\n\\\n).replace((/^#!\\\\//), \"// \");\\n\\\n/* jslint ignore:end */\\n\\\n/* validateLineSortedReset */\\n\\\nlocal.assetsDict[\"/\"] = local.assetsDict[\"/assets.index.template.html\"]\\n\\\n.replace((\\n\\\n    /\\\\{\\\\{env\\\\.(\\\\w+?)\\\\}\\\\}/g\\n\\\n), function (match0, match1) {\\n\\\n    switch (match1) {\\n\\\n    case \"npm_package_description\":\\n\\\n        return \"the greatest app in the world!\";\\n\\\n    case \"npm_package_name\":\\n\\\n        return \"my-app-lite\";\\n\\\n    case \"npm_package_nameLib\":\\n\\\n        return \"my_app\";\\n\\\n    case \"npm_package_version\":\\n\\\n        return \"0.0.1\";\\n\\\n    default:\\n\\\n        return match0;\\n\\\n    }\\n\\\n});\\n\\\nlocal.assetsDict[\"/assets.example.html\"] = local.assetsDict[\"/\"];\\n\\\nlocal.assetsDict[\"/index.html\"] = local.assetsDict[\"/\"];\\n\\\n// init cli\\n\\\nif (module !== require.main || globalThis.utility2_rollup) {\\n\\\n    return;\\n\\\n}\\n\\\n/* validateLineSortedReset */\\n\\\nlocal.assetsDict[\"/assets.example.js\"] = (\\n\\\n    local.assetsDict[\"/assets.example.js\"]\\n\\\n    || local.fs.readFileSync(__filename, \"utf8\")\\n\\\n);\\n\\\nlocal.assetsDict[\"/favicon.ico\"] = local.assetsDict[\"/favicon.ico\"] || \"\";\\n\\\n// if $npm_config_timeout_exit exists,\\n\\\n// then exit this process after $npm_config_timeout_exit ms\\n\\\nif (Number(process.env.npm_config_timeout_exit)) {\\n\\\n    setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\\n\\\n}\\n\\\n// start server\\n\\\nif (globalThis.utility2_serverHttp1) {\\n\\\n    return;\\n\\\n}\\n\\\nprocess.env.PORT = process.env.PORT || \"8081\";\\n\\\nconsole.error(\"http-server listening on port \" + process.env.PORT);\\n\\\nlocal.http.createServer(function (req, res) {\\n\\\n    req.urlParsed = local.url.parse(req.url);\\n\\\n    if (local.assetsDict[req.urlParsed.pathname] !== undefined) {\\n\\\n        res.end(local.assetsDict[req.urlParsed.pathname]);\\n\\\n        return;\\n\\\n    }\\n\\\n    res.statusCode = 404;\\n\\\n    res.end();\\n\\\n}).listen(process.env.PORT);\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n}());\\n\\\n';\n\n\n\nlocal.assetsDict[\"/assets.my_app.template.js\"] = '\\\n#!/usr/bin/env node\\n\\\n/*\\n\\\n * lib.my_app.js ({{packageJson.version}})\\n\\\n * https://github.com/kaizhu256/node-my-app-lite\\n\\\n * {{packageJson.description}}\\n\\\n *\\n\\\n */\\n\\\n\\n\\\n\\n\\\n\\n\\\n/* istanbul instrument in package my_app */\\n\\\n/* istanbul ignore next */\\n\\\n/* jslint utility2:true */\\n\\\n' + local.assetsDict[\"/assets.example.begin.js\"] + '\\\n\\n\\\n\\n\\\n\\n\\\n(function (local) {\\n\\\n\"use strict\";\\n\\\n\\n\\\n\\n\\\n\\n\\\n/* istanbul ignore next */\\n\\\n// run shared js\\-env code - init-before\\n\\\n(function () {\\n\\\n// init local\\n\\\nlocal = (\\n\\\n    globalThis.utility2_rollup\\n\\\n    // || globalThis.utility2_rollup_old\\n\\\n    // || require(\"./assets.utility2.rollup.js\")\\n\\\n    || globalThis.globalLocal\\n\\\n);\\n\\\n// init exports\\n\\\nif (local.isBrowser) {\\n\\\n    globalThis.utility2_my_app = local;\\n\\\n} else {\\n\\\n    module.exports = local;\\n\\\n    module.exports.__dirname = __dirname;\\n\\\n}\\n\\\n// init lib main\\n\\\nlocal.my_app = local;\\n\\\n\\n\\\n\\n\\\n\\n\\\n/* validateLineSortedReset */\\n\\\nreturn;\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n}());\\n\\\n';\n\n\n\nlocal.assetsDict[\"/assets.readme.template.md\"] = '\\\n# my-app-lite\\n\\\nthe greatest app in the world!\\n\\\n\\n\\\n# live web demo\\n\\\n- [https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app)\\n\\\n\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app)\\n\\\n\\n\\\n\\n\\\n\\n\\\n[![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-my-app-lite.svg)](https://travis-ci.org/kaizhu256/node-my-app-lite) [![coverage](https://kaizhu256.github.io/node-my-app-lite/build/coverage.badge.svg)](https://kaizhu256.github.io/node-my-app-lite/build/coverage.html/index.html)\\n\\\n\\n\\\n[![NPM](https://nodei.co/npm/my-app-lite.png?downloads=true)](https://www.npmjs.com/package/my-app-lite)\\n\\\n\\n\\\n[![build commit status](https://kaizhu256.github.io/node-my-app-lite/build/build.badge.svg)](https://travis-ci.org/kaizhu256/node-my-app-lite)\\n\\\n\\n\\\n| git-branch : | [master](https://github.com/kaizhu256/node-my-app-lite/tree/master) | [beta](https://github.com/kaizhu256/node-my-app-lite/tree/beta) | [alpha](https://github.com/kaizhu256/node-my-app-lite/tree/alpha)|\\n\\\n|--:|:--|:--|:--|\\n\\\n| test-server-github : | [![github.com test-server](https://kaizhu256.github.io/node-my-app-lite/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-my-app-lite/build..master..travis-ci.org/app) | [![github.com test-server](https://kaizhu256.github.io/node-my-app-lite/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app) | [![github.com test-server](https://kaizhu256.github.io/node-my-app-lite/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-my-app-lite/build..alpha..travis-ci.org/app)|\\n\\\n| test-server-heroku : | [![heroku.com test-server](https://kaizhu256.github.io/node-my-app-lite/heroku-logo.75x25.png)](https://h1-my-app-master.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-my-app-lite/heroku-logo.75x25.png)](https://h1-my-app-beta.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-my-app-lite/heroku-logo.75x25.png)](https://h1-my-app-alpha.herokuapp.com)|\\n\\\n| test-report : | [![test-report](https://kaizhu256.github.io/node-my-app-lite/build..master..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-my-app-lite/build..master..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-my-app-lite/build..alpha..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-my-app-lite/build..alpha..travis-ci.org/test-report.html)|\\n\\\n| coverage : | [![coverage](https://kaizhu256.github.io/node-my-app-lite/build..master..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-my-app-lite/build..master..travis-ci.org/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-my-app-lite/build..alpha..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-my-app-lite/build..alpha..travis-ci.org/coverage.html/index.html)|\\n\\\n| build-artifacts : | [![build-artifacts](https://kaizhu256.github.io/node-my-app-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-my-app-lite/tree/gh-pages/build..master..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-my-app-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-my-app-lite/tree/gh-pages/build..beta..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-my-app-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-my-app-lite/tree/gh-pages/build..alpha..travis-ci.org)|\\n\\\n\\n\\\n[![npmPackageListing](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.npmPackageListing.svg)](https://github.com/kaizhu256/node-my-app-lite)\\n\\\n\\n\\\n![npmPackageDependencyTree](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.npmPackageDependencyTree.svg)\\n\\\n\\n\\\n\\n\\\n\\n\\\n# table of contents\\n\\\n\\n\\\n\\n\\\n\\n\\\n# cdn download\\n\\\n- [https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app/assets.my_app.js](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app/assets.my_app.js)\\n\\\n\\n\\\n\\n\\\n\\n\\\n# documentation\\n\\\n#### cli help\\n\\\n![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.npmPackageCliHelp.svg)\\n\\\n\\n\\\n#### api doc\\n\\\n- [https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/apidoc.html](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/apidoc.html)\\n\\\n\\n\\\n[![apidoc](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/apidoc.html)\\n\\\n\\n\\\n#### swagger doc\\n\\\n- [https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app/assets.swgg.html](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app/assets.swgg.html)\\n\\\n\\n\\\n[![swaggerdoc](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp%252Fassets.swgg.html.png)](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app/assets.swgg.html)\\n\\\n\\n\\\n#### todo\\n\\\n- none\\n\\\n\\n\\\n#### changelog 0.0.1\\n\\\n- npm publish 0.0.1\\n\\\n- update build\\n\\\n- none\\n\\\n\\n\\\n#### this package requires\\n\\\n- darwin or linux os\\n\\\n\\n\\\n\\n\\\n\\n\\\n# quickstart standalone app\\n\\\n#### to run this example, follow instruction in script below\\n\\\n- [assets.app.js](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app/assets.app.js)\\n\\\n```shell\\n\\\n# example.sh\\n\\\n\\n\\\n# this shell script will download and run a web-demo of my-app-lite as a standalone app\\n\\\n\\n\\\n# 1. download standalone app\\n\\\ncurl -O https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/app/assets.app.js\\n\\\n# 2. run standalone app\\n\\\nPORT=8081 node ./assets.app.js\\n\\\n# 3. open a browser to http://127.0.0.1:8081 and play with web-demo\\n\\\n# 4. edit file assets.app.js to suit your needs\\n\\\n```\\n\\\n\\n\\\n#### output from browser\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleSh.browser.%252F.png)](https://kaizhu256.github.io/node-my-app-lite/build/app/assets.example.html)\\n\\\n\\n\\\n#### output from shell\\n\\\n![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleSh.svg)\\n\\\n\\n\\\n\\n\\\n\\n\\\n# quickstart example.js\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-my-app-lite/build/app/assets.example.html)\\n\\\n\\n\\\n#### to run this example, follow instruction in script below\\n\\\n- [example.js](https://kaizhu256.github.io/node-my-app-lite/build..beta..travis-ci.org/example.js)\\n\\\n```javascript\\n' + local.assetsDict[\"/assets.example.template.js\"] + '```\\n\\\n\\n\\\n#### output from browser\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-my-app-lite/build/app/assets.example.html)\\n\\\n\\n\\\n#### output from shell\\n\\\n![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleJs.svg)\\n\\\n\\n\\\n\\n\\\n\\n\\\n# extra screenshots\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp%252Fassets.swgg.html.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp%252Fassets.swgg.html.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp%252Fassets.swgg.html.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp%252Fassets.swgg.html.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithub.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithubTest.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithubTest.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithubTest.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployGithubTest.browser.%252Fnode-my-app-lite%252Fbuild%252Fapp.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHeroku.browser.%252F.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHeroku.browser.%252F.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHeroku.browser.%252F.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHeroku.browser.%252F.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHerokuTest.browser.%252F.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHerokuTest.browser.%252F.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHerokuTest.browser.%252F.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.deployHerokuTest.browser.%252F.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.npmTest.browser.%252F.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.npmTest.browser.%252F.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.npmTest.browser.%252F.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.npmTest.browser.%252F.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleJs.browser.%252F.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleJs.browser.%252F.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleJs.browser.%252F.png)\\n\\\n\\n\\\n1. [https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleSh.browser.%252F.png](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleSh.browser.%252F.png)\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleSh.browser.%252F.png)](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.testExampleSh.browser.%252F.png)\\n\\\n\\n\\\n\\n\\\n\\n\\\n# package.json\\n\\\n```json\\n\\\n{\\n\\\n    \"author\": \"kai zhu <kaizhu256@gmail.com>\",\\n\\\n    \"description\": \"the greatest app in the world!\",\\n\\\n    \"devDependencies\": {\\n\\\n        \"electron-lite\": \"kaizhu256/node-electron-lite#alpha\",\\n\\\n        \"utility2\": \"kaizhu256/node-utility2#alpha\"\\n\\\n    },\\n\\\n    \"engines\": {\\n\\\n        \"node\": \">=10.0\"\\n\\\n    },\\n\\\n    \"homepage\": \"https://github.com/kaizhu256/node-my-app-lite\",\\n\\\n    \"keywords\": [],\\n\\\n    \"license\": \"MIT\",\\n\\\n    \"main\": \"lib.my_app.js\",\\n\\\n    \"name\": \"my-app-lite\",\\n\\\n    \"nameAliasPublish\": \"\",\\n\\\n    \"os\": [\\n\\\n        \"darwin\",\\n\\\n        \"linux\"\\n\\\n    ],\\n\\\n    \"repository\": {\\n\\\n        \"type\": \"git\",\\n\\\n        \"url\": \"https://github.com/kaizhu256/node-my-app-lite.git\"\\n\\\n    },\\n\\\n    \"scripts\": {\\n\\\n        \"build-ci\": \"sh ./npm_scripts.sh\",\\n\\\n        \"env\": \"env\",\\n\\\n        \"eval\": \"sh ./npm_scripts.sh\",\\n\\\n        \"heroku-postbuild\": \"sh ./npm_scripts.sh\",\\n\\\n        \"postinstall\": \"sh ./npm_scripts.sh\",\\n\\\n        \"start\": \"sh ./npm_scripts.sh\",\\n\\\n        \"test\": \"sh ./npm_scripts.sh\",\\n\\\n        \"utility2\": \"sh ./npm_scripts.sh\"\\n\\\n    },\\n\\\n    \"version\": \"0.0.1\"\\n\\\n}\\n\\\n```\\n\\\n\\n\\\n\\n\\\n\\n\\\n# changelog of last 50 commits\\n\\\n[![screenshot](https://kaizhu256.github.io/node-my-app-lite/build/screenshot.gitLog.svg)](https://github.com/kaizhu256/node-my-app-lite/commits)\\n\\\n\\n\\\n\\n\\\n\\n\\\n# internal build script\\n\\\n- build_ci.sh\\n\\\n```shell\\n\\\n# build_ci.sh\\n\\\n\\n\\\n# this shell script will run the build for this package\\n\\\n\\n\\\nshBuildCiAfter () {(set -e\\n\\\n    # shDeployCustom\\n\\\n    shDeployGithub\\n\\\n    # shDeployHeroku\\n\\\n    shReadmeTest example.sh\\n\\\n)}\\n\\\n\\n\\\nshBuildCiBefore () {(set -e\\n\\\n    # shNpmTestPublished\\n\\\n    shReadmeTest example.js\\n\\\n)}\\n\\\n\\n\\\n# run shBuildCi\\n\\\neval \"$(utility2 source)\"\\n\\\nshBuildCi\\n\\\n```\\n\\\n\\n\\\n\\n\\\n\\n\\\n# misc\\n\\\n- this package was created with [utility2](https://github.com/kaizhu256/node-utility2)\\n\\\n';\n\n\n\nlocal.assetsDict[\"/assets.test.template.js\"] = '\\\n/* istanbul instrument in package my_app */\\n\\\n/* istanbul ignore next */\\n\\\n/* jslint utility2:true */\\n\\\n' + local.assetsDict[\"/assets.example.begin.js\"] + '\\\n\\n\\\n\\n\\\n\\n\\\n(function (local) {\\n\\\n\"use strict\";\\n\\\n\\n\\\n\\n\\\n\\n\\\n// run shared js\\-env code - init-before\\n\\\n(function () {\\n\\\n// init local\\n\\\nlocal = (\\n\\\n    globalThis.utility2 || require(\"utility2\")\\n\\\n).requireReadme();\\n\\\nglobalThis.local = local;\\n\\\n// init test\\n\\\nlocal.testRunDefault(local);\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n// run shared js\\-env code - function\\n\\\n(function () {\\n\\\nreturn;\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n}());\\n\\\n';\n\n\n\nlocal.assetsDict[\"/assets.testReport.template.html\"] =\n    local.assetsDict[\"/assets.utility2.template.html\"]\n    .replace(\"assets.utility2.template.html\", \"\")\n    .replace((/<title>.*?<\\/title>/), \"<title>test-report</title>\")\n    .replace(\"</style>\\n\", '\\\n<style>\\n\\\n/* jslint utility2:true */\\n\\\n/*csslint\\n\\\n*/\\n\\\n.testReportDiv img {\\n\\\n    border: 1px solid black;\\n\\\n    margin: 5px 0 5px 0;\\n\\\n    max-height: 256px;\\n\\\n    max-width: 512px;\\n\\\n}\\n\\\n.testReportDiv pre {\\n\\\n    background: #fdd;\\n\\\n    border-top: 1px solid black;\\n\\\n    margin-bottom: 0;\\n\\\n    padding: 10px;\\n\\\n}\\n\\\n.testReportDiv span {\\n\\\n    display: inline-block;\\n\\\n    width: 120px;\\n\\\n}\\n\\\n.testReportDiv table {\\n\\\n    border-top: 1px solid black;\\n\\\n    text-align: left;\\n\\\n    width: 100%;\\n\\\n}\\n\\\n.testReportDiv table > tbody > tr:nth-child(odd) {\\n\\\n    background: #bfb;\\n\\\n}\\n\\\n.testReportDiv .displayNone {\\n\\\n    display: none;\\n\\\n}\\n\\\n.testReportDiv .footer {\\n\\\n    text-align: center;\\n\\\n}\\n\\\n.testReportDiv .platform {\\n\\\n    background: #fff;\\n\\\n    border: 1px solid black;\\n\\\n    margin-bottom: 20px;\\n\\\n    padding: 0 10px 10px 10px;\\n\\\n    text-align: left;\\n\\\n}\\n\\\n.testReportDiv .summary {\\n\\\n    background: #bfb;\\n\\\n}\\n\\\n.testReportDiv .testFailed {\\n\\\n    background: #f99;\\n\\\n}\\n\\\n.testReportDiv .testPending {\\n\\\n    background: #99f;\\n\\\n}\\n\\\n</style>\\n\\\n'.replace(\"<style>\\n\", \"\")).replace((/<\\/script>[\\S\\s]*?<\\/body>/), '\\\n</script>\\n\\\n<div class=\"testReportDiv\">\\n\\\n<h1>test-report for\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n    >\\n\\\n        {{env.npm_package_name}} ({{env.npm_package_version}})\\n\\\n    </a>\\n\\\n</h1>\\n\\\n<div class=\"platform summary\">\\n\\\n<h2>summary</h2>\\n\\\n<h4>\\n\\\n    <span>version</span>-\\n\\\n        {{env.npm_package_version}}<br>\\n\\\n    <span>test date</span>- {{date}}<br>\\n\\\n    <span>commit info</span>-\\n\\\n        {{#if env.CI_COMMIT_INFO}}\\n\\\n        {{env.CI_COMMIT_INFO}}<br>\\n\\\n        {{#unless env.CI_COMMIT_INFO}}\\n\\\n        undefined<br>\\n\\\n        {{/if env.CI_COMMIT_INFO}}\\n\\\n</h4>\\n\\\n<table>\\n\\\n<thead>\\n\\\n    <tr>\\n\\\n        <th>total time-elapsed</th>\\n\\\n        <th>total tests failed</th>\\n\\\n        <th>total tests passed</th>\\n\\\n        <th>total tests pending</th>\\n\\\n    </tr>\\n\\\n</thead>\\n\\\n<tbody><tr>\\n\\\n    <td>{{timeElapsed}} ms</td>\\n\\\n    <td class=\"{{testStatusClass}}\">{{testsFailed}}</td>\\n\\\n    <td>{{testsPassed}}</td>\\n\\\n    <td>{{testsPending}}</td>\\n\\\n</tr></tbody>\\n\\\n</table>\\n\\\n</div>\\n\\\n{{#each testPlatformList}}\\n\\\n<div class=\"platform\">\\n\\\n<h4>\\n\\\n    {{testPlatformNumber}}. {{name}}<br>\\n\\\n    {{#if screenshot}}\\n\\\n    <a href=\"{{screenshot encodeURIComponent}}\">\\n\\\n        <img alt=\"{{screenshot encodeURIComponent}}\" src=\"{{screenshot encodeURIComponent}}\">\\n\\\n    </a>\\n\\\n    <br>\\n\\\n    {{/if screenshot}}\\n\\\n    {{#if domOnEventWindowOnloadTimeElapsed}}\\n\\\n    <span>onload-time</span>- {{domOnEventWindowOnloadTimeElapsed}} ms<br>\\n\\\n    {{/if domOnEventWindowOnloadTimeElapsed}}\\n\\\n    <span>time-elapsed</span>- {{timeElapsed}} ms<br>\\n\\\n    <span>tests failed</span>- {{testsFailed}}<br>\\n\\\n    <span>tests passed</span>- {{testsPassed}}<br>\\n\\\n    <span>tests pending</span>- {{testsPending}}<br>\\n\\\n</h4>\\n\\\n<table>\\n\\\n<thead><tr>\\n\\\n    <th>#</th>\\n\\\n    <th>time-elapsed</th>\\n\\\n    <th>status</th>\\n\\\n    <th>test-case</th>\\n\\\n</tr></thead>\\n\\\n<tbody>\\n\\\n{{#each testCaseList}}\\n\\\n<tr>\\n\\\n    <td>{{testCaseNumber}}</td>\\n\\\n    <td>{{timeElapsed}} ms</td>\\n\\\n    <td class=\"{{testReportTestStatusClass}}\">{{status}}</td>\\n\\\n    <td>{{name}}</td>\\n\\\n</tr>\\n\\\n{{/each testCaseList}}\\n\\\n</tbody>\\n\\\n</table>\\n\\\n<pre class=\"{{preClass}}\" tabIndex=\"0\">\\n\\\n{{#each errorStackList}}\\n\\\n{{errorStack}}\\n\\\n{{/each errorStackList}}\\n\\\n</pre>\\n\\\n</div>\\n\\\n{{/each testPlatformList}}\\n\\\n<div class=\"footer\">\\n\\\n    [ this document was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</div>\\n\\\n</body>');\n\n\n\n// https://img.shields.io/badge/tests_failed-999-dd0000.svg?style=flat\nlocal.assetsDict[\"/assets.testReportBadge.template.svg\"] =\n'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"103\" height=\"20\"><linearGradient id=\"a\" x2=\"0\" y2=\"100%\"><stop offset=\"0\" stop-color=\"#bbb\" stop-opacity=\".1\"/><stop offset=\"1\" stop-opacity=\".1\"/></linearGradient><rect rx=\"0\" width=\"103\" height=\"20\" fill=\"#555\"/><rect rx=\"0\" x=\"72\" width=\"31\" height=\"20\" fill=\"#d00\"/><path fill=\"#d00\" d=\"M72 0h4v20h-4z\"/><rect rx=\"0\" width=\"103\" height=\"20\" fill=\"url(#a)\"/><g fill=\"#fff\" text-anchor=\"middle\" font-family=\"DejaVu Sans,Verdana,Geneva,sans-serif\" font-size=\"11\"><text x=\"37\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">tests failed</text><text x=\"37\" y=\"14\">tests failed</text><text x=\"86.5\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">999</text><text x=\"86.5\" y=\"14\">999</text></g></svg>';\n\n\n\nlocal.assetsDict[\"/assets.utility2.rollup.begin.js\"] = '\\\n/* utility2.rollup.js begin */\\n\\\n/* istanbul ignore all */\\n\\\n/* jslint utility2:true */\\n\\\n' + local.assetsDict[\"/assets.example.begin.js\"] + '\\\n\\n\\\n\\n\\\n\\n\\\n(function () {\\n\\\n    \"use strict\";\\n\\\n    // init utility2_rollup\\n\\\n    globalThis.utility2_rollup = (\\n\\\n        globalThis.utility2_rollup_old\\n\\\n        || globalThis.globalLocal\\n\\\n    );\\n\\\n    globalThis.utility2_rollup.local = globalThis.utility2_rollup;\\n\\\n    globalThis.utility2_rollup_old = null;\\n\\\n}());\\n\\\n';\n\n\n\nlocal.assetsDict[\"/assets.utility2.rollup.content.js\"] = '\\\n(function (local) {\\n\\\n    \"use strict\";\\n\\\n/* jslint ignore:start */\\n\\\n/* utility2.rollup.js content */\\n\\\n/* jslint ignore:end */\\n\\\n    return local;\\n\\\n}(globalThis.utility2_rollup));\\n\\\n';\n\n\n\nlocal.assetsDict[\"/assets.utility2.rollup.end.js\"] = '\\\n(function () {\\n\\\n    \"use strict\";\\n\\\n    globalThis.utility2_rollup_old = globalThis.utility2_rollup;\\n\\\n    globalThis.utility2_rollup = null;\\n\\\n}());\\n\\\n/* utility2.rollup.js end */\\n\\\n';\n\n\n\nlocal.assetsDict[\"/favicon.ico\"] = \"\";\n/* jslint ignore:end */\n\n\n\nlocal.cliDict = {};\n\nlocal.cliDict[\"utility2.browserTest\"] = function () {\n/*\n * <urlList> <mode>\n * will browser-test in parallel, comma-separated <urlList> with given <mode>\n */\n    process.argv[3].split(\n        process.argv[3].indexOf(\"?\") >= 0\n        ? (\n            /\\s/g\n        )\n        : (\n            /[,\\s]/g\n        )\n    ).filter(local.identity).forEach(function (url) {\n        local.browserTest({\n            url\n        }, local.onErrorDefault);\n    });\n};\n\nlocal.cliDict[\"utility2.githubCrudContentDelete\"] = function () {\n/*\n * <fileRemote|dirRemote> <commitMessage>\n * will delete from github <fileRemote|dirRemote>\n */\n    local.github_crud.githubCrudContentDelete({\n        message: process.argv[4],\n        url: process.argv[3]\n    }, function (err) {\n        process.exit(Boolean(err));\n    });\n};\n\nlocal.cliDict[\"utility2.githubCrudContentGet\"] = function () {\n/*\n * <fileRemote>\n * will get from github <fileRemote>\n */\n    local.github_crud.githubCrudContentGet({\n        url: process.argv[3]\n    }, function (err, data) {\n        try {\n            process.stdout.write(data);\n        } catch (ignore) {}\n        process.exit(Boolean(err));\n    });\n};\n\nlocal.cliDict[\"utility2.githubCrudContentPut\"] = function () {\n/*\n * <fileRemote> <fileLocal> <commitMessage>\n * will put on github <fileRemote>, <fileLocal>\n */\n    local.github_crud.githubCrudContentPutFile({\n        message: process.argv[5],\n        url: process.argv[3],\n        file: process.argv[4]\n    }, function (err) {\n        process.exit(Boolean(err));\n    });\n};\n\nlocal.cliDict[\"utility2.githubCrudContentTouch\"] = function () {\n/*\n * <fileRemoteList> <commitMessage>\n * will touch on github in parallel, comma-separated <fileRemoteList>\n */\n    local.github_crud.githubCrudContentTouchList({\n        message: process.argv[4],\n        urlList: process.argv[3].split(\n            /[,\\s]/g\n        ).filter(local.identity)\n    }, function (err) {\n        process.exit(Boolean(err));\n    });\n};\n\nlocal.cliDict[\"utility2.githubCrudRepoCreate\"] = function () {\n/*\n * <repoList>\n * will create on github in parallel, comma-separated <repoList>\n */\n    local.github_crud.githubCrudRepoCreateList({\n        urlList: process.argv[3].split(\n            /[,\\s]/g\n        ).filter(local.identity)\n    }, function (err) {\n        process.exit(Boolean(err));\n    });\n};\n\nlocal.cliDict[\"utility2.githubCrudRepoDelete\"] = function () {\n/*\n * <repoList>\n * will delete from github in parallel, comma-separated <repoList>\n */\n    local.github_crud.githubCrudRepoDeleteList({\n        urlList: process.argv[3].split(\n            /[,\\s]/g\n        ).filter(local.identity)\n    }, function (err) {\n        process.exit(Boolean(err));\n    });\n};\n\nlocal.cliDict[\"utility2.start\"] = function () {\n/*\n * <port>\n * will start utility2 http-server on given <port> (default 8081)\n */\n    local.env.PORT = process.argv[3] || local.env.PORT;\n    globalThis.local = local;\n    local.replStart();\n    local.testRunServer({});\n};\n\nlocal.cliDict[\"utility2.swaggerValidateFile\"] = function () {\n/*\n * <file/url>\n * will swagger-validate file/url\n */\n    setTimeout(function () {\n        local.swgg.swaggerValidateFile({\n            file: process.argv[3]\n        }, function (err, data) {\n            console.error(data);\n            process.exit(err);\n        });\n    });\n};\n\nlocal.cliDict[\"utility2.testReportCreate\"] = function () {\n/*\n *\n * will create test-report\n */\n    local.exit(\n        local.testReportCreate(\n            JSON.parse(local.fs.readFileSync(\n                local.env.npm_config_dir_build + \"/test-report.json\"\n            ))\n        ).testsFailed\n    );\n};\n}());\n\n\n\n/* istanbul ignore next */\n// run shared js-env code - polyfill\n(function () {\n    var ArrayPrototypeFlat;\n    var TextXxcoder;\n    ArrayPrototypeFlat = function (depth) {\n    /*\n     * this function will polyfill Array.prototype.flat\n     * https://github.com/jonathantneal/array-flat-polyfill\n     */\n        depth = (\n            globalThis.isNaN(depth)\n            ? 1\n            : Number(depth)\n        );\n        if (!depth) {\n            return Array.prototype.slice.call(this);\n        }\n        return Array.prototype.reduce.call(this, function (acc, cur) {\n            if (Array.isArray(cur)) {\n                // recurse\n                acc.push.apply(acc, ArrayPrototypeFlat.call(cur, depth - 1));\n            } else {\n                acc.push(cur);\n            }\n            return acc;\n        }, []);\n    };\n    Array.prototype.flat = Array.prototype.flat || ArrayPrototypeFlat;\n    Array.prototype.flatMap = Array.prototype.flatMap || function flatMap(\n        ...argList\n    ) {\n    /*\n     * this function will polyfill Array.prototype.flatMap\n     * https://github.com/jonathantneal/array-flat-polyfill\n     */\n        return this.map(...argList).flat();\n    };\n    if (!local.isBrowser) {\n        globalThis.TextDecoder = (\n            globalThis.TextDecoder || require(\"util\").TextDecoder\n        );\n        globalThis.TextEncoder = (\n            globalThis.TextEncoder || require(\"util\").TextEncoder\n        );\n    }\n    TextXxcoder = function () {\n    /*\n     * this function will polyfill TextDecoder/TextEncoder\n     * https://gist.github.com/Yaffle/5458286\n     */\n        return;\n    };\n    TextXxcoder.prototype.decode = function (octets) {\n    /*\n     * this function will polyfill TextDecoder.prototype.decode\n     * https://gist.github.com/Yaffle/5458286\n     */\n        var bytesNeeded;\n        var codePoint;\n        var ii;\n        var kk;\n        var octet;\n        var string;\n        string = \"\";\n        ii = 0;\n        while (ii < octets.length) {\n            octet = octets[ii];\n            bytesNeeded = 0;\n            codePoint = 0;\n            if (octet <= 0x7F) {\n                bytesNeeded = 0;\n                codePoint = octet & 0xFF;\n            } else if (octet <= 0xDF) {\n                bytesNeeded = 1;\n                codePoint = octet & 0x1F;\n            } else if (octet <= 0xEF) {\n                bytesNeeded = 2;\n                codePoint = octet & 0x0F;\n            } else if (octet <= 0xF4) {\n                bytesNeeded = 3;\n                codePoint = octet & 0x07;\n            }\n            if (octets.length - ii - bytesNeeded > 0) {\n                kk = 0;\n                while (kk < bytesNeeded) {\n                    octet = octets[ii + kk + 1];\n                    codePoint = (codePoint << 6) | (octet & 0x3F);\n                    kk += 1;\n                }\n            } else {\n                codePoint = 0xFFFD;\n                bytesNeeded = octets.length - ii;\n            }\n            string += String.fromCodePoint(codePoint);\n            ii += bytesNeeded + 1;\n        }\n        return string;\n    };\n    TextXxcoder.prototype.encode = function (string) {\n    /*\n     * this function will polyfill TextEncoder.prototype.encode\n     * https://gist.github.com/Yaffle/5458286\n     */\n        var bits;\n        var cc;\n        var codePoint;\n        var ii;\n        var length;\n        var octets;\n        octets = [];\n        length = string.length;\n        ii = 0;\n        while (ii < length) {\n            codePoint = string.codePointAt(ii);\n            cc = 0;\n            bits = 0;\n            if (codePoint <= 0x0000007F) {\n                cc = 0;\n                bits = 0x00;\n            } else if (codePoint <= 0x000007FF) {\n                cc = 6;\n                bits = 0xC0;\n            } else if (codePoint <= 0x0000FFFF) {\n                cc = 12;\n                bits = 0xE0;\n            } else if (codePoint <= 0x001FFFFF) {\n                cc = 18;\n                bits = 0xF0;\n            }\n            octets.push(bits | (codePoint >> cc));\n            cc -= 6;\n            while (cc >= 0) {\n                octets.push(0x80 | ((codePoint >> cc) & 0x3F));\n                cc -= 6;\n            }\n            ii += (\n                codePoint >= 0x10000\n                ? 2\n                : 1\n            );\n        }\n        return octets;\n    };\n    globalThis.TextDecoder = globalThis.TextDecoder || TextXxcoder;\n    globalThis.TextEncoder = globalThis.TextEncoder || TextXxcoder;\n}());\n\n\n\n// run shared js-env code - function\n(function () {\n// init lib Blob\nlocal.Blob = (\n    local.isBrowser\n    ? globalThis.Blob\n    : function (array, opt) {\n        /*\n         * this function will create a node-compatible Blob instance\n         * https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\n         */\n        this.bff = local.bufferConcat(array.map(function (elem) {\n            return (\n                // ternary-operator\n                (\n                    typeof elem === \"string\"\n                    || Object.prototype.toString.call(elem)\n                    === \"[object Uint8Array]\"\n                )\n                ? elem\n                : String(elem)\n            );\n        }));\n        this.type = opt && opt.type;\n    }\n);\n\n// init lib FormData\nlocal.FormData = function () {\n/*\n * this function will create a serverLocal-compatible FormData instance\n * The FormData(form) constructor must run these steps:\n * 1. Let fd be a new FormData object.\n * 2. If form is given, set fd's entries to the result\n *    of constructing the form data set for form. (not implemented)\n * 3. Return fd.\n * https://xhr.spec.whatwg.org/#dom-formdata\n */\n    this.entryList = [];\n};\n\nlocal.FormData.prototype.append = function (name, value, filename) {\n/*\n * The append(name, value, filename) method, when invoked, must run these steps:\n * 1. If the filename argument is given, set value to a new File object\n *    whose contents are value and name is filename.\n * 2. Append a new entry whose name is name, and value is value,\n *    to context object's list of entries.\n * https://xhr.spec.whatwg.org/#dom-formdata-append\n */\n    if (filename) {\n        // bug-workaround - chromium cannot assign name to Blob instance\n        local.tryCatchOnError(function () {\n            value.name = filename;\n        }, local.nop);\n    }\n    this.entryList.push({\n        name,\n        value\n    });\n};\n\nlocal.FormData.prototype.read = function (onError) {\n/*\n * this function will read from formData as a buffer, e.g.\n * --Boundary\\r\\n\n * Content-Disposition: form-data; name=\"key\"\\r\\n\n * \\r\\n\n * value\\r\\n\n * --Boundary\\r\\n\n * Content-Disposition: form-data; name=\"input1\"; filename=\"file1.png\"\\r\\n\n * Content-Type: image/jpeg\\r\\n\n * \\r\\n\n * <data1>\\r\\n\n * --Boundary\\r\\n\n * Content-Disposition: form-data; name=\"input2\"; filename=\"file2.png\"\\r\\n\n * Content-Type: image/jpeg\\r\\n\n * \\r\\n\n * <data2>\\r\\n\n * --Boundary--\\r\\n\n * https://tools.ietf.org/html/rfc7578\n */\n    var boundary;\n    var result;\n    // handle null-case\n    if (!this.entryList.length) {\n        onError(null, \"\");\n        return;\n    }\n    // init boundary\n    boundary = \"--\" + Date.now().toString(16) + Math.random().toString(16);\n    // init result\n    result = [];\n    local.onParallelList({\n        list: this.entryList\n    }, function (option2, onParallel) {\n        var value;\n        value = option2.elem.value;\n        if (!(value && value.constructor === local.Blob)) {\n            result[option2.ii] = [\n                (\n                    boundary + \"\\r\\nContent-Disposition: form-data; name=\\\"\"\n                    + option2.elem.name + \"\\\"\\r\\n\\r\\n\"\n                ), value, \"\\r\\n\"\n            ];\n            onParallel.counter += 1;\n            onParallel();\n            return;\n        }\n        // read from blob in parallel\n        onParallel.counter += 1;\n        local.blobRead(value, function (err, data) {\n            result[option2.ii] = !err && [\n                (\n                    boundary + \"\\r\\nContent-Disposition: form-data; name=\\\"\"\n                    + option2.elem.name + \"\\\"\" + (\n                        (value && value.name)\n                        // read param filename\n                        ? \"; filename=\\\"\" + value.name + \"\\\"\"\n                        : \"\"\n                    ) + \"\\r\\n\" + (\n                        (value && value.type)\n                        // read param Content-Type\n                        ? \"Content-Type: \" + value.type + \"\\r\\n\"\n                        : \"\"\n                    ) + \"\\r\\n\"\n                ), data, \"\\r\\n\"\n            ];\n            onParallel(err);\n        });\n    }, function (err) {\n        // add closing boundary\n        result.push([\n            boundary + \"--\\r\\n\"\n        ]);\n        // concatenate result\n        onError(\n            err,\n            // flatten result\n            !err\n            && local.bufferConcat(Array.prototype.concat.apply([], result))\n        );\n    });\n};\n\n// init lib _http\nlocal._http = {};\n\n// init _http.IncomingMessage\nlocal._http.IncomingMessage = function (xhr) {\n/*\n * An IncomingMessage object is created by http.Server or http.ClientRequest\n * and passed as the first argument to the 'req' and 'res' event\n * respectively.\n * It may be used to access res status, headers and data.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_http_incomingmessage\n */\n    this.headers = xhr.headers;\n    this.httpVersion = \"1.1\";\n    this.method = xhr.method;\n    this.onEvent = document.createDocumentFragment();\n    this.readable = true;\n    this.url = xhr.url;\n};\n\nlocal._http.IncomingMessage.prototype.addListener = function (evt, onEvent) {\n/*\n * Adds a listener to the end of the listeners array for the specified event.\n * No checks are made to see if the listener has already been added.\n * Multiple calls passing the same combination of event and listener will result\n * in the listener being added multiple times.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_emitter_addlistener_event_listener\n */\n    this.onEvent.addEventListener(evt, function (evt) {\n        onEvent(evt.data);\n    });\n    if (this.readable && evt === \"end\") {\n        this.readable = null;\n        this.emit(\"data\", this.data);\n        this.emit(\"end\");\n    }\n    return this;\n};\n\nlocal._http.IncomingMessage.prototype.emit = function (evt, data) {\n/*\n * Execute each of the listeners in order with the supplied arguments.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_emitter_emit_event_arg1_arg2\n */\n    evt = new Event(evt);\n    evt.data = data;\n    this.onEvent.dispatchEvent(evt);\n};\n\n/*\n * Adds a listener to the end of the listeners array for the specified event.\n * No checks are made to see if the listener has already been added.\n * Multiple calls passing the same combination of event and listener will result\n * in the listener being added multiple times.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_emitter_on_event_listener\n */\nlocal._http.IncomingMessage.prototype.on = (\n    local._http.IncomingMessage.prototype.addListener\n);\n\nlocal._http.IncomingMessage.prototype.pipe = function (writable) {\n/*\n * This method pulls all the data out of a readable stream, and writes it\n * to the supplied destination, automatically managing the flow\n * so that the destination is not overwhelmed by a fast readable stream.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_readable_pipe_destination_options\n */\n    this.on(\"data\", function (chunk) {\n        writable.write(chunk);\n    });\n    this.on(\"end\", function () {\n        writable.end();\n    });\n    return writable;\n};\n\nlocal._http.STATUS_CODES = {\n    \"100\": \"Continue\",\n    \"101\": \"Switching Protocols\",\n    \"102\": \"Processing\",\n    \"200\": \"OK\",\n    \"201\": \"Created\",\n    \"202\": \"Accepted\",\n    \"203\": \"Non-Authoritative Information\",\n    \"204\": \"No Content\",\n    \"205\": \"Reset Content\",\n    \"206\": \"Partial Content\",\n    \"207\": \"Multi-Status\",\n    \"208\": \"Already Reported\",\n    \"226\": \"IM Used\",\n    \"300\": \"Multiple Choices\",\n    \"301\": \"Moved Permanently\",\n    \"302\": \"Found\",\n    \"303\": \"See Other\",\n    \"304\": \"Not Modified\",\n    \"305\": \"Use Proxy\",\n    \"307\": \"Temporary Redirect\",\n    \"308\": \"Permanent Redirect\",\n    \"400\": \"Bad Request\",\n    \"401\": \"Unauthorized\",\n    \"402\": \"Payment Required\",\n    \"403\": \"Forbidden\",\n    \"404\": \"Not Found\",\n    \"405\": \"Method Not Allowed\",\n    \"406\": \"Not Acceptable\",\n    \"407\": \"Proxy Authentication Required\",\n    \"408\": \"Request Timeout\",\n    \"409\": \"Conflict\",\n    \"410\": \"Gone\",\n    \"411\": \"Length Required\",\n    \"412\": \"Precondition Failed\",\n    \"413\": \"Payload Too Large\",\n    \"414\": \"URI Too Long\",\n    \"415\": \"Unsupported Media Type\",\n    \"416\": \"Range Not Satisfiable\",\n    \"417\": \"Expectation Failed\",\n    \"418\": \"I'm a teapot\",\n    \"421\": \"Misdirected Request\",\n    \"422\": \"Unprocessable Entity\",\n    \"423\": \"Locked\",\n    \"424\": \"Failed Dependency\",\n    \"425\": \"Unordered Collection\",\n    \"426\": \"Upgrade Required\",\n    \"428\": \"Precondition Required\",\n    \"429\": \"Too Many Requests\",\n    \"431\": \"Request Header Fields Too Large\",\n    \"451\": \"Unavailable For Legal Reasons\",\n    \"500\": \"Internal Server Error\",\n    \"501\": \"Not Implemented\",\n    \"502\": \"Bad Gateway\",\n    \"503\": \"Service Unavailable\",\n    \"504\": \"Gateway Timeout\",\n    \"505\": \"HTTP Version Not Supported\",\n    \"506\": \"Variant Also Negotiates\",\n    \"507\": \"Insufficient Storage\",\n    \"508\": \"Loop Detected\",\n    \"509\": \"Bandwidth Limit Exceeded\",\n    \"510\": \"Not Extended\",\n    \"511\": \"Network Authentication Required\"\n};\n\n// init _http.ServerResponse\nlocal._http.ServerResponse = function (onResponse) {\n/*\n * This object is created internally by a HTTP server--not by the user.\n * It is passed as the second parameter to the 'req' event.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_class_http_serverresponse\n */\n    this.chunkList = [];\n    this.onEvent = document.createDocumentFragment();\n    this.onResponse = onResponse;\n    this.resHeaders = {};\n    this.statusCode = 200;\n};\n\n/*\n * Adds a listener to the end of the listeners array for the specified event.\n * No checks are made to see if the listener has already been added.\n * Multiple calls passing the same combination of event and listener will result\n * in the listener being added multiple times.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_emitter_addlistener_event_listener\n */\nlocal._http.ServerResponse.prototype.addListener = (\n    local._http.IncomingMessage.prototype.addListener\n);\n/*\n * Execute each of the listeners in order with the supplied arguments.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_emitter_emit_event_arg1_arg2\n */\nlocal._http.ServerResponse.prototype.emit = (\n    local._http.IncomingMessage.prototype.emit\n);\n\nlocal._http.ServerResponse.prototype.end = function (data) {\n/*\n * This method signals to the server that all of the res headers and body\n * have been sent; that server should consider this message complete.\n * The method, res.end(), MUST be called on each res.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_response_end_data_encoding_callback\n */\n    var that;\n    that = this;\n    if (that._isDone) {\n        return;\n    }\n    that._isDone = true;\n    that.chunkList.push(data);\n    // notify server res is finished\n    that.emit(\"finish\");\n    // asynchronously send res from server to client\n    setTimeout(function () {\n        that.onResponse(that);\n        that.emit(\"data\", local.bufferConcat(that.chunkList));\n        that.emit(\"end\");\n    });\n};\n\n/*\n * Adds a listener to the end of the listeners array for the specified event.\n * No checks are made to see if the listener has already been added.\n * Multiple calls passing the same combination of event and listener\n * will result in the listener being added multiple times.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_emitter_on_event_listener\n */\nlocal._http.ServerResponse.prototype.on = (\n    local._http.IncomingMessage.prototype.addListener\n);\n\nlocal._http.ServerResponse.prototype.setHeader = function (key, value) {\n/*\n * Sets a single header value for implicit headers.\n * If this header already exists in the to-be-sent headers,\n * its value will be replaced.\n * Use an array of strings here if you need to send multiple headers\n * with the same name.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_response_setheader_name_value\n */\n    this.resHeaders[key.toLowerCase()] = value;\n};\n\nlocal._http.ServerResponse.prototype.write = function (data) {\n/*\n * This sends a chunk of the res body.\n * This method may be called multiple times\n * to provide successive parts of the body.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_response_write_chunk_encoding_callback\n */\n    this.chunkList.push(data);\n};\n\nlocal._http.createServer = function () {\n/*\n * Returns a new instance of http.Server.\n * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_http_createserver_requestlistener\n */\n    return {\n        listen: function (port, onError) {\n        /*\n         * This will cause the server to accept connections\n         * on the specified handle,\n         * but it is presumed that the file descriptor or handle\n         * has already been bound to a port or domain socket.\n         * https://nodejs.org/dist/v0.12.18/docs/api/all.html#all_server_listen_handle_callback\n         */\n            onError(null, port);\n        }\n    };\n};\n\nlocal._http.request = function (xhr, onResponse) {\n    var isDone;\n    xhr = {\n        headers: xhr.headers,\n        method: xhr.method,\n        timeout: xhr.timeout,\n        url: xhr.href\n    };\n    xhr.end = function (data) {\n        if (isDone) {\n            return;\n        }\n        isDone = true;\n        xhr.serverReq.data = data;\n        // asynchronously send req from client -> server\n        setTimeout(function () {\n            local.serverLocalReqHandler(\n                xhr.serverReq,\n                xhr.serverResponse\n            );\n        });\n    };\n    xhr.on = function () {\n        return xhr;\n    };\n    xhr.serverReq = new local._http.IncomingMessage(xhr);\n    xhr.serverResponse = new local._http.ServerResponse(onResponse);\n    return xhr;\n};\n\nlocal._testCase_buildApidoc_default = function (opt, onError) {\n/*\n * this function will test buildApidoc's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    return local.buildApidoc(opt, onError);\n};\n\nlocal._testCase_buildApp_default = function (opt, onError) {\n/*\n * this function will test buildApp's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    globalThis.local.testCase_buildReadme_default(opt, local.onErrorThrow);\n    globalThis.local.testCase_buildLib_default(opt, local.onErrorThrow);\n    globalThis.local.testCase_buildTest_default(opt, local.onErrorThrow);\n    local.buildApp(opt, onError);\n};\n\nlocal._testCase_buildLib_default = function (opt, onError) {\n/*\n * this function will test buildLib's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    return local.buildLib({}, onError);\n};\n\nlocal._testCase_buildReadme_default = function (opt, onError) {\n/*\n * this function will test buildReadme's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    return local.buildReadme({}, onError);\n};\n\nlocal._testCase_buildTest_default = function (opt, onError) {\n/*\n * this function will test buildTest's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    return local.buildTest({}, onError);\n};\n\nlocal._testCase_webpage_default = function (opt, onError) {\n/*\n * this function will test webpage's default handling-behavior\n */\n    local.domStyleValidate();\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    local.browserTest({\n        fileScreenshot: (\n            local.env.npm_config_dir_build\n            + \"/screenshot.\" + local.env.MODE_BUILD + \".browser.%2F.png\"\n        ),\n        modeCoverageMerge: true,\n        url: (\n            local.assetsDict[\"/\"].indexOf(\n                \"<script src=\\\"assets.test.js\\\"></script>\"\n            ) >= 0\n            ? local.serverLocalHost + \"?modeTest=1&timeoutDefault=\"\n            + local.timeoutDefault\n            : local.serverLocalHost\n            + \"/assets.utility2.base.html?modeTest=1&timeoutDefault=1\"\n        ) + \"&modeTestCase=\" + local.modeTestCase.replace((\n            /_?testCase_webpage_default/\n        ), \"\")\n    }, onError);\n};\n\nlocal.ajax = function (opt, onError) {\n/*\n * this function will send an ajax-req\n * with given <opt>.url and callback <onError>\n * with err and timeout handling\n * example usage:\n    local.ajax({\n        data: \"hello world\",\n        header: {\"x-header-hello\": \"world\"},\n        method: \"POST\",\n        url: \"/index.html\"\n    }, function (err, xhr) {\n        console.log(xhr.statusCode);\n        console.log(xhr.responseText);\n    });\n */\n    var ajaxProgressUpdate;\n    var bufferValidateAndCoerce;\n    var isDone;\n    var local2;\n    var onEvent;\n    var streamCleanup;\n    var timeout;\n    var tmp;\n    var xhr;\n    var xhrInit;\n    // init local2\n    local2 = opt.local2 || local.utility2 || {};\n    // init function\n    ajaxProgressUpdate = local2.ajaxProgressUpdate || local.nop;\n    bufferValidateAndCoerce = local2.bufferValidateAndCoerce || function (\n        bff,\n        mode\n    ) {\n    /*\n     * this function will validate and coerce/convert <bff> -> Buffer\n     * (or String if <mode> = \"string\")\n     */\n        // coerce ArrayBuffer -> Buffer\n        if (Object.prototype.toString.call(bff) === \"[object ArrayBuffer]\") {\n            bff = new Uint8Array(bff);\n        }\n        // convert Buffer -> utf8\n        if (mode === \"string\" && typeof bff !== \"string\") {\n            bff = String(bff);\n        }\n        return bff;\n    };\n    onEvent = function (evt) {\n    /*\n     * this function will handle events\n     */\n        if (Object.prototype.toString.call(evt) === \"[object Error]\") {\n            xhr.err = xhr.err || evt;\n            xhr.onEvent({\n                type: \"error\"\n            });\n            return;\n        }\n        // init statusCode\n        xhr.statusCode = (xhr.statusCode || xhr.status) | 0;\n        switch (evt.type) {\n        case \"abort\":\n        case \"error\":\n        case \"load\":\n            if (isDone) {\n                return;\n            }\n            isDone = true;\n            // decrement ajaxProgressCounter\n            local2.ajaxProgressCounter = Math.max(\n                local2.ajaxProgressCounter - 1,\n                0\n            );\n            ajaxProgressUpdate();\n            // handle abort or err event\n            switch (!xhr.err && evt.type) {\n            case \"abort\":\n            case \"error\":\n                xhr.err = new Error(\"ajax - event \" + evt.type);\n                break;\n            case \"load\":\n                if (xhr.statusCode >= 400) {\n                    xhr.err = new Error(\n                        \"ajax - statusCode \" + xhr.statusCode\n                    );\n                }\n                break;\n            }\n            // debug statusCode / method / url\n            if (xhr.err) {\n                xhr.statusCode = xhr.statusCode || 500;\n                xhr.err.statusCode = xhr.statusCode;\n                tmp = (\n                    // ternary-operator\n                    (\n                        local.isBrowser\n                        ? \"browser\"\n                        : \"node\"\n                    )\n                    + \" - \" + xhr.statusCode + \" \" + xhr.method + \" \" + xhr.url\n                    + \"\\n\"\n                );\n                xhr.err.message = tmp + xhr.err.message;\n                xhr.err.stack = tmp + xhr.err.stack;\n            }\n            // update resHeaders\n            // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\n            if (xhr.getAllResponseHeaders) {\n                xhr.getAllResponseHeaders().replace((\n                    /(.*?):\\u0020*(.*?)\\r\\n/g\n                ), function (ignore, match1, match2) {\n                    xhr.resHeaders[match1.toLowerCase()] = match2;\n                });\n            }\n            // debug ajaxResponse\n            xhr.resContentLength = (\n                xhr.response\n                && (xhr.response.byteLength || xhr.response.length)\n            ) | 0;\n            xhr.timeElapsed = Date.now() - xhr.timeStart;\n            if (xhr.modeDebug) {\n                console.error(\"serverLog - \" + JSON.stringify({\n                    time: new Date(xhr.timeStart).toISOString(),\n                    type: \"ajaxResponse\",\n                    method: xhr.method,\n                    url: xhr.url,\n                    statusCode: xhr.statusCode,\n                    timeElapsed: xhr.timeElapsed,\n                    // extra\n                    resContentLength: xhr.resContentLength\n                }));\n            }\n            // init responseType\n            // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType\n            switch (xhr.response && xhr.responseType) {\n            // init responseText\n            // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n            case \"\":\n            case \"text\":\n                if (typeof xhr.responseText === \"string\") {\n                    break;\n                }\n                xhr.responseText = bufferValidateAndCoerce(\n                    xhr.response,\n                    \"string\"\n                );\n                break;\n            case \"arraybuffer\":\n                xhr.responseBuffer = bufferValidateAndCoerce(xhr.response);\n                break;\n            }\n            // cleanup timerTimeout\n            clearTimeout(xhr.timerTimeout);\n            // cleanup reqStream and resStream\n            streamCleanup(xhr.reqStream);\n            streamCleanup(xhr.resStream);\n            onError(xhr.err, xhr);\n            break;\n        }\n    };\n    streamCleanup = function (stream) {\n    /*\n     * this function will try to end or destroy <stream>\n     */\n        var err;\n        // try to end stream\n        try {\n            stream.end();\n        } catch (errCaught) {\n            err = errCaught;\n        }\n        // if err, then try to destroy stream\n        if (err) {\n            try {\n                stream.destroy();\n            } catch (ignore) {}\n        }\n    };\n    xhrInit = function () {\n    /*\n     * this function will init xhr\n     */\n        // init opt\n        Object.keys(opt).forEach(function (key) {\n            if (key[0] !== \"_\") {\n                xhr[key] = opt[key];\n            }\n        });\n        // init timeout\n        timeout = xhr.timeout || local2.timeoutDefault || 30000;\n        // init default\n        local.objectAssignDefault(xhr, {\n            corsForwardProxyHost: local2.corsForwardProxyHost,\n            headers: {},\n            location: (local.isBrowser && location) || {},\n            method: \"GET\",\n            responseType: \"\"\n        });\n        // init headers\n        Object.keys(xhr.headers).forEach(function (key) {\n            xhr.headers[key.toLowerCase()] = xhr.headers[key];\n        });\n        // coerce Uint8Array -> Buffer\n        if (\n            !local.isBrowser\n            && !Buffer.isBuffer(xhr.data)\n            && Object.prototype.toString.call(xhr.data)\n            === \"[object Uint8Array]\"\n        ) {\n            Object.setPrototypeOf(xhr.data, Buffer.prototype);\n        }\n        // init misc\n        local2._debugXhr = xhr;\n        xhr.onEvent = onEvent;\n        xhr.resHeaders = {};\n        xhr.timeStart = xhr.timeStart || Date.now();\n    };\n    // init onError\n    if (local2.onErrorWithStack) {\n        onError = local2.onErrorWithStack(onError);\n    }\n    // init xhr - XMLHttpRequest\n    xhr = (\n        local.isBrowser\n        && !opt.httpReq\n        && !(local2.serverLocalUrlTest && local2.serverLocalUrlTest(opt.url))\n        && new XMLHttpRequest()\n    );\n    // init xhr - http.request\n    if (!xhr) {\n        xhr = local.identity(local2.urlParse || require(\"url\").parse)(opt.url);\n        // init xhr\n        xhrInit();\n        // init xhr - http.request\n        xhr = local.identity(\n            opt.httpReq\n            || (local.isBrowser && local2.http.request)\n            || require(xhr.protocol.slice(0, -1)).request\n        )(xhr, function (resStream) {\n        /*\n         * this function will read <resStream>\n         */\n            var chunkList;\n            chunkList = [];\n            xhr.resHeaders = resStream.resHeaders || resStream.headers;\n            xhr.resStream = resStream;\n            xhr.statusCode = resStream.statusCode;\n            resStream.dataLength = 0;\n            resStream.on(\"data\", function (chunk) {\n                chunkList.push(chunk);\n            });\n            resStream.on(\"end\", function () {\n                xhr.response = (\n                    local.isBrowser\n                    ? chunkList[0]\n                    : Buffer.concat(chunkList)\n                );\n                resStream.dataLength = (\n                    xhr.response.byteLength || xhr.response.length\n                );\n                xhr.onEvent({\n                    type: \"load\"\n                });\n            });\n            resStream.on(\"error\", xhr.onEvent);\n        });\n        xhr.abort = function () {\n        /*\n         * this function will abort xhr-req\n         * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort\n         */\n            xhr.onEvent({\n                type: \"abort\"\n            });\n        };\n        xhr.addEventListener = local.nop;\n        xhr.open = local.nop;\n        xhr.reqStream = xhr;\n        xhr.send = xhr.end;\n        xhr.setRequestHeader = local.nop;\n        xhr.on(\"error\", onEvent);\n    }\n    // init xhr\n    xhrInit();\n    // init timerTimeout\n    xhr.timerTimeout = setTimeout(function () {\n        xhr.err = xhr.err || new Error(\n            \"onTimeout - errTimeout - \"\n            + timeout + \" ms - \" + \"ajax \" + xhr.method + \" \" + xhr.url\n        );\n        xhr.abort();\n        // cleanup reqStream and resStream\n        streamCleanup(xhr.reqStream);\n        streamCleanup(xhr.resStream);\n    }, timeout);\n    // increment ajaxProgressCounter\n    local2.ajaxProgressCounter = local2.ajaxProgressCounter || 0;\n    local2.ajaxProgressCounter += 1;\n    // init event-handling\n    xhr.addEventListener(\"abort\", xhr.onEvent);\n    xhr.addEventListener(\"error\", xhr.onEvent);\n    xhr.addEventListener(\"load\", xhr.onEvent);\n    xhr.addEventListener(\"loadstart\", ajaxProgressUpdate);\n    xhr.addEventListener(\"progress\", ajaxProgressUpdate);\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/upload\n    if (xhr.upload && xhr.upload.addEventListener) {\n        xhr.upload.addEventListener(\"progress\", ajaxProgressUpdate);\n    }\n    // open url - corsForwardProxyHost\n    if (local.functionOrNop(local2.corsForwardProxyHostIfNeeded)(xhr)) {\n        xhr.open(xhr.method, local2.corsForwardProxyHostIfNeeded(xhr));\n        xhr.setRequestHeader(\n            \"forward-proxy-headers\",\n            JSON.stringify(xhr.headers)\n        );\n        xhr.setRequestHeader(\"forward-proxy-url\", xhr.url);\n    // open url - default\n    } else {\n        xhr.open(xhr.method, xhr.url);\n    }\n    // send headers\n    Object.keys(xhr.headers).forEach(function (key) {\n        xhr.setRequestHeader(key, xhr.headers[key]);\n    });\n    // send data\n    switch ((xhr.data && xhr.data.constructor) || true) {\n    // Blob\n    // https://developer.mozilla.org/en-US/docs/Web/API/Blob\n    case local2.Blob:\n    // FormData\n    // https://developer.mozilla.org/en-US/docs/Web/API/FormData\n    case local2.FormData:\n        local2.blobRead(xhr.data, function (err, data) {\n            if (err) {\n                xhr.onEvent(err);\n                return;\n            }\n            // send data\n            xhr.send(data);\n        });\n        break;\n    default:\n        xhr.send(xhr.data);\n    }\n    return xhr;\n};\n\nlocal.ajaxProgressUpdate = function () {\n/*\n * this function will update ajaxProgress\n */\n    var ajaxProgressDiv1;\n    // init state\n    local.ajaxProgressCounter = local.ajaxProgressCounter || 0;\n    local.ajaxProgressState = local.ajaxProgressState || 0;\n    ajaxProgressDiv1 = (local.isBrowser && document.querySelector(\n        \"#ajaxProgressDiv1\"\n    )) || {\n        style: {\n            width: \"\"\n        }\n    };\n    // init ajaxProgressDiv1StyleBackground\n    local.ajaxProgressDiv1StyleBackground = (\n        local.ajaxProgressDiv1StyleBackground\n        || ajaxProgressDiv1.style.background\n    );\n    // show ajaxProgress\n    ajaxProgressDiv1.style.background = local.ajaxProgressDiv1StyleBackground;\n    // increment ajaxProgress\n    if (local.ajaxProgressCounter > 0) {\n        local.timerIntervalAjaxProgressHide = (\n            local.timerIntervalAjaxProgressHide\n            || setInterval(local.ajaxProgressUpdate, 2000)\n        );\n        // this algorithm will indefinitely increment ajaxProgressBar\n        // with successively smaller increments without ever reaching 100%\n        if ((ajaxProgressDiv1.style.width.slice(0, -1) | 0) > 95) {\n            ajaxProgressDiv1.style.width = \"0%\";\n            local.ajaxProgressState = 0;\n        }\n        local.ajaxProgressState += 1;\n        ajaxProgressDiv1.style.width = Math.max(\n            100 - 75 * Math.exp(-0.125 * local.ajaxProgressState),\n            ajaxProgressDiv1.style.width.slice(0, -1) | 0\n        ) + \"%\";\n    } else {\n        // finish ajaxProgress\n        ajaxProgressDiv1.style.width = \"100%\";\n    }\n    // cleanup timerTimeout\n    clearTimeout(local.timerTimeoutAjaxProgressHide);\n    // hide ajaxProgress\n    local.timerTimeoutAjaxProgressHide = setTimeout(function () {\n        ajaxProgressDiv1.style.background = \"transparent\";\n        local.ajaxProgressCounter = 0;\n        local.ajaxProgressState = 0;\n        // reset ajaxProgress\n        clearInterval(local.timerIntervalAjaxProgressHide);\n        local.timerIntervalAjaxProgressHide = null;\n        setTimeout(function () {\n            if (!local.ajaxProgressState) {\n                ajaxProgressDiv1.style.width = \"0%\";\n            }\n        }, 500);\n    }, (\n        local.ajaxProgressCounter > 0\n        ? local.timeoutDefault\n        : 1000\n    ));\n};\n\nlocal.assertJsonEqual = function (aa, bb, message) {\n/*\n * this function will assert jsonStringifyOrdered(<aa>) === JSON.stringify(<bb>)\n */\n    aa = local.jsonStringifyOrdered(aa);\n    bb = JSON.stringify(bb);\n    local.assertThrow(aa === bb, message || [\n        aa, bb\n    ]);\n};\n\nlocal.assertJsonNotEqual = function (aa, bb, message) {\n/*\n * this function will assert jsonStringifyOrdered(<aa>) !== JSON.stringify(<bb>)\n */\n    aa = local.jsonStringifyOrdered(aa);\n    bb = JSON.stringify(bb);\n    local.assertThrow(aa !== bb, [\n        aa\n    ], message || aa);\n};\n\nlocal.base64FromBuffer = function (bff) {\n/*\n * this function will convert Uint8Array <bff> to base64\n * https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView#The_code\n */\n    var ii;\n    var mod3;\n    var text;\n    var uint24;\n    var uint6ToB64;\n    // convert utf8 -> Uint8Array\n    if (typeof bff === \"string\") {\n        bff = new TextEncoder().encode(bff);\n    }\n    bff = bff || [];\n    text = \"\";\n    uint24 = 0;\n    uint6ToB64 = function (uint6) {\n        return (\n            uint6 < 26\n            ? uint6 + 65\n            : uint6 < 52\n            ? uint6 + 71\n            : uint6 < 62\n            ? uint6 - 4\n            : uint6 === 62\n            ? 43\n            : 47\n        );\n    };\n    ii = 0;\n    while (ii < bff.length) {\n        mod3 = ii % 3;\n        uint24 |= bff[ii] << (16 >>> mod3 & 24);\n        if (mod3 === 2 || bff.length - ii === 1) {\n            text += String.fromCharCode(\n                uint6ToB64(uint24 >>> 18 & 63),\n                uint6ToB64(uint24 >>> 12 & 63),\n                uint6ToB64(uint24 >>> 6 & 63),\n                uint6ToB64(uint24 & 63)\n            );\n            uint24 = 0;\n        }\n        ii += 1;\n    }\n    return text.replace((\n        /A(?=A$|$)/gm\n    ), \"=\");\n};\n\nlocal.base64ToBuffer = function (b64, mode) {\n/*\n * this function will convert <b64> to Uint8Array\n * https://gist.github.com/wang-bin/7332335\n */\n    var bff;\n    var byte;\n    var chr;\n    var ii;\n    var jj;\n    var map64;\n    var mod4;\n    b64 = b64 || \"\";\n    bff = new Uint8Array(b64.length); // 3/4\n    byte = 0;\n    jj = 0;\n    map64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    mod4 = 0;\n    ii = 0;\n    while (ii < b64.length) {\n        chr = map64.indexOf(b64[ii]);\n        if (chr >= 0) {\n            mod4 %= 4;\n            if (mod4 === 0) {\n                byte = chr;\n            } else {\n                byte = byte * 64 + chr;\n                bff[jj] = 255 & (byte >> ((-2 * (mod4 + 1)) & 6));\n                jj += 1;\n            }\n            mod4 += 1;\n        }\n        ii += 1;\n    }\n    // optimization - create resized-view of bff\n    bff = bff.subarray(0, jj);\n    return local.bufferValidateAndCoerce(bff, mode);\n};\n\nlocal.base64ToUtf8 = function (b64) {\n/*\n * this function will convert <b64> -> utf8\n */\n    return local.base64ToBuffer(b64, \"string\");\n};\n\nlocal.blobRead = function (blob, onError) {\n/*\n * this function will read from <blob>\n */\n    var isDone;\n    var reader;\n    if (blob && blob.constructor && blob.constructor === local.FormData) {\n        blob.read(onError);\n        return;\n    }\n    if (!local.isBrowser) {\n        onError(null, local.bufferValidateAndCoerce(blob.bff));\n        return;\n    }\n    reader = new FileReader();\n    reader.onabort = function (evt) {\n        if (isDone) {\n            return;\n        }\n        isDone = true;\n        switch (evt.type) {\n        case \"abort\":\n        case \"error\":\n            onError(new Error(\"blobRead - \" + evt.type));\n            break;\n        case \"load\":\n            onError(\n                null,\n                Object.prototype.toString.call(reader.result)\n                === \"[object ArrayBuffer]\"\n                // convert ArrayBuffer -> Uint8Array\n                ? new Uint8Array(reader.result)\n                : reader.result\n            );\n            break;\n        }\n    };\n    reader.onerror = reader.onabort;\n    reader.onload = reader.onabort;\n    reader.readAsArrayBuffer(blob);\n};\n\nlocal.browserTest = function (opt, onError) {\n/*\n * this function will spawn an electron process to test <opt>.url\n */\n    var isDone;\n    var isDoneHtml;\n    var onMessage;\n    var onParallel;\n    var timerTimeout;\n    var window;\n    window = opt.window || globalThis;\n    // init utility2_testReport\n    window.utility2_testReport = window.utility2_testReport || {\n        coverage: window.__coverage__,\n        testPlatformList: [\n            {\n                name: (\n                    local.isBrowser\n                    ? (\n                        \"browser - \"\n                        + location.pathname + \" - \" + navigator.userAgent\n                    )\n                    : \"node - \" + process.platform + \" \" + process.version\n                ) + \" - \" + new Date().toISOString(),\n                screenshot: local.env && local.env.MODE_BUILD_SCREENSHOT_IMG,\n                testCaseList: []\n            }\n        ]\n    };\n    window.utility2_testReportSave = (\n        window.utility2_testReportSave\n        || local.nop\n    );\n    if (opt.modeTestReportCreate) {\n        return;\n    }\n    onMessage = function (evt, type, data) {\n        switch (evt && type) {\n        case \"html\":\n            if (isDoneHtml) {\n                return;\n            }\n            isDoneHtml = true;\n            opt.fs.writeFile(opt.fileScreenshot.replace((\n                /\\.\\w+$/\n            ), \".html\"), data, onParallel);\n            return;\n        case \"testReport\":\n            if (opt.isDoneTestReport || opt.modeBrowserTest !== \"test\") {\n                return;\n            }\n            opt.isDoneTestReport = true;\n            // save browser-coverage\n            if (data.coverage) {\n                onParallel.counter += 1;\n                opt.fs.writeFile(\n                    opt.fileCoverage,\n                    JSON.stringify(data.coverage),\n                    onParallel\n                );\n                data.coverage = null;\n            }\n            // save browser-screenshot\n            data.testPlatformList[0].screenshot = (\n                opt.fileScreenshot.replace((\n                    /.*\\//\n                ), \"\")\n            );\n            // save browser-test-report\n            onParallel.counter += 1;\n            opt.fs.writeFile(\n                opt.fileTestReport,\n                JSON.stringify(data, null, 4),\n                onParallel\n            );\n            onParallel();\n            return;\n        }\n    };\n    local.onNext(opt, function (err, data) {\n        switch (opt.modeNext) {\n        // node - init\n        case 1:\n            // init fileElectronHtml\n            opt.fileElectronHtml = (\n                opt.npm_config_dir_tmp\n                + \"/electron.\"\n                + Date.now().toString(16)\n                + Math.random().toString(16)\n                + \".html\"\n            );\n            // init url\n            if (!(\n                /^\\w+:\\/\\//\n            ).test(opt.url)) {\n                opt.url = local.path.resolve(process.cwd(), opt.url);\n            }\n            opt.urlParsed = local.urlParse(opt.url);\n            // init testName\n            opt.testName = opt.urlParsed.pathname;\n            if (opt.testName.indexOf(process.cwd()) === 0) {\n                opt.testName = opt.testName.replace(process.cwd(), \"\");\n            }\n            opt.testName = (\n                opt.MODE_BUILD + \".browser.\"\n                + encodeURIComponent(opt.testName.replace(\n                    \"/build..\"\n                    + opt.CI_BRANCH\n                    + \"..\" + opt.CI_HOST,\n                    \"/build\"\n                ))\n            );\n            local.objectSetDefault(opt, {\n                fileCoverage: (\n                    opt.npm_config_dir_tmp + \"/coverage.\"\n                    + opt.testName + \".json\"\n                ),\n                fileScreenshot: (\n                    opt.npm_config_dir_build + \"/screenshot.\"\n                    + opt.testName\n                    + \".png\"\n                ),\n                fileTestReport: (\n                    opt.npm_config_dir_tmp + \"/test-report.\"\n                    + opt.testName\n                    + \".json\"\n                ),\n                modeBrowserTest: \"test\",\n                timeExit: Date.now() + opt.timeoutDefault,\n                timeoutScreenshot: opt.timeoutScreenshot || 15000\n            }, 1);\n            // init timerTimeout\n            timerTimeout = local.onTimeout(\n                opt.onNext,\n                opt.timeoutDefault,\n                opt.testName\n            ).unref();\n            data = {};\n            Object.keys(opt).forEach(function (key) {\n                if (typeof opt[key] !== \"object\") {\n                    data[key] = opt[key];\n                }\n            });\n            data.modeNext = 20;\n            // init file fileElectronHtml\n            local.fsWriteFileWithMkdirpSync(opt.fileElectronHtml, (\n                \"//<body \"\n                + \"style=\\\"border:1px solid black;margin:0;padding:0;\\\">\"\n                + \"<webview \"\n                + \"preload=\\\"\"\n                + opt.fileElectronHtml\n                + \"\\\" src=\\\"\"\n                + opt.url.replace(\"{{timeExit}}\", opt.timeExit)\n                + \"\\\" style=\"\n                + \"\\\"border:none;height:100%;margin:0;padding:0;width:100%;\\\">\"\n                + \"</webview>\"\n                + \"<script>document.body.removeChild(document.body.firstChild);\"\n                + \"</script>\"\n                + \"</body>\"\n                + \"<textarea disabled style=\\\"display:none;\\\">\\n\"\n                + local.assetsDict[\"/assets.example.begin.js\"]\n                + \"(function(local){\\n\"\n                + \"\\\"use strict\\\";\\n\"\n                + \"local=globalThis.globalLocal;\\n\"\n                + \"local.env={};\\n\"\n                + \"local.isBrowser=true;\\n\"\n                + \"var opt=\" + JSON.stringify(data) + \";\\n\"\n                + [\n                    \"browserTest\",\n                    \"nop\",\n                    \"onErrorWithStack\",\n                    \"onNext\"\n                ].map(function (key) {\n                    return \"local.\" + key + \"=\" + String(local[key])\n                    // html-safe\n                    .replace((\n                        /<\\//g\n                    ), \"<\\\\/\")\n                    // coverage-hack - un-instrument\n                    .replace((\n                        /\\b__cov_.*?\\+\\+/g\n                    ), \"0\") + \";\\n\";\n                }).join(\"\")\n                + \"local.browserTest(opt,console.error);\\n\"\n                + \"}());\\n\"\n                + \"//</textarea>\\n\"\n            ));\n            console.error(\n                \"\\nbrowserTest - created fileElectronHtml \"\n                + opt.fileElectronHtml\n                + \"\\n\"\n            );\n            // spawn an electron process to test a url\n            opt.npm_config_time_exit = opt.timeExit;\n            data.modeNext = 10;\n            local.childProcessSpawnWithTimeout(\"electron\", [\n                __filename,\n                \"utility2.browserTest\",\n                opt.url,\n                \"--enable-logging\"\n            ], {\n                env: data,\n                stdio: (\n                    (!opt.modeDebug && opt.modeSilent)\n                    ? \"ignore\"\n                    : [\n                        \"ignore\", 1, 2\n                    ]\n                ),\n                timeout: opt.timeoutDefault\n            }).once(\"error\", opt.onNext).once(\"exit\", opt.onNext);\n            return;\n        // node - after electron\n        case 2:\n            console.error(\n                \"\\nbrowserTest - exit-code \" + err + \" - \" + opt.url + \"\\n\"\n            );\n            if (opt.modeBrowserTest !== \"test\") {\n                opt.modeNext += 1000;\n                opt.onNext();\n                return;\n            }\n            // merge browser coverage\n            data = (\n                opt.modeCoverageMerge\n                && local.fsReadFileOrEmptyStringSync(opt.fileCoverage, \"json\")\n            );\n            local.istanbulCoverageMerge(window.__coverage__, data);\n            console.error(\n                \"\\nbrowserTest - merged coverage from file \"\n                + opt.fileCoverage\n                + \"\\n\"\n            );\n            // merge browser test-report\n            data = local.fsReadFileOrEmptyStringSync(\n                opt.fileTestReport,\n                \"json\"\n            );\n            local.testReportMerge(\n                window.utility2_testReport,\n                !opt.modeSilent && data\n            );\n            console.error(\n                \"\\nbrowserTest - merged test-report from file \"\n                + opt.fileTestReport\n                + \"\\n\"\n            );\n            // create test-report.json\n            local.fs.writeFileSync(\n                local.env.npm_config_dir_build + \"/test-report.json\",\n                JSON.stringify(window.utility2_testReport)\n            );\n            opt.onNext(data && data.testsFailed && new Error(data.testsFailed));\n            return;\n        // node.electron - init\n        case 11:\n            // handle uncaughtException\n            window.process.once(\"uncaughtException\", opt.onNext);\n            // wait for electron to init\n            opt.electron.app.once(\"ready\", function () {\n                opt.onNext();\n            });\n            return;\n        // node.electron - after ready\n        case 12:\n            Object.assign(opt, {\n                frame: false,\n                height: 768,\n                // disable nodeIntegration\n                // https://github.com/electron/electron/blob/v2.0.0/docs/tutorial/security.md#how-1\n                nodeIntegration: false,\n                show: false,\n                width: 1024,\n                x: 0,\n                y: 0\n            });\n            onParallel = local.onParallel(opt.onNext);\n            // onParallel - html\n            onParallel.counter += 1;\n            // onParallel - test\n            if (opt.modeBrowserTest === \"test\") {\n                onParallel.counter += 1;\n            }\n            // init event-handling - ipc\n            opt.electron.ipcMain.on(opt.fileElectronHtml, function (\n                evt,\n                type,\n                data\n            ) {\n                try {\n                    onMessage(evt, type, data);\n                } catch (errCaught) {\n                    opt.onNext(errCaught);\n                }\n            }, false);\n            // init browserWindow\n            opt.browserWindow = new opt.electron.BrowserWindow(opt);\n            // load url in browserWindow\n            opt.browserWindow.loadURL(\"file://\" + opt.fileElectronHtml);\n            return;\n        // node.electron - screenshot\n        case 13:\n            opt.browserWindow.capturePage(opt, function (data) {\n                opt.onNext(null, data);\n            });\n            return;\n        case 14:\n            opt.fs.writeFile(opt.fileScreenshot, data.toPNG(), opt.onNext);\n            return;\n        case 15:\n            console.error(\n                \"\\nbrowserTest - created screenshot file \"\n                + opt.fileScreenshot\n                + \"\\n\"\n            );\n            console.error(\n                \"browserTest - created screenshot file \"\n                + opt.fileScreenshot.replace((\n                    /\\.\\w+$/\n                ), \".html\")\n            );\n            local.exit();\n            return;\n        // node.electron.browserWindow.webview.preload - init\n        case 21:\n            // init domOnEventWindowOnloadTimeElapsed\n            (function () {\n            /*\n             * this function will measure and print time-elapsed\n             * for window.onload\n             */\n                if (window.domOnEventWindowOnloadTimeElapsed) {\n                    return;\n                }\n                window.domOnEventWindowOnloadTimeElapsed = Date.now() + 100;\n                window.addEventListener(\"load\", function () {\n                    setTimeout(function () {\n                        window.domOnEventWindowOnloadTimeElapsed = (\n                            Date.now()\n                            - window.domOnEventWindowOnloadTimeElapsed\n                        );\n                        console.error(\n                            \"domOnEventWindowOnloadTimeElapsed = \"\n                            + window.domOnEventWindowOnloadTimeElapsed\n                        );\n                    }, 100);\n                });\n            }());\n            // init event-handling - load\n            window.addEventListener(\"load\", function () {\n                setTimeout(opt.onNext, 5000);\n            });\n            // wait for render before screenshot\n            setTimeout(opt.onNext, opt.timeoutScreenshot);\n            if (opt.modeBrowserTest !== \"test\") {\n                return;\n            }\n            // init utility2_testReportSave\n            window.utility2_testReportSave = function () {\n                window.utility2_testReportSave = local.nop;\n                window.utility2_testReport.coverage = window.__coverage__;\n                opt.electron.ipcRenderer.send(\n                    opt.fileElectronHtml,\n                    \"testReport\",\n                    window.utility2_testReport\n                );\n            };\n            return;\n        // node.electron.browserWindow.webview.preload - screenshot\n        case 22:\n            // cleanup fileElectronHtml\n            opt.fs.rename(\n                opt.fileElectronHtml,\n                opt.npm_config_dir_tmp + \"/electron.html\",\n                console.error\n            );\n            opt.electron.ipcRenderer.send(\n                opt.fileElectronHtml,\n                \"html\",\n                window.document.documentElement.outerHTML\n            );\n            if (opt.modeBrowserTest === \"test\" && !window.utility2_modeTest) {\n                window.utility2_testReportSave();\n            }\n            return;\n        default:\n            if (isDone) {\n                return;\n            }\n            isDone = true;\n            // cleanup timerTimeout\n            clearTimeout(timerTimeout);\n            onError(err);\n        }\n    });\n    // init opt\n    [\n        \"CI_BRANCH\",\n        \"CI_HOST\",\n        \"DISPLAY\",\n        \"MODE_BUILD\",\n        \"PATH\",\n        \"fileCoverage\",\n        \"fileElectronHtml\",\n        \"fileScreenshot\",\n        \"fileTestReport\",\n        \"modeBrowserTest\",\n        \"modeCoverageMerge\",\n        \"modeDebug\",\n        \"modeNext\",\n        \"modeSilent\",\n        \"npm_config_dir_build\",\n        \"npm_config_dir_tmp\",\n        \"npm_config_time_exit\",\n        \"npm_config_timeout_default\",\n        \"timeExit\",\n        \"timeoutDefault\",\n        \"timeoutScreenshot\",\n        \"url\"\n    ].forEach(function (key) {\n        if (\n            local.env\n            && local.env[key] !== undefined\n            && typeof opt[key] !== \"number\"\n        ) {\n            opt[key] = opt[key] || local.env[key];\n        }\n    });\n    opt.modeNext = Number(opt.modeNext) || 0;\n    opt.timeoutDefault = (\n        Number(opt.timeoutDefault) || Number(local.timeoutDefault)\n    );\n    if (10 <= opt.modeNext) {\n        opt.electron = opt.electron || require(\"electron\");\n    }\n    opt.fs = opt.fs || require(\"fs\");\n    opt.onNext();\n};\n\nlocal.bufferConcat = function (bffList) {\n/*\n * this function will emulate node's Buffer.concat for Uint8Array in browser\n */\n    var byteLength;\n    var ii;\n    var isString;\n    var jj;\n    var result;\n    isString = true;\n    result = [\n        \"\"\n    ];\n    byteLength = 0;\n    bffList.forEach(function (bff) {\n        if (bff !== 0 && !(bff && bff.length)) {\n            return;\n        }\n        // optimization - concat string\n        if (isString && typeof bff === \"string\") {\n            result[0] += bff;\n            return;\n        }\n        isString = null;\n        bff = local.bufferValidateAndCoerce(bff);\n        byteLength += bff.byteLength;\n        result.push(bff);\n    });\n    // optimization - return string\n    if (isString) {\n        return result[0];\n    }\n    result[0] = local.bufferValidateAndCoerce(result[0]);\n    byteLength += result[0].byteLength;\n    bffList = result;\n    result = local.bufferValidateAndCoerce(new Uint8Array(byteLength));\n    ii = 0;\n    bffList.forEach(function (bff) {\n        jj = 0;\n        while (jj < bff.byteLength) {\n            result[ii] = bff[jj];\n            ii += 1;\n            jj += 1;\n        }\n    });\n    return result;\n};\n\nlocal.bufferIndexOfSubBuffer = function (bff, subBff, fromIndex) {\n/*\n * this function will search <bff> for <fromIndex> position of <subBff>\n */\n    var ii;\n    var jj;\n    var kk;\n    if (!subBff.length) {\n        return 0;\n    }\n    ii = fromIndex || 0;\n    while (ii < bff.length) {\n        kk = ii;\n        jj = 0;\n        while (jj < subBff.length) {\n            if (subBff[jj] !== bff[kk]) {\n                break;\n            }\n            kk += 1;\n            jj += 1;\n        }\n        if (jj === subBff.length) {\n            return kk - jj;\n        }\n        ii += 1;\n    }\n    return -1;\n};\n\nlocal.bufferRandomBytes = function (length) {\n/*\n * this function will return a Buffer with given <length>,\n * filled with cryptographically-strong random-values\n */\n    return (\n        // ternary-operator\n        (\n            typeof window === \"object\"\n            && window.crypto\n            && typeof window.crypto.getRandomValues === \"function\"\n        )\n        ? window.crypto.getRandomValues(new Uint8Array(length))\n        : require(\"crypto\").randomBytes(length)\n    );\n};\n\nlocal.bufferToUtf8 = function (bff) {\n/*\n * this function will convert Uint8Array <bff> -> utf8\n */\n    return local.bufferValidateAndCoerce(bff, \"string\");\n};\n\nlocal.bufferValidateAndCoerce = function (bff, mode) {\n/*\n * this function will validate and coerce/convert <bff> -> Buffer\n * (or String if <mode> = \"string\")\n */\n    // validate not 0\n    if (bff !== 0) {\n        bff = bff || \"\";\n    }\n    if (typeof bff === \"string\" && mode === \"string\") {\n        return bff;\n    }\n    // convert utf8 -> Uint8Array\n    if (typeof bff === \"string\") {\n        bff = (\n            local.isBrowser\n            ? new TextEncoder().encode(bff)\n            : Buffer.from(bff)\n        );\n    // validate instanceof Uint8Array\n    } else if (Object.prototype.toString.call(bff) !== \"[object Uint8Array]\") {\n        throw new Error(\n            \"bufferValidateAndCoerce - value is not instanceof \"\n            + \"ArrayBuffer, String, or Uint8Array\"\n        );\n    }\n    // convert Uint8Array -> utf8\n    if (mode === \"string\") {\n        return new TextDecoder().decode(bff);\n    }\n    // coerce Uint8Array -> Buffer\n    if (!local.isBrowser && !Buffer.isBuffer(bff)) {\n        Object.setPrototypeOf(bff, Buffer.prototype);\n    }\n    return bff;\n};\n\nlocal.buildApidoc = function (opt, onError) {\n/*\n * this function will build apidoc with given <opt>\n */\n    var result;\n    // optimization - do not run if $npm_config_mode_coverage = all\n    if (local.env.npm_config_mode_coverage === \"all\") {\n        onError();\n        return;\n    }\n    opt = local.objectSetDefault(opt, {\n        blacklistDict: local,\n        require: local.requireInSandbox\n    });\n    // save apidoc.html\n    result = (\n        local.fsReadFileOrEmptyStringSync(\"apidoc.html\", \"utf8\")\n        || local.apidocCreate(opt)\n    );\n    local.fsWriteFileWithMkdirpSync(\"tmp/build/apidoc.html\", result);\n    console.error(\n        \"created apidoc file \" + process.cwd() + \"/apidoc.html\\n\"\n    );\n    onError();\n};\n\nlocal.buildApp = function (opt, onError) {\n/*\n * this function will build app with given <opt>\n */\n    opt = local.objectSetDefault(opt, {\n        assetsList: []\n    });\n    // build assets\n    local.fsRmrSync(\"tmp/build/app\");\n    local.onParallelList({\n        list: [\n            {\n                file: \"/LICENSE\",\n                url: \"/LICENSE\"\n            }, {\n                file: \"/assets.\" + local.env.npm_package_nameLib + \".html\",\n                url: \"/index.html\"\n            }, {\n                file: \"/assets.\" + local.env.npm_package_nameLib + \".js\",\n                url: \"/assets.\" + local.env.npm_package_nameLib + \".js\"\n            }, {\n                file: \"/assets.app.js\",\n                url: \"/assets.app.js\"\n            }, {\n                file: \"/assets.example.html\",\n                url: \"/assets.example.html\"\n            }, {\n                file: \"/assets.example.js\",\n                url: \"/assets.example.js\"\n            }, {\n                file: \"/assets.swgg.html\",\n                url: \"/assets.swgg.html\"\n            }, {\n                file: \"/assets.swgg.swagger.json\",\n                url: \"/assets.swgg.swagger.json\"\n            }, {\n                file: \"/assets.swgg.swagger.petstore.json\",\n                url: \"/assets.swgg.swagger.petstore.json\"\n            }, {\n                file: \"/assets.swgg.swagger.server.json\",\n                url: \"/assets.swgg.swagger.server.json\"\n            }, {\n                file: \"/assets.test.js\",\n                url: \"/assets.test.js\"\n            }, {\n                file: \"/assets.utility2.html\",\n                url: \"/assets.utility2.html\"\n            }, {\n                file: \"/assets.utility2.base.html\",\n                url: \"/assets.utility2.base.html\"\n            }, {\n                file: \"/assets.utility2.rollup.js\",\n                url: \"/assets.utility2.rollup.js\"\n            }, {\n                file: \"/index.html\",\n                url: \"/index.html\"\n            }, {\n                file: \"/index.rollup.html\",\n                url: \"/index.rollup.html\"\n            }, {\n                file: \"/jsonp.utility2.stateInit\",\n                url: (\n                    \"/jsonp.utility2.stateInit\"\n                    + \"?callback=window.utility2.stateInit\"\n                )\n            }\n        ].concat(opt.assetsList)\n    }, function (option2, onParallel) {\n        option2 = option2.elem;\n        onParallel.counter += 1;\n        local.ajax(option2, function (err, xhr) {\n            // validate no err occurred\n            local.assertThrow(!err, err);\n            // jslint file\n            local.jslintAndPrint(xhr.responseText, option2.file, {\n                conditional: true,\n                coverage: local.env.npm_config_mode_coverage\n            });\n            // validate no err occurred\n            local.assertThrow(\n                !local.jslint.jslintResult.errText,\n                local.jslint.jslintResult.errText\n            );\n            local.fsWriteFileWithMkdirpSync(\n                \"tmp/build/app\" + option2.file,\n                xhr.response\n            );\n            onParallel();\n        });\n    }, function (err) {\n        // validate no err occurred\n        local.assertThrow(!err, err);\n        // test standalone assets.app.js\n        local.fsWriteFileWithMkdirpSync(\n            \"tmp/buildApp/assets.app.js\",\n            local.assetsDict[\"/assets.app.js\"]\n        );\n        local.childProcessSpawnWithTimeout(\"node\", [\n            \"assets.app.js\"\n        ], {\n            cwd: \"tmp/buildApp\",\n            env: {\n                PATH: local.env.PATH,\n                PORT: (Math.random() * 0x10000) | 0x8000,\n                npm_config_timeout_exit: 5000\n            },\n            stdio: [\n                \"ignore\", \"ignore\", 2\n            ]\n        })\n        .on(\"error\", onError)\n        .on(\"exit\", function (exitCode) {\n            // validate exitCode\n            local.assertThrow(!exitCode, exitCode);\n            onError();\n        });\n    });\n};\n\nlocal.buildLib = function (opt, onError) {\n/*\n * this function will build lib with given <opt>\n */\n    var result;\n    local.objectSetDefault(opt, {\n        customize: local.nop,\n        dataFrom: local.fsReadFileOrEmptyStringSync(\n            \"lib.\" + local.env.npm_package_nameLib + \".js\",\n            \"utf8\"\n        ),\n        dataTo: local.templateRenderMyApp(\n            local.assetsDict[\"/assets.my_app.template.js\"],\n            opt\n        )\n    });\n    // search-and-replace - customize dataTo\n    [\n        // customize top-level comment-description\n        (\n            /\\n\\u0020\\*\\n(?:[\\S\\s]*?\\n)?\\u0020\\*\\/\\n/\n        ),\n        // customize body after /* validateLineSortedReset */\n        (\n            /\\n\\/\\*\\u0020validateLineSortedReset\\u0020\\*\\/\\n[\\S\\s]*?$/\n        )\n    ].forEach(function (rgx) {\n        opt.dataTo = local.stringMerge(opt.dataTo, opt.dataFrom, rgx);\n    });\n    // customize local for assets.utility2.rollup.js\n    if (\n        local.fs.existsSync(\"./assets.utility2.rollup.js\")\n        && local.env.npm_package_nameLib !== \"swgg\"\n    ) {\n        opt.dataTo = opt.dataTo.replace(\n            \"    // || globalThis.utility2_rollup_old\",\n            \"    || globalThis.utility2_rollup_old\"\n        ).replace(\n            \"    // || require(\\\"./assets.utility2.rollup.js\\\")\",\n            \"    || require(\\\"./assets.utility2.rollup.js\\\")\"\n        );\n    }\n    // save lib\n    result = opt.dataTo;\n    local.fsWriteFileWithMkdirpSync(\n        \"lib.\" + local.env.npm_package_nameLib + \".js\",\n        result,\n        local.env.npm_config_mode_coverage && local.identity(\"noWrite\")\n    );\n    opt.customize(opt);\n    onError();\n    return result;\n};\n\nlocal.buildReadme = function (opt, onError) {\n/*\n * this function will build readme with given <opt> my-app-lite template\n */\n    var result;\n    local.objectSetDefault(opt, {\n        customize: local.nop,\n        // reset toc\n        dataFrom: local.fsReadFileOrEmptyStringSync(\n            \"README.md\",\n            \"utf8\"\n        ).replace((\n            /\\n#\\u0020table\\u0020of\\u0020contents$[\\S\\s]*?\\n\\n\\n\\n/m\n        ), \"\\n# table of contents\\n\\n\\n\\n\"),\n        packageJsonRgx: (\n            /\\n#\\u0020package.json\\n```json\\n([\\S\\s]*?)\\n```\\n/\n        )\n    });\n    // render dataTo\n    opt.dataTo = local.templateRenderMyApp(\n        local.assetsDict[\"/assets.readme.template.md\"],\n        opt\n    );\n    // init package.json\n    opt.dataFrom.replace(opt.packageJsonRgx, function (match0, match1) {\n        // remove null-items from package.json\n        opt.packageJson = JSON.parse(match1.replace((\n            /\\u0020{4}\".*?\":\\u0020null,?$/gm\n        ), \"\"));\n        opt.packageJson.description = opt.dataFrom.split(\"\\n\")[1];\n        local.tryCatchOnError(function () {\n            local.objectSetDefault(opt.packageJson, {\n                nameLib: local.fsReadFileOrEmptyStringSync(\n                    \"./package.json\",\n                    \"json\"\n                ).nameLib\n            });\n        }, local.nop);\n        opt.packageJson = local.objectSetDefault(opt.packageJson, {\n            nameLib: opt.packageJson.name.replace((\n                /\\W/g\n            ), \"_\"),\n            nameOriginal: opt.packageJson.name\n        });\n        opt.packageJson = local.objectSetDefault(\n            opt.packageJson,\n            JSON.parse(local.templateRenderMyApp(opt.packageJsonRgx.exec(\n                local.assetsDict[\"/assets.readme.template.md\"]\n            )[1], opt)),\n            2\n        );\n        // avoid npm-installing that\n        delete opt.packageJson.devDependencies[opt.packageJson.name];\n        // reset scripts\n        opt.packageJson.scripts = {\n            \"build-ci\": \"sh ./npm_scripts.sh\",\n            env: \"env\",\n            eval: \"sh ./npm_scripts.sh\",\n            \"heroku-postbuild\": \"sh ./npm_scripts.sh\",\n            postinstall: \"sh ./npm_scripts.sh\",\n            start: \"sh ./npm_scripts.sh\",\n            test: \"sh ./npm_scripts.sh\",\n            utility2: \"sh ./npm_scripts.sh\"\n        };\n        // save package.json\n        local.fsWriteFileWithMkdirpSync(\n            \"package.json\",\n            local.jsonStringifyOrdered(opt.packageJson, null, 4) + \"\\n\"\n        );\n        // re-render dataTo\n        opt.dataTo = local.templateRenderMyApp(\n            local.assetsDict[\"/assets.readme.template.md\"],\n            opt\n        );\n        opt.dataTo = opt.dataTo.replace(\n            opt.packageJsonRgx,\n            match0.replace(\n                match1,\n                local.jsonStringifyOrdered(opt.packageJson, null, 4)\n            )\n        );\n    });\n    // search-and-replace - customize dataTo\n    [\n        // customize name and description\n        (\n            /.*?\\n.*?\\n/\n        ),\n        // customize cdn-download\n        (\n            /\\n#\\u0020cdn\\u0020download\\n[\\S\\s]*?\\n\\n\\n\\n/\n        ),\n        // customize live-web-demo\n        (\n            /\\n#\\u0020live\\u0020web\\u0020demo\\n[\\S\\s]*?\\n\\n\\n\\n/\n        ),\n        // customize to-do\n        (\n            /\\n####\\u0020todo\\n[\\S\\s]*?\\n\\n\\n\\n/\n        ),\n        // customize example.js - shared js-env code - init-before\n        (\n            /\\nglobalThis\\.local\\u0020=\\u0020local;\\n[^`]*?\\n\\/\\/\\u0020run\\u0020browser\\u0020js\\-env\\u0020code\\u0020-\\u0020init-test\\n/\n        ),\n        // customize example.js - html-body\n        (\n            /\\nutility2-comment\\u0020-->(?:\\\\n\\\\\\n){4}[^`]*?^<!--\\u0020utility2-comment\\\\n\\\\\\n/m\n        ),\n        // customize example.js - testRunBrowser\n        (\n            /\\n\\u0020{4}\\/\\/\\u0020custom-case\\n[^`]*?\\n\\u0020{4}\\/\\/\\u0020run\\u0020browser-tests\\n/\n        ),\n        // customize build_ci - shBuildCiAfter\n        (\n            /\\nshBuildCiAfter\\u0020\\(\\)\\u0020\\{\\(set\\u0020-e\\n[\\S\\s]*?\\n\\)\\}\\n/\n        ),\n        // customize build_ci - shBuildCiBefore\n        (\n            /\\nshBuildCiBefore\\u0020\\(\\)\\u0020\\{\\(set\\u0020-e\\n[\\S\\s]*?\\n\\)\\}\\n/\n        )\n    ].forEach(function (rgx) {\n        opt.dataTo = local.stringMerge(opt.dataTo, opt.dataFrom, rgx);\n    });\n    // customize private-repository\n    if (local.env.npm_package_private) {\n        opt.dataTo = (\n            opt.dataTo.replace((\n                /\\n\\[!\\[NPM\\]\\(https:\\/\\/nodei.co\\/npm\\/.*?\\n/\n            ), \"\\n\").replace(\n                \"$ npm install \",\n                (\n                    \"$ git clone \"\n                    + local.env.npm_package_repository_url\n                    .replace(\"git+https://github.com/\", \"git@github.com:\")\n                    + \" --single-branch -b beta node_modules/\"\n                )\n            )\n        );\n    }\n    // customize version\n    [\n        \"dataFrom\", \"dataTo\"\n    ].forEach(function (elem) {\n        opt[elem] = opt[elem].replace((\n            /\\n(####\\u0020changelog\\u0020|-\\u0020npm\\u0020publish\\u0020)\\d+?\\.\\d+?\\.\\d+?.*?\\n/g\n        ), \"\\n$1\" + opt.packageJson.version + \"\\n\");\n    });\n    // customize swaggerdoc\n    if (\n        !local.assetsDict[\"/assets.swgg.swagger.json\"]\n        || (\n            /\\bswggUiContainer\\b/\n        ).test(local.assetsDict[\"/index.html\"])\n        || local.env.npm_package_name === \"utility2\"\n    ) {\n        opt.dataTo = opt.dataTo.replace((\n            /\\n####\\u0020swagger\\u0020doc\\n[\\S\\s]*?\\n####\\u0020/\n        ), \"\\n#### \");\n    }\n    // customize example.js\n    if (\n        local.assetsDict[\"/index.html\"].indexOf(\n            \"<script src=\\\"assets.example.js\\\"></script>\"\n        ) < 0\n    ) {\n        opt.dataTo = opt.dataTo.replace((\n            /\\nif\\u0020\\(!local.isBrowser\\)\\u0020\\{\\n[\\S\\s]*?\\n\\}\\(\\)\\);\\n/g\n        ), \"\\nif (!local.isBrowser) {\\n    return;\\n}\\n}());\\n\");\n    }\n    // customize comment\n    opt.dataFrom.replace((\n        /^(\\u0020*?)(?:#\\!\\!\\u0020|#\\/\\/\\u0020|\\/\\/\\!\\!\\u0020|<!--\\u0020)(.*?)(?:\\u0020-->)?$/gm\n    ), function (match0, match1, match2) {\n        opt.dataTo = opt.dataTo.replace(\n            \"\\n\" + match1 + match2 + \"\\n\",\n            \"\\n\" + match0 + \"\\n\"\n        );\n    });\n    // customize - user-defined\n    opt.customize(opt);\n    // customize assets.index.template.html\n    if (local.assetsDict[\"/assets.index.template.html\"].indexOf(\n        \"\\\"assets.utility2.template.html\\\"\"\n    ) < 0) {\n        opt.dataTo = opt.dataTo.replace((\n            /\\n\\/\\*\\u0020jslint\\u0020ignore:start\\u0020\\*\\/\\nlocal.assetsDict\\[\"\\/assets.index.template.html\"\\]\\u0020=\\u0020'\\\\\\n[\\S\\s]*?\\n\\/\\*\\u0020jslint\\u0020ignore:end\\u0020\\*\\/\\n/\n        ), \"\\n\");\n    }\n    // customize shDeployCustom\n    if (opt.dataFrom.indexOf(\"    shDeployCustom\\n\") >= 0) {\n        [\n            // customize example.sh\n            (\n                /\\n####\\u0020changelog\\u0020[\\S\\s]*\\n#\\u0020quickstart\\u0020example.js\\n/\n            ), (\n                opt.dataFrom.indexOf(\"\\\"assets.utility2.template.html\\\"\") < 0\n                && local.identity(\n                    /\\n#\\u0020quickstart\\u0020[\\S\\s]*?\\n#\\u0020extra\\u0020screenshots\\n/\n                )\n            )\n        ].forEach(function (rgx) {\n            opt.dataTo = local.stringMerge(opt.dataTo, opt.dataFrom, rgx);\n        });\n        // customize screenshot\n        opt.dataTo = opt.dataTo.replace((\n            /^1\\.\\u0020.*?screenshot\\.(?:npmTest|testExampleJs|testExampleSh).*?\\.png[\\S\\s]*?\\n\\n/gm\n        ), \"\");\n    }\n    // customize shNpmTestPublished\n    opt.dataTo = opt.dataTo.replace(\n        \"$ npm install \" + local.env.GITHUB_REPO + \"#alpha\",\n        \"$ npm install \" + local.env.npm_package_name\n    );\n    if (opt.dataFrom.indexOf(\"    shNpmTestPublished\\n\") < 0) {\n        opt.dataTo = opt.dataTo.replace(\n            \"$ npm install \" + local.env.npm_package_name,\n            \"$ npm install \" + local.env.GITHUB_REPO + \"#alpha\"\n        );\n        [\n            (\n                /\\n.*?\\bhttps:\\/\\/www.npmjs.com\\/package\\/.*?\\n/\n            ), (\n                /\\n.*?npmPackageDependencyTree.*?\\n/\n            )\n        ].forEach(function (rgx) {\n            opt.dataTo = opt.dataTo.replace(rgx, \"\");\n        });\n    }\n    // customize shBuildCiAfter and shBuildCiBefore\n    [\n        [\n            \"shDeployGithub\", (\n                /.*?\\/screenshot\\.deployGithub.*?\\n/g\n            )\n        ], [\n            \"shDeployHeroku\", (\n                /.*?\\/screenshot\\.deployHeroku.*?\\n/g\n            )\n        ], [\n            \"shReadmeTest example.js\", (\n                /.*?\\/screenshot\\.testExampleJs.*?\\n/g\n            )\n        ], [\n            \"shReadmeTest example.sh\", (\n                /.*?\\/screenshot\\.testExampleSh.*?\\n/g\n            )\n        ]\n    ].forEach(function (elem) {\n        if (opt.dataFrom.indexOf(\"    \" + elem[0] + \"\\n\") >= 0) {\n            return;\n        }\n        // customize test-server\n        opt.dataTo = opt.dataTo.replace(\n            new RegExp(\n                \"\\\\n\\\\| test-server-\"\n                + elem[0].replace(\"shDeploy\", \"\").toLowerCase()\n                + \" : \\\\|.*?\\\\n\"\n            ),\n            \"\\n\"\n        );\n        // customize screenshot\n        opt.dataTo = opt.dataTo.replace(elem[1], \"\");\n    });\n    opt.dataTo = local.templateRenderMyApp(opt.dataTo, opt);\n    // customize toc\n    opt.toc = \"\\n# table of contents\\n\";\n    opt.dataTo.replace((\n        /\\n\\n\\n\\n#\\u0020(.*)/g\n    ), function (ignore, match1) {\n        if (match1 === \"table of contents\") {\n            return;\n        }\n        opt.toc += \"1. [\" + match1 + \"](#\" + match1.toLowerCase().replace((\n            /[^\\u0020\\-0-9A-Z_a-z]/g\n        ), \"\").replace((\n            /\\u0020/g\n        ), \"-\") + \")\\n\";\n    });\n    opt.dataTo = opt.dataTo.replace(\"\\n# table of contents\\n\", opt.toc);\n    // customize whitespace\n    opt.dataTo = opt.dataTo.replace((\n        /\\n{5,}/g\n    ), \"\\n\\n\\n\\n\");\n    // save README.md\n    result = opt.dataTo;\n    local.fs.writeFileSync(\"README.md\", result);\n    // customize assets.swgg.swagger.json\n    opt.swaggerJson = local.swgg.normalizeSwaggerJson(\n        local.fsReadFileOrEmptyStringSync(\"assets.swgg.swagger.json\", \"json\")\n    );\n    local.objectSetOverride(opt.swaggerJson, {\n        info: {\n            title: opt.packageJson.name,\n            version: opt.packageJson.version,\n            \"x-swgg-description\": opt.packageJson.description,\n            \"x-swgg-homepage\": opt.packageJson.homepage\n        }\n    }, 2);\n    opt.dataTo.replace((\n        /\\bhttps:\\/\\/.*?\\/assets\\.app\\.js/\n    ), function (match0) {\n        opt.swaggerJson[\"x-swgg-downloadStandaloneApp\"] = (\n            !local.env.npm_package_private && match0\n        );\n    });\n    local.fsWriteFileWithMkdirpSync(\n        \"assets.swgg.swagger.json\",\n        local.jsonStringifyOrdered(opt.swaggerJson, null, 4) + \"\\n\",\n        !opt.swaggerJson.swagger && local.identity(\"noWrite\")\n    );\n    onError();\n    return result;\n};\n\nlocal.buildTest = function (opt, onError) {\n/*\n * this function will build test with given <opt>\n */\n    var result;\n    local.objectSetDefault(opt, {\n        customize: local.nop,\n        dataFrom: local.fsReadFileOrEmptyStringSync(\"test.js\", \"utf8\"),\n        dataTo: local.templateRenderMyApp(\n            local.assetsDict[\"/assets.test.template.js\"],\n            opt\n        )\n    });\n    // search-and-replace - customize dataTo\n    [\n        // customize shared js\\-env code - function\n        (\n            /\\n\\}\\(\\)\\);\\n\\n\\n\\n\\/\\/\\u0020run\\u0020shared\\u0020js\\-env\\u0020code\\u0020-\\u0020function\\n[\\S\\s]*?$/\n        )\n    ].forEach(function (rgx) {\n        opt.dataTo = local.stringMerge(opt.dataTo, opt.dataFrom, rgx);\n    });\n    // customize require(\"utility2\")\n    [\n        \"./assets.utility2.rollup.js\",\n        \"./lib.utility2.js\"\n    ].forEach(function (file) {\n        if (local.fs.existsSync(file)) {\n            opt.dataTo = opt.dataTo.replace(\n                \"require(\\\"utility2\\\")\",\n                \"require(\\\"\" + file + \"\\\")\"\n            );\n        }\n    });\n    opt.customize(opt);\n    // save test.js\n    result = opt.dataTo;\n    local.fs.writeFileSync(\"test.js\", result);\n    onError();\n    return result;\n};\n\nlocal.childProcessSpawnWithTimeout = function (command, args, opt) {\n/*\n * this function will run like child_process.spawn,\n * but with auto-timeout after timeout milliseconds\n * example usage:\n    var child = local.childProcessSpawnWithTimeout(\n        \"/bin/sh\",\n        [\"-c\", \"echo hello world\"],\n        {stdio: [\"ignore\", 1, 2], timeout: 5000}\n    );\n    child.on(\"error\", console.error);\n    child.on(\"exit\", function (exitCode) {\n        console.error(\"exitCode \" + exitCode);\n    });\n */\n    var child;\n    var child_process;\n    var timerTimeout;\n    child_process = require(\"child_process\");\n    // spawn child\n    child = child_process.spawn(command, args, opt).on(\"exit\", function () {\n        // cleanup timerTimeout\n        try {\n            process.kill(timerTimeout.pid);\n        } catch (ignore) {}\n    });\n    // init timerTimeout\n    timerTimeout = child_process.spawn(\n        // convert timeout to integer seconds with 2 second delay\n        \"sleep \"\n        + Math.floor(\n            0.001 * (Number(opt && opt.timeout) || local.timeoutDefault)\n            + 2\n        )\n        + \"; kill -9 \" + child.pid + \" 2>/dev/null\",\n        {\n            shell: true,\n            stdio: \"ignore\"\n        }\n    );\n    return child;\n};\n\nlocal.childProcessSpawnWithUtility2 = function (script, onError) {\n/*\n * this function will run child_process.spawn, with lib.utility2.sh sourced\n */\n    require(\"child_process\").spawn(\n        \". \" + (process.env.npm_config_dir_utility2 || __dirname)\n        + \"/lib.utility2.sh; \" + script,\n        {\n            shell: true,\n            stdio: [\n                \"ignore\", 1, 2\n            ]\n        }\n    ).on(\"exit\", function (exitCode) {\n        onError(exitCode && Object.assign(new Error(), {\n            exitCode\n        }));\n    });\n};\n\nlocal.cliRun = function (opt) {\n/*\n * this function will run the cli with given <opt>\n */\n    local.cliDict._eval = local.cliDict._eval || function () {\n    /*\n     * <code>\n     * will eval <code>\n     */\n        globalThis.local = local;\n        local.vm.runInThisContext(process.argv[3]);\n    };\n    local.cliDict[\"--eval\"] = local.cliDict[\"--eval\"] || local.cliDict._eval;\n    local.cliDict[\"-e\"] = local.cliDict[\"-e\"] || local.cliDict._eval;\n    local.cliDict._help = local.cliDict._help || function () {\n    /*\n     *\n     * will print help\n     */\n        var commandList;\n        var file;\n        var packageJson;\n        var text;\n        var textDict;\n        commandList = [\n            {\n                argList: \"<arg2>  ...\",\n                description: \"usage:\",\n                command: [\n                    \"<arg1>\"\n                ]\n            }, {\n                argList: \"'console.log(\\\"hello world\\\")'\",\n                description: \"example:\",\n                command: [\n                    \"--eval\"\n                ]\n            }\n        ];\n        file = __filename.replace((\n            /.*\\//\n        ), \"\");\n        opt = Object.assign({}, opt);\n        packageJson = require(\"./package.json\");\n        // validate comment\n        opt.rgxComment = opt.rgxComment || (\n            /\\)\\u0020\\{\\n(?:|\\u0020{4})\\/\\*\\n(?:\\u0020|\\u0020{5})\\*((?:\\u0020<[^>]*?>|\\u0020\\.\\.\\.)*?)\\n(?:\\u0020|\\u0020{5})\\*\\u0020(will\\u0020.*?\\S)\\n(?:\\u0020|\\u0020{5})\\*\\/\\n(?:\\u0020{4}|\\u0020{8})\\S/\n        );\n        textDict = {};\n        Object.keys(local.cliDict).sort().forEach(function (key, ii) {\n            if (key[0] === \"_\" && key !== \"_default\") {\n                return;\n            }\n            text = String(local.cliDict[key]);\n            if (key === \"_default\") {\n                key = \"\";\n            }\n            textDict[text] = textDict[text] || (ii + 2);\n            ii = textDict[text];\n            if (commandList[ii]) {\n                commandList[ii].command.push(key);\n                return;\n            }\n            try {\n                commandList[ii] = opt.rgxComment.exec(text);\n                commandList[ii] = {\n                    argList: (commandList[ii][1] || \"\").trim(),\n                    command: [\n                        key\n                    ],\n                    description: commandList[ii][2]\n                };\n            } catch (ignore) {\n                local.assertThrow(null, new Error(\n                    \"cliRun - cannot parse comment in COMMAND \"\n                    + key\n                    + \":\\nnew RegExp(\"\n                    + JSON.stringify(opt.rgxComment.source)\n                    + \").exec(\" + JSON.stringify(text).replace((\n                        /\\\\\\\\/g\n                    ), \"\\u0000\").replace((\n                        /\\\\n/g\n                    ), \"\\\\n\\\\\\n\").replace((\n                        /\\u0000/g\n                    ), \"\\\\\\\\\") + \");\"\n                ));\n            }\n        });\n        text = \"\";\n        text += packageJson.name + \" (\" + packageJson.version + \")\\n\\n\";\n        text += commandList.filter(function (elem) {\n            return elem;\n        }).map(function (elem, ii) {\n            elem.command = elem.command.filter(function (elem) {\n                return elem;\n            });\n            switch (ii) {\n            case 0:\n            case 1:\n                elem.argList = [\n                    elem.argList\n                ];\n                break;\n            default:\n                elem.argList = elem.argList.split(\" \");\n                elem.description = (\n                    \"# COMMAND \"\n                    + (elem.command[0] || \"<none>\") + \"\\n# \"\n                    + elem.description\n                );\n            }\n            return (\n                elem.description + \"\\n  \" + file\n                + (\"  \" + elem.command.sort().join(\"|\") + \"  \")\n                    .replace((\n                    /^\\u0020{4}$/\n                ), \"  \")\n                + elem.argList.join(\"  \")\n            );\n        })\n        .join(\"\\n\\n\");\n        console.log(text);\n    };\n    local.cliDict[\"--help\"] = local.cliDict[\"--help\"] || local.cliDict._help;\n    local.cliDict[\"-h\"] = local.cliDict[\"-h\"] || local.cliDict._help;\n    local.cliDict._default = local.cliDict._default || local.cliDict._help;\n    local.cliDict.help = local.cliDict.help || local.cliDict._help;\n    local.cliDict._interactive = local.cliDict._interactive || function () {\n    /*\n     *\n     * will start interactive-mode\n     */\n        globalThis.local = local;\n        local.identity(local.replStart || require(\"repl\").start)({\n            useGlobal: true\n        });\n    };\n    local.cliDict[\"--interactive\"] = (\n        local.cliDict[\"--interactive\"]\n        || local.cliDict._interactive\n    );\n    local.cliDict[\"-i\"] = local.cliDict[\"-i\"] || local.cliDict._interactive;\n    local.cliDict._version = local.cliDict._version || function () {\n    /*\n     *\n     * will print version\n     */\n        console.log(require(__dirname + \"/package.json\").version);\n    };\n    local.cliDict[\"--version\"] = (\n        local.cliDict[\"--version\"]\n        || local.cliDict._version\n    );\n    local.cliDict[\"-v\"] = local.cliDict[\"-v\"] || local.cliDict._version;\n    // default to --help command if no arguments are given\n    if (process.argv.length <= 2) {\n        local.cliDict._help();\n        return;\n    }\n    if (local.cliDict[process.argv[2]]) {\n        local.cliDict[process.argv[2]]();\n        return;\n    }\n    local.cliDict._default();\n};\n\nlocal.corsBackendHostInject = function (url, backendHost, rgx, location) {\n/*\n * this function will if <location>.host is a github site,\n * inject <backendHost> into <url> with given <rgx>\n */\n    location = (\n        location\n        || (typeof window === \"object\" && window && window.location)\n    );\n    if (!(backendHost && location && (\n        /\\bgithub.io$/\n    ).test(location.host))) {\n        return url;\n    }\n    // init github-branch\n    location.pathname.replace((\n        /\\/build\\.\\.(alpha|beta|master)\\.\\.travis-ci\\.org\\//\n    ), function (ignore, match1) {\n        backendHost = backendHost.replace(\"-alpha.\", \"-\" + match1 + \".\");\n    });\n    return url.replace(rgx || (\n        /.*?($)/m\n    ), backendHost + \"$1\");\n};\n\nlocal.corsForwardProxyHostIfNeeded = function (xhr) {\n/*\n * this function will return xhr.corsForwardProxyHost, if needed\n */\n    return (\n        local.isBrowser\n        && local.env.npm_package_nameLib\n        && (\n            /^https?:\\/\\//\n        ).test(xhr.url)\n        && xhr.url.indexOf(xhr.location.protocol + \"//\" + xhr.location.host)\n        !== 0\n        && (\n            /\\.github\\.io$/\n        ).test(xhr.location.host)\n        && xhr.corsForwardProxyHost !== \"disabled\"\n        && (xhr.corsForwardProxyHost || \"https://h1-proxy1.herokuapp.com\")\n    );\n};\n\n/* istanbul ignore next */\nlocal.cryptoAesXxxCbcRawDecrypt = function (opt, onError) {\n/*\n * this function will aes-xxx-cbc decrypt with given <opt>\n * example usage:\n    data = new Uint8Array([1,2,3]);\n    key = '0123456789abcdef0123456789abcdef';\n    mode = null;\n    local.cryptoAesXxxCbcRawEncrypt({\n        data: data,\n        key: key,\n        mode: mode\n    }, function (err, data) {\n        console.assert(!err, err);\n        local.cryptoAesXxxCbcRawDecrypt({\n            data: data,\n            key: key,\n            mode: mode\n        }, console.log);\n    });\n */\n    var cipher;\n    var crypto;\n    var data;\n    var ii;\n    var iv;\n    var key;\n    // init key\n    key = new Uint8Array(0.5 * opt.key.length);\n    ii = 0;\n    while (ii < key.byteLength) {\n        key[ii] = parseInt(opt.key.slice(2 * ii, 2 * ii + 2), 16);\n        ii += 2;\n    }\n    data = opt.data;\n    // base64\n    if (opt.mode === \"base64\") {\n        data = local.base64ToBuffer(data);\n    }\n    // normalize data\n    if (Object.prototype.toString.call(data) !== \"[object Uint8Array]\") {\n        data = new Uint8Array(data);\n    }\n    // init iv\n    iv = data.subarray(0, 16);\n    // optimization - create resized-view of data\n    data = data.subarray(16);\n    crypto = globalThis.crypto;\n    if (!local.isBrowser) {\n        setTimeout(function () {\n            crypto = require(\"crypto\");\n            cipher = crypto.createDecipheriv(\n                \"aes-\" + (8 * key.byteLength) + \"-cbc\",\n                key,\n                iv\n            );\n            onError(null, Buffer.concat([\n                cipher.update(data), cipher.final()\n            ]));\n        });\n        return;\n    }\n    crypto.subtle.importKey(\"raw\", key, {\n        name: \"AES-CBC\"\n    }, false, [\n        \"decrypt\"\n    ]).then(function (key) {\n        crypto.subtle.decrypt({\n            iv,\n            name: \"AES-CBC\"\n        }, key, data).then(function (data) {\n            onError(null, new Uint8Array(data));\n        }).catch(onError);\n    }).catch(onError);\n};\n\n/* istanbul ignore next */\nlocal.cryptoAesXxxCbcRawEncrypt = function (opt, onError) {\n/*\n * this function will aes-xxx-cbc encrypt with given <opt>\n * example usage:\n    data = new Uint8Array([1,2,3]);\n    key = '0123456789abcdef0123456789abcdef';\n    mode = null;\n    local.cryptoAesXxxCbcRawEncrypt({\n        data: data,\n        key: key,\n        mode: mode\n    }, function (err, data) {\n        console.assert(!err, err);\n        local.cryptoAesXxxCbcRawDecrypt({\n            data: data,\n            key: key,\n            mode: mode\n        }, console.log);\n    });\n */\n    var cipher;\n    var crypto;\n    var data;\n    var ii;\n    var iv;\n    var key;\n    // init key\n    key = new Uint8Array(0.5 * opt.key.length);\n    ii = 0;\n    while (ii < key.byteLength) {\n        key[ii] = parseInt(opt.key.slice(2 * ii, 2 * ii + 2), 16);\n        ii += 2;\n    }\n    data = opt.data;\n    // init iv\n    iv = new Uint8Array((((data.byteLength) >> 4) << 4) + 32);\n    crypto = globalThis.crypto;\n    if (!local.isBrowser) {\n        setTimeout(function () {\n            crypto = require(\"crypto\");\n            // init iv\n            iv.set(crypto.randomBytes(16));\n            cipher = crypto.createCipheriv(\n                \"aes-\" + (8 * key.byteLength) + \"-cbc\",\n                key,\n                iv.subarray(0, 16)\n            );\n            data = cipher.update(data);\n            iv.set(data, 16);\n            iv.set(cipher.final(), 16 + data.byteLength);\n            if (opt.mode === \"base64\") {\n                iv = local.base64FromBuffer(iv);\n                iv += \"\\n\";\n            }\n            onError(null, iv);\n        });\n        return;\n    }\n    // init iv\n    iv.set(crypto.getRandomValues(new Uint8Array(16)));\n    crypto.subtle.importKey(\"raw\", key, {\n        name: \"AES-CBC\"\n    }, false, [\n        \"encrypt\"\n    ]).then(function (key) {\n        crypto.subtle.encrypt({\n            iv: iv.subarray(0, 16),\n            name: \"AES-CBC\"\n        }, key, data).then(function (data) {\n            iv.set(new Uint8Array(data), 16);\n            // base64\n            if (opt.mode === \"base64\") {\n                iv = local.base64FromBuffer(iv);\n                iv += \"\\n\";\n            }\n            onError(null, iv);\n        }).catch(onError);\n    }).catch(onError);\n};\n\nlocal.dateGetWeekOfMonth = function (date) {\n/*\n * this function will return sunday-based week-of-month from <date>\n */\n    date = new Date(date.slice(0, 10) + \"T00:00:00Z\");\n    return Math.ceil((date.getUTCDate() + new Date(\n        date.getUTCFullYear(),\n        date.getUTCMonth(),\n        1\n    ).getUTCDay()) / 7) - 1;\n};\n\nlocal.dateGetWeekOfYear = function (date) {\n/*\n * this function will return ISO week-of-year from <date>\n *\n * Based on information at:\n *\n *    http://www.merlyn.demon.co.uk/weekcalc.htm#WNR\n *\n * Algorithm is to find nearest thursday, it's year\n * is the year of the week number. Then get weeks\n * between that date and the first day of that year.\n *\n * Note that dates in one year can be weeks of previous\n * or next year, overlap is up to 3 days.\n *\n * e.g. 2014/12/29 is Monday in week  1 of 2015\n *      2012/1/1   is Sunday in week 52 of 2011\n *\n * https://stackoverflow.com/questions/6117814/get-week-of-year-in-javascript-like-in-php\n */\n    date = new Date(date.slice(0, 10) + \"T00:00:00Z\");\n    // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n    date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7));\n    // Calculate full weeks to nearest Thursday\n    return Math.ceil((((\n        date\n        // Get first day of year\n        - new Date(Date.UTC(date.getUTCFullYear(), 0, 1))\n    ) / 86400000) + 1) / 7);\n};\n\nlocal.dateUtcFromLocal = function (date, timezoneOffset) {\n/*\n * this function will convert local-<date> to utc-date\n */\n    if (!date) {\n        return \"\";\n    }\n    local.assertThrow((\n        /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+?)?$/\n    ).test(date), \"invalid local-date \" + date);\n    if (!timezoneOffset) {\n        return new Date(date).toISOString();\n    }\n    return new Date(\n        new Date(date + \"Z\").getTime() + timezoneOffset * 60000\n    ).toISOString();\n};\n\nlocal.dateUtcToLocal = function (date, timezoneOffset) {\n/*\n * this function will convert utc-<date> to local-date\n */\n    if (!date) {\n        return \"\";\n    }\n    local.assertThrow((\n        /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+?)?Z$/\n    ).test(date), \"invalid utc-date \" + date);\n    timezoneOffset = timezoneOffset || new Date(date).getTimezoneOffset();\n    return new Date(\n        new Date(date).getTime() - timezoneOffset * 60000\n    ).toISOString();\n};\n\nlocal.domFragmentRender = function (template, dict) {\n/*\n * this function will return dom-elem rendered from <template>\n */\n    var tmp;\n    tmp = document.createElement(\"template\");\n    tmp.innerHTML = local.templateRender(template, dict);\n    return tmp.content;\n};\n\nlocal.domQuerySelectorAllTagName = function (selector) {\n/*\n * this function will return all tagName that match <selector>\n */\n    var set;\n    set = new Set();\n    Array.from(document.querySelectorAll(\n        selector\n    )).forEach(function (elem) {\n        set.add(elem.tagName);\n    });\n    return Array.from(set).sort();\n};\n\nlocal.domSelectOptionValue = function (elem) {\n/*\n * this function will return <elem>.options[<elem>.selectedIndex].value\n */\n    elem = elem && elem.options[elem.selectedIndex];\n    return (elem && elem.value) || \"\";\n};\n\nlocal.domStyleValidate = function () {\n/*\n * this function will validate <style> tags\n */\n    var rgx;\n    var tmp;\n    rgx = (\n        /^0\\u0020(?:(body\\u0020>\\u0020)?(?:form\\u0020>\\u0020)?(?:\\.testReportDiv\\u0020.+|\\.x-istanbul\\u0020.+|\\.button|\\.colorError|\\.readonly|\\.textarea|\\.uiAnimateShake|\\.uiAnimateSlide|a|body|code|div|input|pre|textarea)(?:,|\\u0020\\{))|^[1-9]\\d*?\\u0020#/m\n    );\n    tmp = [];\n    Array.from(\n        // ternary-operator\n        (\n            typeof document === \"object\"\n            && document\n            && typeof document.querySelector === \"function\"\n        )\n        ? document.querySelectorAll(\n            \"style\"\n        )\n        : []\n    ).map(function (elem, ii) {\n        elem.innerHTML.replace((\n            /\\/\\*[\\S\\s]*?\\*\\/|;|\\}/g\n        ), \"\\n\").replace((\n            /^([^\\n\\u0020@].*?)[,{:].*?$/gm\n        ), function (match0, match1) {\n            try {\n                ii = document.querySelectorAll(\n                    match1\n                ).length;\n            } catch (errCaught) {\n                console.error(errCaught);\n            }\n            if (!(ii > 1)) {\n                tmp.push(ii + \" \" + match0);\n            }\n        });\n    });\n    tmp.filter(function (elem) {\n        return !rgx.test(elem);\n    }).sort().reverse().forEach(function (elem, ii, list) {\n        console.error(\n            \"domStyleValidateUnmatched \" + (list.length - ii) + \". \" + elem\n        );\n    });\n};\n\nlocal.errorMessagePrepend = function (err, message) {\n/*\n * this function will prepend message to <err>.message and <err>.stack\n */\n    if (err === local.errDefault) {\n        return;\n    }\n    err.message = message + err.message;\n    err.stack = message + err.stack;\n    return err;\n};\n\nlocal.exit = function (exitCode, testReport) {\n/*\n * this function will exit current process with given <exitCode>\n */\n    local.onErrorDefault(typeof exitCode !== \"number\" && exitCode);\n    exitCode = (\n        (!exitCode || Number(exitCode) === 0)\n        ? 0\n        : Number(exitCode) || 1\n    );\n    if (!local.isBrowser) {\n        process.exit(exitCode);\n        return;\n    }\n    if (testReport !== globalThis.utility2_testReport) {\n        return;\n    }\n    // update coverage\n    (document.querySelector(\n        \"#coverageReportDiv1\"\n    ) || {}).innerHTML = (\n        local.istanbulCoverageReportCreate()\n    );\n    // save testReport\n    globalThis.utility2_testReportSave();\n};\n\nlocal.fsReadFileOrEmptyStringSync = function (file, opt) {\n/*\n * this function will try to read file or return empty-string, or\n * if <opt> === \"json\", then try to JSON.parse file or return null\n */\n    try {\n        return (\n            opt === \"json\"\n            ? JSON.parse(local.fs.readFileSync(file, \"utf8\"))\n            : local.fs.readFileSync(file, opt)\n        );\n    } catch (ignore) {\n        return (\n            opt === \"json\"\n            ? {}\n            : \"\"\n        );\n    }\n};\n\nlocal.fsRmrSync = function (dir) {\n/*\n * this function will synchronously \"rm -fr\" dir\n */\n    local.child_process.execFileSync(\n        \"rm\",\n        [\n            \"-fr\", local.path.resolve(process.cwd(), dir)\n        ],\n        {\n            stdio: [\n                \"ignore\", 1, 2\n            ]\n        }\n    );\n};\n\nlocal.fsWriteFileWithMkdirpSync = function (file, data, mode) {\n/*\n * this function will synchronously \"mkdir -p\" and write <data> to <file>\n */\n    try {\n        if (\n            mode === \"noWrite\"\n            || typeof require(\"fs\").writeFileSync !== \"function\"\n        ) {\n            return;\n        }\n    } catch (ignore) {\n        return;\n    }\n    // try to write to file\n    try {\n        require(\"fs\").writeFileSync(file, data);\n    } catch (ignore) {\n        // mkdir -p\n        require(\"child_process\").spawnSync(\n            \"mkdir\",\n            [\n                \"-p\", require(\"path\").dirname(file)\n            ],\n            {\n                stdio: [\n                    \"ignore\", 1, 2\n                ]\n            }\n        );\n        // re-write to file\n        require(\"fs\").writeFileSync(file, data);\n    }\n};\n\nlocal.isNullOrUndefined = function (arg0) {\n/*\n * this function will test if arg0 is null or undefined\n */\n    return arg0 === null || arg0 === undefined;\n};\n\nlocal.jslintAutofixLocalFunction = function (code, file) {\n/*\n * this function will jslint-autofix local-function\n */\n    var code2;\n    var dictFnc;\n    var dictProp;\n    var tmp;\n    if (local.isBrowser) {\n        return code;\n    }\n    file = file.replace(process.cwd() + \"/\", \"\");\n    switch (file) {\n    case \"README.md\":\n    case \"lib.\" + process.env.npm_package_nameLib + \".js\":\n    case \"lib.\" + process.env.npm_package_nameLib + \".sh\":\n    case \"lib.apidoc.js\":\n    case \"lib.db.js\":\n    case \"lib.github_crud.js\":\n    case \"lib.istanbul.js\":\n    case \"lib.jslint.js\":\n    case \"lib.marked.js\":\n    case \"lib.sjcl.js\":\n    case \"lib.swgg.js\":\n    case \"npm_scripts.sh\":\n    case \"test.js\":\n        break;\n    default:\n        return code;\n    }\n    // autofix - assets.example.begin.js\n    code = code.replace((\n        /^\\(function\\u0020\\(globalThis\\)\\u0020\\{\\n[\\S\\s]*?\\n\\}\\(this\\)\\);\\n/m\n    ), local.assetsDict[\"/assets.example.begin.js\"]);\n    // autofix - assets.my_app.template.js\n    code = local.stringMerge(\n        code,\n        local.assetsDict[\"/assets.my_app.template.js\"].replace((\n            /my_app/g\n        ), file.split(\".\")[1]),\n        file !== \"README.md\" && local.identity(\n            /\\n\\/\\*\\u0020istanbul\\u0020instrument\\u0020in\\u0020package\\u0020[\\S\\s]*?\\n\\/\\*\\u0020validateLineSortedReset\\u0020\\*\\/\\n/\n        )\n    );\n    // customize local for assets.utility2.rollup.js\n    if (\n        file === \"lib.\" + process.env.npm_package_nameLib + \".js\"\n        && local.fs.existsSync(\"./assets.utility2.rollup.js\")\n        && local.env.npm_package_nameLib !== \"swgg\"\n    ) {\n        code = code.replace(\n            \"    // || globalThis.utility2_rollup_old\",\n            \"    || globalThis.utility2_rollup_old\"\n        ).replace(\n            \"    // || require(\\\"./assets.utility2.rollup.js\\\")\",\n            \"    || require(\\\"./assets.utility2.rollup.js\\\")\"\n        );\n    }\n    // init functionAllDict and functionBaseDict\n    [\n        [\n            \"utility2\", \"swgg\"\n        ], [\n            \"utility2\", \"apidoc\", \"db\", \"github_crud\", \"swgg\"\n        ]\n    ].forEach(function (dictList, ii) {\n        tmp = (\n            ii\n            ? \"functionAllDict\"\n            : \"functionBaseDict\"\n        );\n        if (local[tmp]) {\n            return;\n        }\n        local[tmp] = {};\n        dictList.forEach(function (dict) {\n            dict = local[dict];\n            Object.keys(dict).forEach(function (key) {\n                if (\n                    !(\n                        /^[A-Z_]|^testCase_/m\n                    ).test(key)\n                    && typeof dict[key] === \"function\"\n                ) {\n                    local[tmp][key] = local[tmp][key] || String(dict[key]);\n                }\n            });\n        });\n        Object.keys(local[tmp]).forEach(function (key) {\n            if (process.binding(\"natives\")[key]) {\n                local[tmp][key] = undefined;\n            }\n        });\n    });\n    // autofix - local-function\n    dictFnc = {};\n    dictProp = {};\n    code = code.replace((\n        /^local\\.(.*?)\\u0020=\\u0020(function\\u0020\\([\\S\\s]*?\\n\\});\\n+/gm\n    ), function (match0, key, match2, match3) {\n        // local-function - duplicate\n        if (dictFnc[key]) {\n            return \"\";\n        }\n        // local-function - normalize\n        dictFnc[key] = true;\n        match3 = local.functionAllDict[key] || \"\";\n        // make shell-safe\n        // https://unix.stackexchange.com/questions/57794/shell-escape-characters-for-sh-c\n        if (file.slice(-3) === \".sh\") {\n            match3 = match3.replace((\n                /'/g\n            ), \"'\\\"'\\\"'\");\n        }\n        if (match3 && match3 !== match2) {\n            match0 = match0.replace(match2, match3.replace((\n                /\\$\\$|\\$/g\n            ), \"$$$$\"));\n        }\n        return match0.trimRight() + \"\\n\\n\";\n    });\n    // comment\n    code2 = code;\n    code2 = code2.replace((\n        /^\\u0020*?\\/\\*[\\S\\s]*?\\*\\/|^\\u0020*?(?:\\/\\/.*?|.*?\\\\)$/gm\n    ), \"\");\n    // local-function - update dictFnc and dictProp\n    code2.replace((\n        /\\blocal\\.(\\w+?\\b)(?:\\u0020(===|=|\\|\\|)(?:\\u0020\"function\"\\u0020&&\\u0020local\\.\\w|\\u0020|$))?/gm\n    ), function (ignore, match1, match2) {\n        switch (match2) {\n        case \"=\":\n            dictFnc[match1] = true;\n            break;\n        case \"===\":\n        case \"||\":\n            dictProp[match1] = false;\n            break;\n        default:\n            dictProp[match1] = true;\n        }\n    });\n    [\n        dictFnc, dictProp\n    ].forEach(function (dict) {\n        Object.keys(dict).forEach(function (key) {\n            dict[key] = dict[key] && local.functionBaseDict[key];\n        });\n    });\n    dictFnc = local.jsonCopy(dictFnc);\n    dictProp = local.jsonCopy(dictProp);\n    [\n        \"assertThrow\",\n        \"functionOrNop\",\n        \"identity\",\n        \"nop\",\n        \"objectAssignDefault\"\n    ].forEach(function (key) {\n        dictFnc[key] = true;\n        dictProp[key] = true;\n    });\n    // local-function - missing\n    switch (local.fs.existsSync(\"assets.utility2.rollup.js\") || file) {\n    case \"README.md\":\n    case \"lib.swgg.js\":\n    case \"lib.utility2.js\":\n    case \"test.js\":\n    case true:\n        break;\n    default:\n        Object.keys(dictProp).forEach(function (key) {\n            if (dictProp[key] && !dictFnc[key]) {\n                console.error(\n                    \"local-function - missing (\" + file + \") local.\" + key\n                );\n            }\n        });\n    }\n    // local-function - unused\n    switch (file) {\n    case \"lib.swgg.js\":\n    case \"lib.utility2.js\":\n    case \"lib.utility2.sh\":\n        break;\n    default:\n        Object.keys(dictFnc).forEach(function (key) {\n            if (!dictProp.hasOwnProperty(key)) {\n                console.error(\n                    \"local-function - unused (\" + file + \") local.\" + key\n                );\n            }\n        });\n    }\n    return code;\n};\n\nlocal.jsonCopy = function (obj) {\n/*\n * this function will deep-copy obj\n */\n    return (\n        obj === undefined\n        ? undefined\n        : JSON.parse(JSON.stringify(obj))\n    );\n};\n\nlocal.jsonStringifyOrdered = function (obj, replacer, space) {\n/*\n * this function will JSON.stringify <obj>,\n * with object-keys sorted and circular-references removed\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Syntax\n */\n    var circularSet;\n    var stringify;\n    var tmp;\n    stringify = function (obj) {\n    /*\n     * this function will recursively JSON.stringify obj,\n     * with object-keys sorted and circular-references removed\n     */\n        // if obj is not an object or function, then JSON.stringify as normal\n        if (!(\n            obj\n            && typeof obj === \"object\"\n            && typeof obj.toJSON !== \"function\"\n        )) {\n            return JSON.stringify(obj);\n        }\n        // ignore circular-reference\n        if (circularSet.has(obj)) {\n            return;\n        }\n        circularSet.add(obj);\n        // if obj is an array, then recurse its items\n        if (Array.isArray(obj)) {\n            tmp = \"[\" + obj.map(function (obj) {\n                // recurse\n                tmp = stringify(obj);\n                return (\n                    typeof tmp === \"string\"\n                    ? tmp\n                    : \"null\"\n                );\n            }).join(\",\") + \"]\";\n            circularSet.delete(obj);\n            return tmp;\n        }\n        // if obj is not an array,\n        // then recurse its items with object-keys sorted\n        tmp = \"{\" + Object.keys(obj).sort().map(function (key) {\n            // recurse\n            tmp = stringify(obj[key]);\n            if (typeof tmp === \"string\") {\n                return JSON.stringify(key) + \":\" + tmp;\n            }\n        }).filter(function (obj) {\n            return typeof obj === \"string\";\n        }).join(\",\") + \"}\";\n        circularSet.delete(obj);\n        return tmp;\n    };\n    circularSet = new Set();\n    return JSON.stringify((\n        (typeof obj === \"object\" && obj)\n        // recurse\n        ? JSON.parse(stringify(obj))\n        : obj\n    ), replacer, space);\n};\n\nlocal.jwtAes256GcmDecrypt = function (token, key) {\n/*\n * this function will use json-web-encryption to\n * aes-256-gcm-decrypt <token> with given base64url-encoded <key>\n * https://tools.ietf.org/html/rfc7516\n */\n    return local.tryCatchOnError(function () {\n        token = token\n        .replace((\n            /-/g\n        ), \"+\")\n        .replace((\n            /_/g\n        ), \"/\")\n        .split(\".\");\n        token = local.sjcl.decrypt(\n            local.sjcl.codec.base64url.toBits(local.jwtAes256KeyInit(key)),\n            JSON.stringify({\n                adata: token[4],\n                ct: token[3],\n                iv: token[2],\n                ks: 256,\n                mode: \"gcm\"\n            })\n        );\n        return local.jwtHs256Decode(token, key);\n    }, local.nop) || {};\n};\n\nlocal.jwtAes256GcmEncrypt = function (data, key) {\n/*\n * this function will use json-web-encryption to\n * aes-256-gcm-encrypt <data> with given base64url-encoded <key>\n * https://tools.ietf.org/html/rfc7516\n */\n    var adata;\n    adata = local.jwtAes256KeyCreate();\n    data = local.jwtHs256Encode(data, key);\n    data = JSON.parse(local.sjcl.encrypt(\n        local.sjcl.codec.base64url.toBits(local.jwtAes256KeyInit(key)),\n        data,\n        {\n            adata: local.sjcl.codec.base64url.toBits(adata),\n            ks: 256,\n            mode: \"gcm\"\n        }\n    ));\n    return local.normalizeJwtBase64Url(\n        \"eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4R0NNIn0..\"\n        + data.iv + \".\" + data.ct + \".\" + adata\n    );\n};\n\nlocal.jwtAes256KeyCreate = function () {\n/*\n * this function will create a random, aes-256-base64url-jwt-key\n */\n    return local.normalizeJwtBase64Url(\n        local.base64FromBuffer(local.bufferRandomBytes(32))\n    );\n};\n\nlocal.jwtAes256KeyInit = function (key) {\n/*\n * this function will init aes-256-base64url-jwt-<key>\n * https://jwt.io/\n */\n    // init npm_config_jwtAes256Key\n    local.env.npm_config_jwtAes256Key = (\n        local.env.npm_config_jwtAes256Key\n        || \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n    );\n    return key || local.env.npm_config_jwtAes256Key;\n};\n\nlocal.jwtHs256Decode = function (token, key) {\n/*\n * this function will decode json-web-token with given base64-encoded <key>\n * https://jwt.io/\n */\n    var Hmac;\n    var timeNow;\n    Hmac = local.sjcl.misc.hmac;\n    timeNow = Date.now() / 1000;\n    // try to decode token\n    return local.tryCatchOnError(function () {\n        token = token.split(\".\");\n        // validate header\n        local.assertThrow(\n            token[0] === \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\",\n            token\n        );\n        // validate signature\n        local.assertThrow(local.sjcl.codec.base64url.fromBits(\n            new Hmac(local.sjcl.codec.base64url.toBits(\n                local.jwtAes256KeyInit(key)\n            )).encrypt(token[0] + \".\" + token[1])\n        ) === token[2]);\n        // return decoded data\n        token = JSON.parse(local.base64ToUtf8(token[1]));\n        // https://tools.ietf.org/html/rfc7519#section-4.1\n        // validate jwt-registered-headers\n        local.assertThrow(!token.exp || token.exp >= timeNow);\n        local.assertThrow(!token.nbf || token.nbf <= timeNow);\n        return token;\n    }, local.nop) || {};\n};\n\nlocal.jwtHs256Encode = function (data, key) {\n/*\n * this function will encode <data> into a json-web-token\n * with given base64-encoded <key>\n * https://jwt.io/\n */\n    var Hmac;\n    Hmac = local.sjcl.misc.hmac;\n    data = (\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.\"\n        + local.normalizeJwtBase64Url(\n            local.base64FromBuffer(JSON.stringify(data))\n        )\n    );\n    return data + \".\" + local.sjcl.codec.base64url.fromBits(\n        new Hmac(local.sjcl.codec.base64url.toBits(\n            local.jwtAes256KeyInit(key)\n        )).encrypt(data)\n    );\n};\n\nlocal.listGetElementRandom = function (list) {\n/*\n * this function will return random elem from <list>\n */\n    return list[Math.floor(Math.random() * list.length)];\n};\n\nlocal.listShuffle = function (list) {\n/*\n * this function will inplace shuffle <list> using fisher-yates algorithm\n * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n */\n    var ii;\n    var random;\n    var swap;\n    ii = list.length;\n    while (ii > 1) {\n        ii -= 1;\n        random = Math.floor(Math.random() * (ii + 1));\n        swap = list[ii];\n        list[ii] = list[random];\n        list[random] = swap;\n    }\n    return list;\n};\n\nlocal.localStorageSetItemOrClear = function (key, value) {\n/*\n * this function will try to set <key>/<value> pair to localStorage,\n * or else call localStorage.clear()\n */\n    try {\n        localStorage.setItem(key, value);\n    } catch (ignore) {\n        localStorage.clear();\n    }\n};\n\nlocal.middlewareAssetsCached = function (req, res, next) {\n/*\n * this function will run middleware that will serve cached-assets\n */\n    var opt;\n    opt = {};\n    local.onNext(opt, function (err, data) {\n        opt.result = opt.result || local.assetsDict[req.urlParsed.pathname];\n        if (opt.result === undefined) {\n            next(err);\n            return;\n        }\n        switch (opt.modeNext) {\n        case 1:\n            // skip gzip\n            if (\n                res.headersSent\n                || !(\n                    /\\bgzip\\b/\n                ).test(req.headers[\"accept-encoding\"])\n            ) {\n                opt.modeNext += 1;\n                opt.onNext();\n                return;\n            }\n            // gzip and cache result\n            local.taskCreateCached({\n                cacheDict: \"middlewareAssetsCachedGzip\",\n                key: req.urlParsed.pathname\n            }, function (onError) {\n                local.zlib.gzip(opt.result, function (err, data) {\n                    onError(err, !err && data.toString(\"base64\"));\n                });\n            }, opt.onNext);\n            break;\n        case 2:\n            // set gzip header\n            opt.result = local.base64ToBuffer(data);\n            res.setHeader(\"Content-Encoding\", \"gzip\");\n            res.setHeader(\"Content-Length\", opt.result.length);\n            opt.onNext();\n            break;\n        case 3:\n            local.middlewareCacheControlLastModified(\n                req,\n                res,\n                opt.onNext\n            );\n            break;\n        case 4:\n            res.end(opt.result);\n            break;\n        }\n    });\n    opt.modeNext = 0;\n    opt.onNext();\n};\n\nlocal.middlewareBodyRead = function (req, ignore, next) {\n/*\n * this function will run middleware that will\n * read and save the <req>-body to <req>.bodyRaw\n */\n    // if req is already read, then goto next\n    if (!req.readable) {\n        next();\n        return;\n    }\n    local.streamReadAll(req, function (err, data) {\n        req.bodyRaw = req.bodyRaw || data;\n        next(err);\n    });\n};\n\nlocal.middlewareCacheControlLastModified = function (req, res, next) {\n/*\n * this function will run middleware that will update res-header last-modified\n */\n    // do not cache if headers already sent or url has '?' search indicator\n    if (res.headersSent || req.url.indexOf(\"?\") >= 0) {\n        next();\n        return;\n    }\n    // init serverResponseHeaderLastModified\n    local.serverResponseHeaderLastModified = (\n        local.serverResponseHeaderLastModified\n        // resolve to 1000 ms\n        || new Date(new Date().toUTCString())\n    );\n    // respond with 304 If-Modified-Since serverResponseHeaderLastModified\n    if (\n        new Date(req.headers[\"if-modified-since\"])\n        >= local.serverResponseHeaderLastModified\n    ) {\n        res.statusCode = 304;\n        res.end();\n        return;\n    }\n    res.setHeader(\"Cache-Control\", \"no-cache\");\n    res.setHeader(\n        \"Last-Modified\",\n        local.serverResponseHeaderLastModified.toUTCString()\n    );\n    next();\n};\n\nlocal.middlewareError = function (err, req, res) {\n/*\n * this function will run middleware that will handle errors\n */\n    // default - 404 Not Found\n    if (!err) {\n        local.serverRespondDefault(req, res, 404);\n        return;\n    }\n    // http://jsonapi.org/format/#errors\n    if (local.swgg && typeof local.swgg.serverRespondJsonapi === \"function\") {\n        local.swgg.serverRespondJsonapi(req, res, err);\n    }\n    // statusCode [400, 600)\n    local.serverRespondDefault(req, res, (\n        (err.statusCode >= 400 && err.statusCode < 600)\n        ? err.statusCode\n        : 500\n    ), err);\n};\n\nlocal.middlewareFileServer = function (req, res, next) {\n/*\n * this function will run middleware that will serve files\n */\n    if (req.method !== \"GET\" || local.isBrowser) {\n        next();\n        return;\n    }\n    req.urlFile = (process.cwd() + req.urlParsed.pathname\n    // security - disable parent directory lookup\n    .replace((\n        /.*\\/\\.\\.\\//g\n    ), \"/\"))\n        // replace trailing '/' with '/index.html'\n        .replace((\n        /\\/$/\n    ), \"/index.html\");\n    // serve file from cache\n    local.taskCreateCached({\n        cacheDict: \"middlewareFileServer\",\n        key: req.urlFile\n    // run background-task to re-cache file\n    }, function (onError) {\n        local.fs.readFile(req.urlFile, function (err, data) {\n            onError(err, data && local.base64FromBuffer(data));\n        });\n    }, function (err, data) {\n        // default to next\n        if (err) {\n            next();\n            return;\n        }\n        // init res-header content-type\n        local.serverRespondHeadSet(req, res, null, {\n            \"Content-Type\": local.contentTypeDict[(\n                /\\.[^.]*?$|$/m\n            ).exec(req.urlParsed.pathname)[0]]\n        });\n        // serve file from cache\n        res.end(local.base64ToBuffer(data));\n    });\n};\n\nlocal.middlewareForwardProxy = function (req, res, next) {\n/*\n * this function will run middleware that will forward-proxy <req>\n * to its destination-host\n */\n    var isDone;\n    var onError;\n    var opt;\n    var timerTimeout;\n    // handle preflight-cors\n    if (req.method === \"OPTIONS\" && (\n        /forward-proxy-url/\n    )\n    .test(req.headers[\"access-control-request-headers\"])) {\n        local.serverRespondCors(req, res);\n        res.end();\n        return;\n    }\n    if (!req.headers[\"forward-proxy-url\"]) {\n        next();\n        return;\n    }\n    local.serverRespondCors(req, res);\n    // init onError\n    onError = function (err) {\n        if (isDone) {\n            return;\n        }\n        isDone = true;\n        // cleanup timerTimeout\n        clearTimeout(timerTimeout);\n        // debug middlewareForwardProxy\n        console.error(\"serverLog - \" + JSON.stringify({\n            time: new Date(opt.timeStart).toISOString(),\n            type: \"middlewareForwardProxyResponse\",\n            method: opt.method,\n            url: opt.url,\n            statusCode: res.statusCode | 0,\n            timeElapsed: Date.now() - opt.timeStart,\n            // extra\n            headers: opt.headers\n        }));\n        if (!err) {\n            return;\n        }\n        // cleanup clientReq and clientRes\n        local.streamCleanup(opt.clientReq);\n        local.streamCleanup(opt.clientResponse);\n        next(err);\n    };\n    // init opt\n    opt = local.urlParse(req.headers[\"forward-proxy-url\"]);\n    opt.method = req.method;\n    opt.url = req.headers[\"forward-proxy-url\"];\n    // init timerTimeout\n    timerTimeout = local.onTimeout(\n        onError,\n        local.timeoutDefault,\n        \"forward-proxy \" + opt.method + \" \" + opt.url\n    );\n    // parse headers\n    opt.headers = {};\n    local.tryCatchOnError(function () {\n        opt.headers = JSON.parse(req.headers[\"forward-proxy-headers\"]);\n    }, local.nop);\n    // debug opt\n    local._debugForwardProxy = opt;\n    opt.clientReq = (\n        opt.protocol === \"https:\"\n        ? local.https\n        : local.http\n    ).request(opt, function (clientResponse) {\n        opt.clientResponse = clientResponse.on(\"error\", onError);\n        res.statusCode = opt.clientResponse.statusCode;\n        // pipe clientResponse to serverResponse\n        opt.clientResponse.pipe(res);\n    }).on(\"error\", onError);\n    opt.timeStart = Date.now();\n    // init event-handling\n    req.on(\"error\", onError);\n    res.on(\"finish\", onError).on(\"error\", onError);\n    // pipe serverReq to clientReq\n    req.pipe(opt.clientReq);\n};\n\nlocal.middlewareInit = function (req, res, next) {\n/*\n * this function will run middleware that will init <req> and <res>\n */\n    // debug req and res\n    local._debugServerReqRes4 = local._debugServerReqRes3;\n    local._debugServerReqRes3 = local._debugServerReqRes2;\n    local._debugServerReqRes2 = local._debugServerReqRes1;\n    local._debugServerReqRes1 = {\n        req,\n        res\n    };\n    // init timerTimeout\n    local.serverRespondTimeoutDefault(req, res, local.timeoutDefault);\n    // init req.urlParsed\n    req.urlParsed = local.urlParse(req.url);\n    // init res-header content-type\n    local.serverRespondHeadSet(req, res, null, {\n        \"Content-Type\": local.contentTypeDict[(\n            /\\.[^.]*?$|$/m\n        ).exec(req.urlParsed.pathname)[0]]\n    });\n    // set main-page content-type to text/html\n    if (req.urlParsed.pathname === \"/\") {\n        local.serverRespondHeadSet(req, res, null, {\n            \"Content-Type\": \"text/html; charset=utf-8\"\n        });\n    }\n    // default to next\n    next();\n};\n\nlocal.middlewareJsonpStateInit = function (req, res, next) {\n/*\n * this function will run middleware that will\n * serve the browser-state wrapped in given jsonp-callback\n */\n    var state;\n    if (!(req.stateInit || (\n        req.urlParsed\n        && req.urlParsed.pathname === \"/jsonp.utility2.stateInit\"\n    ))) {\n        next();\n        return;\n    }\n    state = {\n        utility2: {\n            assetsDict: {\n                \"/assets.example.html\":\n                local.assetsDict[\"/assets.example.html\"],\n                \"/assets.example.js\": local.assetsDict[\"/assets.example.js\"],\n                \"/assets.swgg.swagger.json\":\n                local.assetsDict[\"/assets.swgg.swagger.json\"],\n                \"/assets.test.js\": local.assetsDict[\"/assets.test.js\"],\n                \"/assets.utility2.base.html\":\n                local.assetsDict[\"/assets.utility2.base.rollup.html\"],\n                \"/index.rollup.html\": local.assetsDict[\"/index.rollup.html\"]\n            },\n            env: {\n                NODE_ENV: local.env.NODE_ENV,\n                npm_config_mode_backend: local.env.npm_config_mode_backend,\n                npm_package_assetsList: local.env.npm_package_assetsList,\n                npm_package_description: local.env.npm_package_description,\n                npm_package_homepage: local.env.npm_package_homepage,\n                npm_package_name: local.env.npm_package_name,\n                npm_package_nameLib: local.env.npm_package_nameLib,\n                npm_package_version: local.env.npm_package_version\n            }\n        }\n    };\n    (local.env.npm_package_assetsList || \"\").split(\" \").forEach(function (\n        file\n    ) {\n        local.assetsDict[\"/\" + file] = (\n            local.assetsDict[\"/\" + file]\n            || local.fsReadFileOrEmptyStringSync(file, \"utf8\")\n        );\n        state.utility2.assetsDict[\"/\" + file] = local.assetsDict[\"/\" + file];\n    });\n    if (req.stateInit) {\n        return state;\n    }\n    res.end(\n        req.urlParsed.query.callback + \"(\" + JSON.stringify(state) + \");\"\n    );\n};\n\nlocal.moduleDirname = function (module, modulePathList) {\n/*\n * this function will search modulePathList for the module's __dirname\n */\n    var result;\n    // search process.cwd()\n    if (!module || module === \".\" || module.indexOf(\"/\") >= 0) {\n        return require(\"path\").resolve(process.cwd(), module || \"\");\n    }\n    // search modulePathList\n    [\n        \"node_modules\"\n    ]\n    .concat(modulePathList)\n    .concat(require(\"module\").globalPaths)\n    .concat([\n        process.env.HOME + \"/node_modules\", \"/usr/local/lib/node_modules\"\n    ])\n    .some(function (modulePath) {\n        try {\n            result = require(\"path\").resolve(\n                process.cwd(),\n                modulePath + \"/\" + module\n            );\n            result = require(\"fs\").statSync(result).isDirectory() && result;\n            return result;\n        } catch (ignore) {\n            result = null;\n        }\n        return result;\n    });\n    return result || \"\";\n};\n\nlocal.normalizeChunk = function (chunk) {\n/*\n * this function will normalize the chunk\n */\n    return chunk || \"\";\n};\n\nlocal.normalizeJwt = function (data) {\n/*\n * this function will normalize the jwt-data with registered-headers\n * https://tools.ietf.org/html/rfc7519#section-4.1\n */\n    var timeNow;\n    timeNow = Date.now() / 1000;\n    return local.objectSetDefault(data, {\n        exp: timeNow + 5 * 60,\n        iat: timeNow,\n        jti: Math.random().toString(16).slice(2),\n        nbf: timeNow\n    });\n};\n\nlocal.normalizeJwtBase64Url = function (b64) {\n/*\n * this function will normlize <b64> to base64url format\n */\n    return b64\n    .replace((\n        /\\=/g\n    ), \"\")\n    .replace((\n        /\\+/g\n    ), \"-\")\n    .replace((\n        /\\//g\n    ), \"_\");\n};\n\nlocal.numberToRomanNumerals = function (num) {\n/*\n * this function will convert num to a roman-numeral\n * https://stackoverflow.com/questions/9083037/convert-a-number-into-a-roman-numeral-in-javascript\n */\n    var digits;\n    var ii;\n    var key;\n    var roman;\n    digits = String(num).split(\"\");\n    key = [\n        \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\n        \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\n        \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\n    ];\n    roman = \"\";\n    ii = 3;\n    while (ii) {\n        ii -= 1;\n        roman = (key[Number(digits.pop()) + (ii * 10)] || \"\") + roman;\n    }\n    return new Array(Number(digits.join(\"\") + 1)).join(\"M\") + roman;\n};\n\nlocal.objectSetDefault = function (dict, defaults, depth) {\n/*\n * this function will recursively set defaults for undefined-items in dict\n */\n    dict = dict || {};\n    defaults = defaults || {};\n    Object.keys(defaults).forEach(function (key) {\n        var defaults2;\n        var dict2;\n        dict2 = dict[key];\n        // handle misbehaving getter\n        try {\n            defaults2 = defaults[key];\n        } catch (ignore) {}\n        if (defaults2 === undefined) {\n            return;\n        }\n        // init dict[key] to default value defaults[key]\n        switch (dict2) {\n        case \"\":\n        case null:\n        case undefined:\n            dict[key] = defaults2;\n            return;\n        }\n        // if dict2 and defaults2 are both non-null and non-array objects,\n        // then recurse with dict2 and defaults2\n        if (\n            depth > 1\n            // dict2 is a non-null and non-array object\n            && typeof dict2 === \"object\" && dict2 && !Array.isArray(dict2)\n            // defaults2 is a non-null and non-array object\n            && typeof defaults2 === \"object\" && defaults2\n            && !Array.isArray(defaults2)\n        ) {\n            // recurse\n            local.objectSetDefault(dict2, defaults2, depth - 1);\n        }\n    });\n    return dict;\n};\n\nlocal.objectSetOverride = function (dict, overrides, depth, env) {\n/*\n * this function will recursively set overrides for items in dict\n */\n    dict = dict || {};\n    env = env || (typeof process === \"object\" && process.env) || {};\n    overrides = overrides || {};\n    Object.keys(overrides).forEach(function (key) {\n        var dict2;\n        var overrides2;\n        dict2 = dict[key];\n        overrides2 = overrides[key];\n        if (overrides2 === undefined) {\n            return;\n        }\n        // if both dict2 and overrides2 are non-null and non-array objects,\n        // then recurse with dict2 and overrides2\n        if (\n            depth > 1\n            // dict2 is a non-null and non-array object\n            && typeof dict2 === \"object\" && dict2 && !Array.isArray(dict2)\n            // overrides2 is a non-null and non-array object\n            && typeof overrides2 === \"object\" && overrides2\n            && !Array.isArray(overrides2)\n        ) {\n            local.objectSetOverride(dict2, overrides2, depth - 1, env);\n            return;\n        }\n        // else set dict[key] with overrides[key]\n        dict[key] = (\n            dict === env\n            // if dict is env, then overrides falsy-value with empty-string\n            ? overrides2 || \"\"\n            : overrides2\n        );\n    });\n    return dict;\n};\n\nlocal.onErrorDefault = function (err) {\n/*\n * this function will if <err> exists, then print it to stderr\n */\n    if (err) {\n        console.error(err);\n    }\n    return err;\n};\n\nlocal.onErrorThrow = function (err) {\n/*\n * this function will if <err> exists, then throw it\n */\n    if (err) {\n        throw err;\n    }\n    return err;\n};\n\nlocal.onErrorWithStack = function (onError) {\n/*\n * this function will create wrapper around <onError>\n * that will append current-stack to err.stack\n */\n    var onError2;\n    var stack;\n    stack = new Error().stack.replace((\n        /(.*?)\\n.*?$/m\n    ), \"$1\");\n    onError2 = function (err, data, meta) {\n        if (\n            err\n            && typeof err.stack === \"string\"\n            && err !== local.errDefault\n            && String(err.stack).indexOf(stack.split(\"\\n\")[2]) < 0\n        ) {\n            // append current-stack to err.stack\n            err.stack += \"\\n\" + stack;\n        }\n        onError(err, data, meta);\n    };\n    // debug onError\n    onError2.toString = function () {\n        return String(onError);\n    };\n    return onError2;\n};\n\nlocal.onFileModifiedRestart = function (file) {\n/*\n * this function will watch the file, and if modified, then restart the process\n */\n    if (\n        local.env.npm_config_mode_auto_restart\n        && local.fs.existsSync(file)\n        && local.fs.statSync(file).isFile()\n    ) {\n        local.fs.watchFile(file, {\n            interval: 1000,\n            persistent: false\n        }, function (stat2, stat1) {\n            if (stat2.mtime > stat1.mtime) {\n                console.error(\"file modified - \" + file);\n                setTimeout(function () {\n                    local.exit(77);\n                }, 1000);\n            }\n        });\n    }\n};\n\nlocal.onNext = function (opt, onError) {\n/*\n * this function will wrap onError inside recursive-function <opt>.onNext,\n * and append the current-stack to any err\n */\n    opt.onNext = local.onErrorWithStack(function (err, data, meta) {\n        try {\n            opt.modeNext += (\n                (err && !opt.modeErrorIgnore)\n                ? 1000\n                : 1\n            );\n            if (opt.modeDebug) {\n                console.error(\"onNext - \" + JSON.stringify({\n                    modeNext: opt.modeNext,\n                    errorMessage: err && err.message\n                }));\n                if (err && err.stack) {\n                    console.error(err.stack);\n                }\n            }\n            onError(err, data, meta);\n        } catch (errCaught) {\n            // throw errCaught to break infinite recursion-loop\n            if (opt.errCaught) {\n                local.assertThrow(null, opt.errCaught);\n            }\n            opt.errCaught = errCaught;\n            opt.onNext(errCaught, data, meta);\n        }\n    });\n    return opt;\n};\n\nlocal.onParallel = function (onError, onEach, onRetry) {\n/*\n * this function will create a function that will\n * 1. run async tasks in parallel\n * 2. if counter === 0 or err occurred, then call onError(err)\n */\n    var onParallel;\n    onError = local.onErrorWithStack(onError);\n    onEach = onEach || local.nop;\n    onRetry = onRetry || local.nop;\n    onParallel = function (err, data) {\n        if (onRetry(err, data)) {\n            return;\n        }\n        // decrement counter\n        onParallel.counter -= 1;\n        // validate counter\n        if (!(onParallel.counter >= 0 || err || onParallel.err)) {\n            err = new Error(\n                \"invalid onParallel.counter = \" + onParallel.counter\n            );\n        // ensure onError is run only once\n        } else if (onParallel.counter < 0) {\n            return;\n        }\n        // handle err\n        if (err) {\n            onParallel.err = err;\n            // ensure counter <= 0\n            onParallel.counter = -Math.abs(onParallel.counter);\n        }\n        // call onError when isDone\n        if (onParallel.counter <= 0) {\n            onError(err, data);\n            return;\n        }\n        onEach();\n    };\n    // init counter\n    onParallel.counter = 0;\n    // return callback\n    return onParallel;\n};\n\nlocal.onParallelList = function (opt, onEach, onError) {\n/*\n * this function will\n * 1. async-run onEach in parallel,\n *    with given <opt>.rateLimit and <opt>.retryLimit\n * 2. call <onError> when onParallel.ii + 1 === <opt>.list.length\n */\n    var isListEnd;\n    var onEach2;\n    var onParallel;\n    opt.list = opt.list || [];\n    onEach2 = function () {\n        while (true) {\n            if (!(onParallel.ii + 1 < opt.list.length)) {\n                isListEnd = true;\n                return;\n            }\n            if (!(onParallel.counter < opt.rateLimit + 1)) {\n                return;\n            }\n            onParallel.ii += 1;\n            onEach({\n                elem: opt.list[onParallel.ii],\n                ii: onParallel.ii,\n                list: opt.list,\n                retry: 0\n            }, onParallel);\n        }\n    };\n    onParallel = local.onParallel(onError, onEach2, function (err, data) {\n        if (err && data && data.retry < opt.retryLimit) {\n            local.onErrorDefault(err);\n            data.retry += 1;\n            setTimeout(function () {\n                onParallel.counter -= 1;\n                onEach(data, onParallel);\n            }, 1000);\n            return true;\n        }\n        // restart if opt.list has grown\n        if (isListEnd && (onParallel.ii + 1 < opt.list.length)) {\n            isListEnd = null;\n            onEach2();\n        }\n    });\n    onParallel.ii = -1;\n    opt.rateLimit = Number(opt.rateLimit) || 6;\n    opt.rateLimit = Math.max(opt.rateLimit, 1);\n    opt.retryLimit = Number(opt.retryLimit) || 2;\n    onParallel.counter += 1;\n    onEach2();\n    onParallel();\n};\n\nlocal.onTimeout = function (onError, timeout, message) {\n/*\n * this function will create a timeout-err-handler,\n * that appends current-stack to any err encountered\n */\n    onError = local.onErrorWithStack(onError);\n    // create timerTimeout\n    return setTimeout(function () {\n        onError(new Error(\n            \"onTimeout - errTimeout - \" + timeout + \" ms - \" + message\n        ));\n    // coerce to finite integer\n    }, timeout);\n};\n\nlocal.profile = function (fnc, onError) {\n/*\n * this function will profile async <fnc> in milliseconds\n * with callback <onError>\n */\n    var timeStart;\n    timeStart = Date.now();\n    // run async fnc\n    fnc(function (err) {\n        // call onError with difference in milliseconds\n        // between Date.now() and timeStart\n        onError(err, Date.now() - timeStart);\n    });\n};\n\nlocal.profileSync = function (fnc) {\n/*\n * this function will profile sync <fnc> in milliseconds\n */\n    var timeStart;\n    timeStart = Date.now();\n    // run sync fnc\n    fnc();\n    // return difference in milliseconds between Date.now() and timeStart\n    return Date.now() - timeStart;\n};\n\nlocal.replStart = function () {\n/*\n * this function will start the repl-debugger\n */\n    var that;\n    if (globalThis.utility2_repl1) {\n        return;\n    }\n    // start repl\n    that = require(\"repl\").start({\n        useGlobal: true\n    });\n    globalThis.utility2_repl1 = that;\n    that.onError = function (err) {\n    /*\n     * this function will debug repl-err\n     */\n        globalThis.utility2_debugReplError = err;\n        console.error(err);\n    };\n    // save eval-function\n    that.evalDefault = that.eval;\n    // hook custom-eval-function\n    that.eval = function (script, context, file, onError) {\n        var onError2;\n        onError2 = function (err, data) {\n            // debug err\n            globalThis.utility2_debugReplError = (\n                err || globalThis.utility2_debugReplError\n            );\n            onError(err, data);\n        };\n        script.replace((\n            /^(\\S+)\\u0020(.*?)\\n/\n        ), function (ignore, match1, match2) {\n            switch (match1) {\n            // syntax-sugar - run async shell-command\n            case \"$\":\n                switch (match2) {\n                // syntax-sugar - run git diff\n                case \"git diff\":\n                    match2 = \"git diff --color | cat\";\n                    break;\n                // syntax-sugar - run git log\n                case \"git log\":\n                    match2 = \"git log -n 4 | cat\";\n                    break;\n                // syntax-sugar - run git log\n                case \"ll\":\n                    match2 = \"ls -Fal\";\n                    break;\n                }\n                // source lib.utility2.sh\n                if (\n                    process.platform !== \"win32\"\n                    && process.env.npm_config_dir_utility2 && (match2 !== \":\")\n                ) {\n                    match2 = (\n                        \". \" + process.env.npm_config_dir_utility2\n                        + \"/lib.utility2.sh;\" + match2\n                    );\n                }\n                // run async shell-command\n                require(\"child_process\").spawn(match2, {\n                    shell: true,\n                    stdio: [\n                        \"ignore\", 1, 2\n                    ]\n                // on shell exit, print return prompt\n                }).on(\"exit\", function (exitCode) {\n                    console.error(\"exit-code \" + exitCode);\n                    that.evalDefault(\n                        \"\\n\",\n                        context,\n                        file,\n                        onError2\n                    );\n                });\n                script = \"\\n\";\n                break;\n            // syntax-sugar - map text with charCodeAt\n            case \"charCode\":\n                console.error(\n                    match2.split(\"\").map(function (chr) {\n                        return (\n                            \"\\\\u\"\n                            + chr.charCodeAt(0).toString(16).padStart(4, 0)\n                        );\n                    }).join(\"\")\n                );\n                script = \"\\n\";\n                break;\n            // syntax-sugar - sort chr\n            case \"charSort\":\n                console.error(JSON.stringify(match2.split(\"\").sort().join(\"\")));\n                script = \"\\n\";\n                break;\n            // syntax-sugar - grep current dir\n            case \"grep\":\n                // run async shell-command\n                require(\"child_process\").spawn((\n                    \"find . -type f | grep -v -E \"\n/* jslint ignore:start */\n+ '\"\\\n/\\\\.|(\\\\b|_)(\\\\.\\\\d|\\\narchive|artifact|\\\nbower_component|build|\\\ncoverage|\\\ndoc|\\\nexternal|\\\nfixture|\\\ngit_module|\\\njquery|\\\nlog|\\\nmin|misc|mock|\\\nnode_module|\\\nraw|\\rollup|\\\nswp|\\\ntmp|\\\nvendor)s{0,1}(\\\\b|_)\\\n\" '\n/* jslint ignore:end */\n                    + \"| tr \\\"\\\\n\\\" \\\"\\\\000\\\" | xargs -0 grep -HIin -E \\\"\"\n                    + match2 + \"\\\"\"\n                ), {\n                    shell: true,\n                    stdio: [\n                        \"ignore\", 1, 2\n                    ]\n                })\n                // on shell exit, print return prompt\n                .on(\"exit\", function (exitCode) {\n                    console.error(\"exit-code \" + exitCode);\n                    that.evalDefault(\n                        \"\\n\",\n                        context,\n                        file,\n                        onError2\n                    );\n                });\n                script = \"\\n\";\n                break;\n            // syntax-sugar - list object's keys, sorted by item-type\n            // console.error(Object.keys(global).map(function(key){return(typeof global[key]==='object'&&global[key]&&global[key]===global[key]?'global':typeof global[key])+' '+key;}).sort().join('\\n')) // jslint ignore:line\n            case \"keys\":\n                script = (\n                    \"console.error(Object.keys(\" + match2\n                    + \").map(function(key){return(\"\n                    + \"typeof \" + match2 + \"[key]==='object'&&\"\n                    + match2 + \"[key]&&\"\n                    + match2 + \"[key]===global[key]\"\n                    + \"?'global'\"\n                    + \":typeof \" + match2 + \"[key]\"\n                    + \")+' '+key;\"\n                    + \"}).sort().join('\\\\n'))\\n\"\n                );\n                break;\n            // syntax-sugar - print stringified arg\n            case \"print\":\n                script = \"console.error(String(\" + match2 + \"))\\n\";\n                break;\n            // syntax-sugar - read file\n            case \"readFile\":\n                try {\n                    console.error(JSON.stringify(\n                        require(\"fs\").readFileSync(match2, \"utf8\")\n                    ));\n                } catch (errCaught) {\n                    console.error(errCaught);\n                }\n                script = \"\\n\";\n                break;\n            }\n        });\n        // eval the script\n        that.evalDefault(script, context, file, onError2);\n    };\n    that.socket = {\n        end: local.nop,\n        on: local.nop,\n        write: local.nop\n    };\n    // init process.stdout\n    process.stdout._writeDefault = (\n        process.stdout._writeDefault\n        || process.stdout._write\n    );\n    process.stdout._write = function (chunk, encoding, callback) {\n        process.stdout._writeDefault(chunk, encoding, callback);\n        // coverage-hack - ignore else-statement\n        local.nop(that.socket.writable && (function () {\n            that.socket.write(chunk, encoding);\n        }()));\n    };\n    // start serverRepl1\n    globalThis.utility2_serverRepl1 = require(\"net\").createServer(function (\n        socket\n    ) {\n        // init socket\n        that.socket = socket;\n        that.socket.on(\"data\", that.write.bind(that));\n        that.socket.on(\"error\", that.onError);\n        that.socket.setKeepAlive(true);\n    });\n    // coverage-hack - ignore else-statement\n    local.nop(process.env.PORT_REPL && (function () {\n        console.error(\n            \"repl-server listening on port \" + process.env.PORT_REPL\n        );\n        globalThis.utility2_serverRepl1.listen(process.env.PORT_REPL);\n    }()));\n};\n\nlocal.requireInSandbox = function (file) {\n/*\n * this function will require the file in a sandbox-lite env\n */\n    var exports;\n    var mockDict;\n    var mockList;\n    var tmp;\n    mockList = [\n        [\n            globalThis, {\n                setImmediate: local.nop,\n                setInterval: local.nop,\n                setTimeout: local.nop\n            }\n        ]\n    ];\n    [\n        [\n            local, \"child_process\"\n        ], [\n            local, \"cluster\"\n        ], [\n            local, \"http\"\n        ], [\n            local, \"https\"\n        ], [\n            local, \"net\"\n        ], [\n            local, \"repl\"\n        ], [\n            local.events, \"prototype\"\n        ], [\n            globalThis, \"process\"\n        ], [\n            local.stream, \"prototype\"\n        ], [\n            process, \"stdin\"\n        ]\n    ].forEach(function (elem) {\n        tmp = elem[0][elem[1]];\n        mockDict = {};\n        Object.keys(tmp).forEach(function (key) {\n            if (\n                typeof tmp[key] === \"function\"\n                && !(\n                    /^(?:fs\\.Read|fs\\.read|process\\.binding|process\\.dlopen)/\n                )\n                .test(elem[1] + \".\" + key)\n            ) {\n                mockDict[key] = function () {\n                    return;\n                };\n                // coverage-hack\n                mockDict[key]();\n            }\n        });\n        mockList.push([\n            tmp, mockDict\n        ]);\n    });\n    local.testMock(mockList, function (onError) {\n        local.tryCatchOnError(function () {\n            exports = require(file);\n        }, local.onErrorDefault);\n        onError();\n    }, local.onErrorThrow);\n    return exports;\n};\n\nlocal.requireReadme = function () {\n/*\n * this function will require and export example.js embedded in README.md\n */\n    var code;\n    var module;\n    var tmp;\n    // init module.exports\n    module = {};\n    if (local.isBrowser) {\n        module.exports = local.objectSetDefault(\n            globalThis.utility2_rollup || globalThis.local,\n            local\n        );\n        return module.exports;\n    }\n    // start repl-debugger\n    local.replStart();\n    // debug dir\n    [\n        __dirname + \"/lib.jslint.js\",\n        __filename,\n        \"undefined\"\n    ].forEach(function (file) {\n        local.fs.exists(file, function (exists) {\n            if (exists) {\n                local.onFileModifiedRestart(file);\n            }\n        });\n    });\n    local.fs.readdirSync(process.cwd()).forEach(function (file) {\n        file = process.cwd() + \"/\" + file;\n        // if the file is modified, then restart the process\n        local.onFileModifiedRestart(file);\n        switch (local.path.basename(file)) {\n        // swagger-validate assets.swgg.swagger.json\n        case \"assets.swgg.swagger.json\":\n            local.fs.readFile(file, \"utf8\", function (err, data) {\n                local.tryCatchOnError(function () {\n                    // validate no err occurred\n                    local.assertThrow(!err, err);\n                    local.swgg.swaggerValidate(JSON.parse(data));\n                }, local.onErrorDefault);\n            });\n            break;\n        }\n    });\n    // jslint process.cwd()\n    if (!local.env.npm_config_mode_library) {\n        local.child_process.spawn(\"node\", [\n            \"-e\", (\n                \"require(\"\n                + JSON.stringify(__filename)\n                + \").jslint.jslintAndPrintDir(\"\n                + JSON.stringify(process.cwd())\n                + \", {autofix:true,conditional:true}, process.exit);\"\n            )\n        ], {\n            env: local.objectAssignDefault({\n                npm_config_mode_library: \"1\"\n            }, local.env),\n            stdio: [\n                \"ignore\", \"ignore\", 2\n            ]\n        });\n    }\n    if (globalThis.utility2_rollup || local.env.npm_config_mode_start) {\n        // init assets\n        local.assetsDict[\"/index.html\"] = (\n            local.fsReadFileOrEmptyStringSync(\"index.html\")\n            || local.assetsDict[\"/index.rollup.html\"] || \"\"\n        );\n        local.assetsDict[\"/\"] = local.assetsDict[\"/index.html\"];\n        local.assetsDict[\"/assets.app.js\"] = local.fs.readFileSync(\n            __filename,\n            \"utf8\"\n        ).replace((\n            /^#!\\//\n        ), \"// \");\n        // init exports\n        local[local.env.npm_package_nameLib] = local;\n        module.exports = local;\n        return module.exports;\n    }\n    // init file $npm_package_main\n    globalThis.utility2_moduleExports = require(\n        process.cwd() + \"/\" + local.env.npm_package_main\n    );\n    globalThis.utility2_moduleExports.globalThis = globalThis;\n    // read code from README.md\n    code = local.templateRenderMyApp(\n        local.assetsDict[\"/assets.example.template.js\"],\n        {}\n    );\n    local.tryCatchOnError(function () {\n        tmp = (\n            /```\\w*?(\\n[\\W\\s]*?example\\.js[\\n\"][\\S\\s]*?)\\n```/\n        ).exec(\n            local.fs.readFileSync(\"README.md\", \"utf8\")\n        );\n        code = tmp.input.slice(0, tmp.index).replace((\n            /.+/g\n        ), \"\") + tmp[1];\n    }, local.nop);\n    code = code\n    // alias require($npm_package_name) to utility2_moduleExports;\n    .replace(\n        new RegExp(\"require\\\\(.\" + local.env.npm_package_name + \".\\\\)\"),\n        \"globalThis.utility2_moduleExports\"\n    )\n    .replace(\n        new RegExp(\"require\\\\(.\" + local.env.npm_package_nameOriginal + \".\\\\)\"),\n        \"globalThis.utility2_moduleExports\"\n    );\n    // init example.js\n    tmp = process.cwd() + \"/example.js\";\n    // jslint code\n    local.jslintAndPrint(code, tmp);\n    // cover code\n    code = local.istanbulInstrumentInPackage(code, tmp);\n    // init module.exports\n    module = new local.Module(tmp);\n    require.cache[tmp] = module;\n    // load code into module\n    module._compile(code, tmp);\n    // init exports\n    module.exports.utility2 = local;\n    module.exports[local.env.npm_package_nameLib] = (\n        globalThis.utility2_moduleExports\n    );\n    // init assets\n    tmp = process.cwd() + \"/\" + local.env.npm_package_main;\n    local.assetsDict[\"/assets.\" + local.env.npm_package_nameLib + \".js\"] = (\n        local.fs.readFileSync(tmp, \"utf8\").replace((\n            /^#!\\//\n        ), \"// \")\n    );\n    local.objectSetOverride(local.assetsDict, module.exports.assetsDict);\n    local.assetsDict[\"/assets.\" + local.env.npm_package_nameLib + \".js\"] = (\n        local.istanbulInstrumentInPackage(\n            local.assetsDict[\n                \"/assets.\" + local.env.npm_package_nameLib + \".js\"\n            ],\n            tmp\n        )\n    );\n    module.exports.assetsDict = local.assetsDict;\n    local.assetsDict[\"/assets.example.js\"] = code;\n    local.assetsDict[\"/assets.test.js\"] = local.istanbulInstrumentInPackage(\n        local.fs.readFileSync(\"test.js\", \"utf8\"),\n        process.cwd() + \"/test.js\"\n    );\n    // init assets index.html\n    [\n        \"\", \".rollup\"\n    ].forEach(function (isRollup) {\n        [\n            \"index\", \"utility2\"\n        ].forEach(function (file) {\n            tmp = \"assets.\" + file + \".template.html\";\n            local.assetsDict[\"/\" + tmp] = (\n                local.fsReadFileOrEmptyStringSync(tmp, \"utf8\")\n                || local.assetsDict[\"/\" + tmp]\n            );\n            file = (\n                file.replace(\"utility2\", \"assets.utility2.base\") + isRollup\n                + \".html\"\n            );\n            local.assetsDict[\"/\" + file] = local.fsReadFileOrEmptyStringSync(\n                file,\n                \"utf8\"\n            ) || local.templateRender(\n                // uncomment utility2-comment\n                local.assetsDict[\"/\" + tmp].replace((\n                    /<!--\\u0020utility2-comment\\b([\\S\\s]*?)\\butility2-comment\\u0020-->/g\n                ), \"$1\"),\n                {\n                    env: local.env,\n                    isRollup\n                }\n            );\n        });\n    });\n    local.assetsDict[\"/\"] = local.assetsDict[\"/index.html\"];\n    // init assets.app.js\n    local.assetsDict[\"/assets.app.js\"] = [\n        \"header\",\n        \"/assets.utility2.rollup.js\",\n        \"/assets.utility2.rollup.begin.js\",\n        \"local.stateInit\",\n        \"/assets.my_app.js\",\n        \"/assets.example.js\",\n        \"/assets.test.js\",\n        \"/assets.utility2.rollup.end.js\"\n    ].map(function (key) {\n        switch (key) {\n/* jslint ignore:start */\ncase 'header':\nreturn '\\\n/* this rollup was created with utility2\\n\\\n * https://github.com/kaizhu256/node-utility2\\n\\\n */\\n\\\n\\n\\\n\\n\\\n\\n\\\n/*\\n\\\nassets.app.js\\n\\\n\\n\\\n' + local.env.npm_package_description + '\\n\\\n\\n\\\ninstruction\\n\\\n    1. save this script as assets.app.js\\n\\\n    2. run the shell-command:\\n\\\n        $ PORT=8081 node assets.app.js\\n\\\n    3. open a browser to http://127.0.0.1:8081 and play with the web-demo\\n\\\n    4. edit this script to suit your needs\\n\\\n*/\\n\\\n' + local.assetsDict[\"/assets.utility2.rollup.begin.js\"]\n    .replace((/utility2_rollup/g), 'utility2_app');\n/* jslint ignore:end */\n        case \"/assets.my_app.js\":\n            // handle large string-replace\n            tmp = \"/assets.\" + local.env.npm_package_nameLib + \".js\";\n            code = local.assetsDict[\"/assets.utility2.rollup.content.js\"]\n            .split(\"/* utility2.rollup.js content */\");\n            code.splice(\n                1,\n                0,\n                \"local.assetsDict[\\\"\" + tmp + \"\\\"] = \"\n                + JSON.stringify(local.assetsDict[tmp]).replace((\n                    /\\\\\\\\/g\n                ), \"\\u0000\").replace((\n                    /\\\\n/g\n                ), \"\\\\n\\\\\\n\").replace((\n                    /\\u0000/g\n                ), \"\\\\\\\\\")\n            );\n            code = code.join(\"\");\n            code += \"\\n\";\n            code += local.assetsDict[tmp];\n            break;\n        case \"local.stateInit\":\n            // handle large string-replace\n            code = local.assetsDict[\"/assets.utility2.rollup.content.js\"]\n            .split(\"/* utility2.rollup.js content */\");\n            tmp = local.middlewareJsonpStateInit({\n                stateInit: true\n            });\n            // add extra physical files to assetsDict\n            local.fs.readdirSync(\".\").forEach(function (file) {\n                file = \"/\" + file;\n                if (\n                    local.assetsDict[file]\n                    && local.assetsDict[file].length <= 0x100000\n                    && String(local.assetsDict[file])\n                    === local.fsReadFileOrEmptyStringSync(\".\" + file, \"utf8\")\n                ) {\n                    tmp.utility2.assetsDict[file] = local.assetsDict[file];\n                }\n            });\n            code.splice(1, 0, key + \"(\" + JSON.stringify(tmp, null, 4) + \");\");\n            code = code.join(\"\");\n            break;\n        default:\n            code = local.assetsDict[key];\n        }\n        return (\n            \"/* script-begin \" + key + \" */\\n\"\n            + code.trim()\n            + \"\\n/* script-end \" + key + \" */\\n\"\n        );\n    }).join(\"\\n\\n\\n\");\n    local.objectSetDefault(module.exports, local);\n    // init testCase_buildXxx\n    Object.keys(local).forEach(function (key) {\n        if (\n            key.indexOf(\"_testCase_build\") === 0\n            || key === \"_testCase_webpage_default\"\n        ) {\n            module.exports[key.slice(1)] = (\n                module.exports[key.slice(1)] || local[key]\n            );\n        }\n    });\n    return module.exports;\n};\n\nlocal.semverCompare = function (aa, bb) {\n/*\n * this function will compare semver versions aa ? bb and return\n * -1 if aa < bb\n *  0 if aa = bb\n *  1 if aa > bb\n * https://semver.org/#spec-item-11\n */\n    return [\n        aa, bb\n    ].map(function (aa) {\n        aa = aa.split(\"-\");\n        return [\n            aa[0], aa.slice(1).join(\"-\") || \"\\u00ff\"\n        ].map(function (aa) {\n            return aa.split(\".\").map(function (aa) {\n                return (\"0000000000000000\" + aa).slice(-16);\n            }).join(\".\");\n        }).join(\"-\");\n    }).reduce(function (aa, bb) {\n        return (\n            aa === bb\n            ? 0\n            : aa < bb\n            ? -1\n            : 1\n        );\n    });\n};\n\nlocal.serverRespondCors = function (req, res) {\n/*\n * this function will enable cors for the req\n * http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n */\n    local.serverRespondHeadSet(req, res, null, local.jsonCopy({\n        \"access-control-allow-headers\":\n        req.headers[\"access-control-request-headers\"],\n        \"access-control-allow-methods\":\n        req.headers[\"access-control-request-method\"],\n        \"access-control-allow-origin\": \"*\"\n    }));\n};\n\nlocal.serverRespondDefault = function (req, res, statusCode, err) {\n/*\n * this function will respond with a default message,\n * or <err>.stack for given statusCode\n */\n    // init statusCode and contentType\n    local.serverRespondHeadSet(\n        req,\n        res,\n        statusCode,\n        {\n            \"Content-Type\": \"text/plain; charset=utf-8\"\n        }\n    );\n    if (err) {\n        // debug statusCode / method / url\n        local.errorMessagePrepend(\n            err,\n            res.statusCode + \" \" + req.method + \" \" + req.url\n            + \"\\n\"\n        );\n        // print err.stack to stderr\n        local.onErrorDefault(err);\n        // end res with err.stack\n        res.end(err.stack);\n        return;\n    }\n    // end res with default statusCode message\n    res.end(\n        statusCode + \" \" + local.http.STATUS_CODES[statusCode]\n    );\n};\n\nlocal.serverRespondEcho = function (req, res) {\n/*\n * this function will respond with debug info\n */\n    res.write(\n        req.method + \" \" + req.url\n        + \" HTTP/\" + req.httpVersion + \"\\r\\n\"\n        + Object.keys(req.headers).map(function (key) {\n            return key + \": \" + req.headers[key] + \"\\r\\n\";\n        }).join(\"\") + \"\\r\\n\"\n    );\n    req.pipe(res);\n};\n\nlocal.serverRespondHeadSet = function (ignore, res, statusCode, headers) {\n/*\n * this function will set the <res> object's <statusCode> and <headers>\n */\n    if (res.headersSent) {\n        return;\n    }\n    // init res.statusCode\n    if (Number(statusCode)) {\n        res.statusCode = Number(statusCode);\n    }\n    Object.keys(headers).forEach(function (key) {\n        if (headers[key]) {\n            res.setHeader(key, headers[key]);\n        }\n    });\n    return true;\n};\n\nlocal.serverRespondTimeoutDefault = function (req, res, timeout) {\n/*\n * this function will create a timeout-err-handler for server-<req>\n */\n    var isDone;\n    var onError;\n    onError = function () {\n        if (isDone) {\n            return;\n        }\n        isDone = true;\n        // debug serverResponse\n        console.error(\"serverLog - \" + JSON.stringify({\n            time: new Date(req.timeStart).toISOString(),\n            type: \"serverResponse\",\n            method: req.method,\n            url: req.url,\n            statusCode: res.statusCode | 0,\n            timeElapsed: Date.now() - req.timeStart,\n            // extra\n            requestContentLength: req.dataLength || 0,\n            resContentLength: res.contentLength,\n            requestHeaderXForwardedFor:\n            req.headers[\"x-forwarded-for\"] || \"\",\n            requestHeaderOrigin: req.headers.origin || \"\",\n            requestHeaderReferer: req.headers.referer || \"\",\n            requestHeaderUserAgent: req.headers[\"user-agent\"]\n        }));\n        // cleanup timerTimeout\n        clearTimeout(req.timerTimeout);\n    };\n    req.timeStart = Date.now();\n    req.onTimeout = req.onTimeout || function (err) {\n        local.serverRespondDefault(req, res, 500, err);\n        setTimeout(function () {\n            // cleanup <req> and <res>\n            local.streamCleanup(req);\n            local.streamCleanup(res);\n        }, 1000);\n    };\n    // init timerTimeout\n    req.timerTimeout = local.onTimeout(\n        req.onTimeout,\n        timeout || local.timeoutDefault,\n        \"server \" + req.method + \" \" + req.url\n    );\n    res.contentLength = 0;\n    res.writeContentLength = res.writeContentLength || res.write;\n    res.write = function (chunk, encoding, callback) {\n        chunk = local.normalizeChunk(chunk);\n        res.contentLength += chunk.length;\n        res.writeContentLength(chunk, encoding, callback);\n    };\n    res.on(\"error\", onError);\n    res.on(\"finish\", onError);\n};\n\nlocal.setTimeoutOnError = function (onError, timeout, err, data) {\n/*\n * this function will after timeout has passed,\n * then call <onError>(<err>, <data>)\n */\n    if (typeof onError === \"function\") {\n        setTimeout(function () {\n            onError(err, data);\n        }, timeout);\n    }\n    return data;\n};\n\nlocal.sjclHashScryptCreate = function (password, opt) {\n/*\n * this function will create a scrypt-hash of the password\n * with given <opt> (default = $s0$10801)\n * e.g.\n * $s0$e0801$epIxT/h6HbbwHaehFnh/bw==$7H0vs\n * XlY8UxxyW/BWx/9GuY7jEvGjT71GFd6O4SZND0=\n * https://github.com/wg/scrypt\n */\n    // init opt\n    opt = (opt || \"$s0$10801\").split(\"$\");\n    // init salt\n    if (!opt[3]) {\n        opt[3] = local.sjcl.codec.base64.fromBits(\n            local.sjcl.random.randomWords(4, 0)\n        );\n    }\n    // init hash\n    opt[4] = local.sjcl.codec.base64.fromBits(\n        local.sjcl.misc.scrypt(\n            password || \"\",\n            local.sjcl.codec.base64.toBits(opt[3]),\n            Math.pow(2, parseInt(opt[2].slice(0, 1), 16)),\n            parseInt(opt[2].slice(1, 2), 16),\n            parseInt(opt[2].slice(3, 4), 16)\n        )\n    );\n    return opt.slice(0, 5).join(\"$\");\n};\n\nlocal.sjclHashScryptValidate = function (password, hash) {\n/*\n * this function will validate the password against the scrypt-hash\n * https://github.com/wg/scrypt\n */\n    return local.sjclHashScryptCreate(password, hash) === hash;\n};\n\nlocal.sjclHashSha1Create = function (data) {\n/*\n * this function will create a base64-encoded sha1 hash of the string data\n */\n    return local.sjcl.codec.base64.fromBits(local.sjcl.hash.sha1.hash(data));\n};\n\nlocal.sjclHashSha256Create = function (data) {\n/*\n * this function will create a base64-encoded sha256 hash of the string data\n */\n    return local.sjcl.codec.base64.fromBits(local.sjcl.hash.sha256.hash(data));\n};\n\nlocal.sjclHmacSha1Create = function (key, data) {\n/*\n * this function will create a base64-encoded sha1 hmac\n * from the string key and string data\n */\n    var Hmac;\n    Hmac = local.sjcl.misc.hmac;\n    return local.sjcl.codec.base64.fromBits(\n        (new Hmac(\n            local.sjcl.codec.utf8String.toBits(key),\n            local.sjcl.hash.sha1\n        )).mac(local.sjcl.codec.utf8String.toBits(data))\n    );\n};\n\nlocal.sjclHmacSha256Create = function (key, data) {\n/*\n * this function will create a base64-encoded sha256 hmac\n * from the string key and string data\n */\n    var Hmac;\n    Hmac = local.sjcl.misc.hmac;\n    return local.sjcl.codec.base64.fromBits(\n        (new Hmac(\n            local.sjcl.codec.utf8String.toBits(key),\n            local.sjcl.hash.sha256\n        )).mac(local.sjcl.codec.utf8String.toBits(data))\n    );\n};\n\nlocal.stateInit = function (opt) {\n/*\n * this function will init state <opt>\n */\n    local.objectSetOverride(local, opt, 10);\n    // init swgg\n    local.swgg.apiUpdate(local.swgg.swaggerJson);\n};\n\nlocal.streamCleanup = function (stream) {\n/*\n * this function will try to end or destroy the stream\n */\n    var err;\n    // try to end the stream\n    try {\n        stream.end();\n    } catch (errCaught) {\n        err = errCaught;\n    }\n    // if err, then try to destroy the stream\n    if (err) {\n        try {\n            stream.destroy();\n        } catch (ignore) {}\n    }\n};\n\nlocal.streamReadAll = function (stream, onError) {\n/*\n * this function will concat data from <stream>\n * and pass to <onError> when finished reading\n */\n    var chunkList;\n    chunkList = [];\n    stream.dataLength = 0;\n    // on event-data, push buffer-chunk to chunkList\n    stream.on(\"data\", function (chunk) {\n        chunk = local.normalizeChunk(chunk);\n        chunkList.push(chunk);\n        stream.dataLength += chunk.length;\n    // on event-end, pass concatenated-buffer to onError\n    }).on(\"end\", function () {\n        onError(\n            null,\n            local.isBrowser\n            ? chunkList[0]\n            : local.bufferConcat(chunkList)\n        );\n    // on event-error, pass error to onError\n    }).on(\"error\", onError);\n};\n\nlocal.stringHtmlSafe = function (text) {\n/*\n * this function will make the text html-safe\n * https://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-on-html\n */\n    return text\n    .replace((\n        /&/g\n    ), \"&amp;\")\n    .replace((\n        /\"/g\n    ), \"&quot;\")\n    .replace((\n        /'/g\n    ), \"&apos;\")\n    .replace((\n        /</g\n    ), \"&lt;\")\n    .replace((\n        />/g\n    ), \"&gt;\")\n    .replace((\n        /&amp;(amp;|apos;|gt;|lt;|quot;)/ig\n    ), \"&$1\");\n};\n\nlocal.stringMerge = function (str1, str2, rgx) {\n/*\n * this function will merge <str2> into <str1>,\n * for sections where both match <rgx>\n */\n    str2.replace(rgx, function (match2) {\n        str1.replace(rgx, function (match1) {\n            str1 = str1.replace(match1, function () {\n                return match2;\n            });\n        });\n    });\n    return str1;\n};\n\nlocal.stringQuotedToAscii = function (str) {\n/*\n * this function will replace non-ascii-chr to unicode-escaped-ascii-chr\n * in quoted-<str>\n */\n    return str\n    .replace((\n        /\\r/g\n    ), \"\\\\r\")\n    .replace((\n        /\\t/g\n    ), \"\\\\t\")\n    .replace((\n        /[^\\n\\u0020-\\u007e]/g\n    ), function (chr) {\n        return \"\\\\u\" + (\"0000\" + chr.charCodeAt(0).toString(16)).slice(-4);\n    });\n};\n\nlocal.stringRegexpEscape = function (text) {\n/*\n * this function will regexp-escape text\n * https://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n */\n    return text.replace((\n        /[\\-\\/\\\\\\^$*+?.()|\\[\\]{}]/g\n    ), \"\\\\$&\");\n};\n\nlocal.stringTruncate = function (text, maxLength) {\n/*\n * this function will truncate text to given maxLength\n */\n    return (\n        text.length > maxLength\n        ? text.slice(0, maxLength - 3).trimRight() + \"...\"\n        : text\n    );\n};\n\nlocal.stringUniqueKey = function (text) {\n/*\n * this function will return a string-key that is unique in given text\n */\n    var key;\n    // seed the key with the least frequent letters in the english-language\n    // https://en.wikipedia.org/wiki/Letter_frequency\n    key = \"zqxj\";\n    do {\n        key += ((1 + Math.random()) * 0x10000000000000).toString(36).slice(1);\n    } while (text.indexOf(key) >= 0);\n    return key;\n};\n\nlocal.taskCreate = function (opt, onTask, onError) {\n/*\n * this function will create the task onTask named <opt>.key,\n * if it does not exist, and push onError to its onErrorList\n */\n    var task;\n    // init task\n    local.taskOnTaskDict[opt.key] = (\n        local.taskOnTaskDict[opt.key]\n        || {\n            onErrorList: []\n        }\n    );\n    task = local.taskOnTaskDict[opt.key];\n    // push callback onError to the task\n    if (onError) {\n        onError = local.onErrorWithStack(onError);\n        task.onErrorList.push(onError);\n    }\n    // if task exists, then return it\n    if (!onTask || task.onTask) {\n        return task;\n    }\n    task.onDone = function (err, data, meta) {\n        // if isDone, then do nothing\n        if (task.isDone) {\n            return;\n        }\n        task.isDone = true;\n        // cleanup timerTimeout\n        clearTimeout(task.timerTimeout);\n        // cleanup task\n        delete local.taskOnTaskDict[opt.key];\n        // preserve err.message and err.stack\n        task.result = JSON.stringify([\n            (\n                (err && err.stack)\n                ? Object.assign(local.jsonCopy(err), {\n                    message: err.message,\n                    name: err.name,\n                    stack: err.stack\n                })\n                : err\n            ), data, meta\n        ]);\n        // pass result to callbacks in onErrorList\n        task.onErrorList.forEach(function (onError) {\n            onError.apply(null, JSON.parse(task.result));\n        });\n    };\n    // init timerTimeout\n    task.timerTimeout = local.onTimeout(\n        task.onDone,\n        opt.timeout || local.timeoutDefault,\n        \"taskCreate \" + opt.key\n    );\n    task.onTask = onTask;\n    // run onTask\n    task.onTask(task.onDone);\n    return task;\n};\n\nlocal.taskCreateCached = function (opt, onTask, onError) {\n/*\n * this function will\n * 1. if cache-hit, then call onError with cacheValue\n * 2. run onTask in background to update cache\n * 3. save onTask's result to cache\n * 4. if cache-miss, then call onError with onTask's result\n */\n    local.onNext(opt, function (err, data) {\n        switch (opt.modeNext) {\n        // 1. if cache-hit, then call onError with cacheValue\n        case 1:\n            // read cacheValue from memory-cache\n            local.cacheDict[opt.cacheDict] = (\n                local.cacheDict[opt.cacheDict]\n                || {}\n            );\n            opt.cacheValue = local.cacheDict[opt.cacheDict][opt.key];\n            if (opt.cacheValue) {\n                // call onError with cacheValue\n                opt.modeCacheHit = true;\n                onError(null, JSON.parse(opt.cacheValue));\n                if (!opt.modeCacheUpdate) {\n                    break;\n                }\n            }\n            // run background-task with lower priority for cache-hit\n            setTimeout(opt.onNext, opt.modeCacheHit && opt.cacheTtl);\n            break;\n        // 2. run onTask in background to update cache\n        case 2:\n            local.taskCreate(opt, onTask, opt.onNext);\n            break;\n        default:\n            // 3. save onTask's result to cache\n            // JSON.stringify data to prevent side-effects on cache\n            opt.cacheValue = JSON.stringify(data);\n            if (!err && opt.cacheValue) {\n                local.cacheDict[opt.cacheDict][opt.key] = opt.cacheValue;\n            }\n            // 4. if cache-miss, then call onError with onTask's result\n            if (!opt.modeCacheHit) {\n                onError(err, opt.cacheValue && JSON.parse(opt.cacheValue));\n            }\n            local.functionOrNop(opt.onCacheWrite)();\n        }\n    });\n    opt.modeNext = 0;\n    opt.onNext();\n};\n\nlocal.templateRender = function (template, dict, opt) {\n/*\n * this function will render the template with given dict\n */\n    var argList;\n    var getValue;\n    var match;\n    var renderPartial;\n    var rgx;\n    var skip;\n    var value;\n    dict = dict || {};\n    opt = opt || {};\n    getValue = function (key) {\n        argList = key.split(\" \");\n        value = dict;\n        if (argList[0] === \"#this/\") {\n            return;\n        }\n        // iteratively lookup nested values in the dict\n        argList[0].split(\".\").forEach(function (key) {\n            value = value && value[key];\n        });\n        return value;\n    };\n    renderPartial = function (match0, helper, key, partial) {\n        switch (helper) {\n        case \"each\":\n        case \"eachTrimRightComma\":\n            value = getValue(key);\n            value = (\n                Array.isArray(value)\n                ? value.map(function (dict) {\n                    // recurse with partial\n                    return local.templateRender(partial, dict, opt);\n                }).join(\"\")\n                : \"\"\n            );\n            // remove trailing-comma from last elem\n            if (helper === \"eachTrimRightComma\") {\n                value = value.trimRight().replace((\n                    /,$/\n                ), \"\");\n            }\n            return value;\n        case \"if\":\n            partial = partial.split(\"{{#unless \" + key + \"}}\");\n            partial = (\n                getValue(key)\n                ? partial[0]\n                // handle 'unless' case\n                : partial.slice(1).join(\"{{#unless \" + key + \"}}\")\n            );\n            // recurse with partial\n            return local.templateRender(partial, dict, opt);\n        case \"unless\":\n            return (\n                getValue(key)\n                ? \"\"\n                // recurse with partial\n                : local.templateRender(partial, dict, opt)\n            );\n        default:\n            // recurse with partial\n            return match0[0] + local.templateRender(match0.slice(1), dict, opt);\n        }\n    };\n    // render partials\n    rgx = (\n        /\\{\\{#(\\w+)\\u0020([^}]+?)\\}\\}/g\n    );\n    template = template || \"\";\n    match = rgx.exec(template);\n    while (match) {\n        rgx.lastIndex += 1 - match[0].length;\n        template = template.replace(\n            new RegExp(\n                \"\\\\{\\\\{#(\" + match[1] + \") (\" + match[2]\n                + \")\\\\}\\\\}([\\\\S\\\\s]*?)\\\\{\\\\{/\" + match[1] + \" \" + match[2]\n                + \"\\\\}\\\\}\"\n            ),\n            renderPartial\n        );\n        match = rgx.exec(template);\n    }\n    // search for keys in the template\n    return template.replace((\n        /\\{\\{[^}]+?\\}\\}/g\n    ), function (match0) {\n        var markdownToHtml;\n        var notHtmlSafe;\n        notHtmlSafe = opt.notHtmlSafe;\n        try {\n            getValue(match0.slice(2, -2));\n            if (value === undefined) {\n                return match0;\n            }\n            argList.slice(1).forEach(function (arg0, ii, list) {\n                switch (arg0) {\n                case \"alphanumeric\":\n                    value = value.replace((\n                        /\\W/g\n                    ), \"_\");\n                    break;\n                case \"decodeURIComponent\":\n                    value = decodeURIComponent(value);\n                    break;\n                case \"encodeURIComponent\":\n                    value = encodeURIComponent(value);\n                    break;\n                case \"jsonStringify\":\n                    value = JSON.stringify(value);\n                    break;\n                case \"jsonStringify4\":\n                    value = JSON.stringify(value, null, 4);\n                    break;\n                case \"markdownSafe\":\n                    value = value.replace((\n                        /`/g\n                    ), \"'\");\n                    break;\n                case \"markdownToHtml\":\n                    markdownToHtml = true;\n                    break;\n                case \"notHtmlSafe\":\n                    notHtmlSafe = true;\n                    break;\n                case \"padEnd\":\n                case \"padStart\":\n                case \"slice\":\n                    skip = ii + 2;\n                    value = String(value)[arg0](\n                        list[skip - 1],\n                        list[skip]\n                    );\n                    break;\n                case \"truncate\":\n                    skip = ii + 1;\n                    if (value.length > list[skip]) {\n                        value = value.slice(\n                            0,\n                            Math.max(list[skip] - 3, 0)\n                        ).trimRight() + \"...\";\n                    }\n                    break;\n                // default to String.prototype[arg0]()\n                default:\n                    if (ii <= skip) {\n                        break;\n                    }\n                    value = value[arg0]();\n                }\n            });\n            value = String(value);\n            // default to htmlSafe\n            if (!notHtmlSafe) {\n                value = value\n                .replace((\n                    /&/g\n                ), \"&amp;\")\n                .replace((\n                    /\"/g\n                ), \"&quot;\")\n                .replace((\n                    /'/g\n                ), \"&apos;\")\n                .replace((\n                    /</g\n                ), \"&lt;\")\n                .replace((\n                    />/g\n                ), \"&gt;\")\n                .replace((\n                    /&amp;(amp;|apos;|gt;|lt;|quot;)/ig\n                ), \"&$1\");\n            }\n            markdownToHtml = (\n                markdownToHtml\n                && (typeof local.marked === \"function\" && local.marked)\n            );\n            if (markdownToHtml) {\n                value = markdownToHtml(value)\n                .replace((\n                    /&amp;(amp;|apos;|gt;|lt;|quot;)/ig\n                ), \"&$1\");\n            }\n            return value;\n        } catch (errCaught) {\n            errCaught.message = (\n                \"templateRender could not render expression \"\n                + JSON.stringify(match0)\n                + \"\\n\"\n            ) + errCaught.message;\n            local.assertThrow(null, errCaught);\n        }\n    });\n};\n\nlocal.templateRenderMyApp = function (template, opt) {\n/*\n * this function will render my-app-lite template with given <opt>.packageJson\n */\n    opt.packageJson = local.fsReadFileOrEmptyStringSync(\"package.json\", \"json\");\n    local.objectSetDefault(opt.packageJson, {\n        nameLib: opt.packageJson.name.replace((\n            /\\W/g\n        ), \"_\"),\n        repository: {\n            url: (\n                \"https://github.com/kaizhu256/node-\"\n                + opt.packageJson.name\n                + \".git\"\n            )\n        }\n    }, 2);\n    opt.githubRepo = opt.packageJson.repository.url.replace((\n        /\\.git$/\n    ), \"\").split(\"/\").slice(-2);\n    template = template.replace((\n        /kaizhu256(\\.github\\.io\\/|%252F|\\/)/g\n    ), opt.githubRepo[0] + (\"$1\"));\n    template = template.replace((\n        /node-my-app-lite/g\n    ), opt.githubRepo[1]);\n    template = template.replace((\n        /\\bh1-my-app\\b/g\n    ), (\n        opt.packageJson.nameHeroku\n        || (\"h1-\" + opt.packageJson.nameLib.replace((\n            /_/g\n        ), \"-\"))\n    ));\n    template = template.replace((\n        /my-app-lite/g\n    ), opt.packageJson.name);\n    template = template.replace((\n        /my_app/g\n    ), opt.packageJson.nameLib);\n    template = template.replace((\n        /\\{\\{packageJson\\.(\\S+)\\}\\}/g\n    ), function (ignore, match1) {\n        return opt.packageJson[match1];\n    });\n    return template;\n};\n\nlocal.testCase_nop_default = function (opt, onError) {\n/*\n * this function will test nop's default handling-behavior\n */\n    local.nop();\n    onError(null, opt);\n};\n\nlocal.testMock = function (mockList, onTestCase, onError) {\n/*\n * this function will mock the objects in mockList while running the onTestCase\n */\n    var onError2;\n    onError2 = function (err) {\n        // restore mock[0] from mock[2]\n        mockList.reverse().forEach(function (mock) {\n            Object.keys(mock[2]).forEach(function (key) {\n                mock[0][key] = mock[2][key];\n            });\n        });\n        onError(err);\n    };\n    // suppress console.error and console.log\n    if (!(mockList[0] && mockList[0][0] === console)) {\n        mockList.unshift([\n            console, {}\n        ]);\n    }\n    local.objectSetDefault(mockList[0][1], {\n        error: local.nop,\n        log: local.nop\n    });\n    // mock-objects\n    mockList.forEach(function (mock) {\n        mock[2] = {};\n        // backup mock[0] into mock[2]\n        Object.keys(mock[1]).forEach(function (key) {\n            mock[2][key] = (\n                // ternary-operator\n                (\n                    typeof process === \"object\"\n                    && process.env === mock[0]\n                    && mock[0][key] === undefined\n                )\n                // handle process.env\n                ? \"\"\n                : mock[0][key]\n            );\n        });\n        // override mock[0] with mock[1]\n        Object.keys(mock[1]).forEach(function (key) {\n            mock[0][key] = mock[1][key];\n        });\n    });\n    // try to call onError with mock-objects\n    local.tryCatchOnError(function () {\n        // run onTestCase\n        onTestCase(onError2);\n    }, onError2);\n};\n\nlocal.testReportCreate = function (testReport) {\n/*\n * this function will create test-report artifacts\n */\n    testReport = local.objectSetDefault(testReport, {\n        testPlatformList: []\n    });\n    // print test-report summary\n    console.error(\n        \"\\n\" + new Array(56).join(\"-\")\n        + \"\\n\" + testReport.testPlatformList.filter(function (testPlatform) {\n            // if testPlatform has no tests, then filter it out\n            return testPlatform.testCaseList.length;\n        }).map(function (testPlatform) {\n            return (\n                \"| test-report - \" + testPlatform.name + \"\\n|\"\n                + (\"        \" + testPlatform.timeElapsed + \" ms     \")\n                .slice(-16)\n                + (\"        \" + testPlatform.testsFailed + \" failed \")\n                .slice(-16)\n                + (\"        \" + testPlatform.testsPassed + \" passed \")\n                .slice(-16) + \"     |\\n\" + new Array(56).join(\"-\")\n            );\n        }).join(\"\\n\") + \"\\n\"\n    );\n    // create test-report.html\n    local.fs.writeFileSync(\n        \"tmp/build/test-report.html\",\n        local.testReportMerge(testReport, {})\n    );\n    // create build.badge.svg\n    local.fs.writeFileSync(\n        \"tmp/build/build.badge.svg\",\n        local.assetsDict[\"/assets.buildBadge.template.svg\"].replace((\n            /0000-00-00\\u002000:00:00\\u0020UTC\\u0020-\\u0020master\\u0020-\\u0020aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/g\n        ), (\n            new Date().toISOString().slice(0, 19).replace(\"T\", \" \")\n            + \" - \" + local.env.CI_BRANCH + \" - \" + local.env.CI_COMMIT_ID\n        ))\n    );\n    // create test-report.badge.svg\n    local.fs.writeFileSync(\n        \"tmp/build/test-report.badge.svg\",\n        local.assetsDict[\"/assets.testReportBadge.template.svg\"]\n        // edit number of tests failed\n        .replace((\n            /999/g\n        ), testReport.testsFailed)\n        // edit badge color\n        .replace((\n            /d00/g\n        ), (\n            testReport.testsFailed\n            ? \"d00\"\n            : \"0d0\"\n        ))\n    );\n    console.error(\n        \"created test-report file \"\n        + process.cwd() + \"/tmp/build/test-report.html\\n\"\n    );\n    // if any test failed, then exit with non-zero exit-code\n    console.error(\n        \"\\n\" + local.env.MODE_BUILD\n        + \" - \" + testReport.testsFailed + \" failed tests\\n\"\n    );\n    // print failed testCase\n    testReport.testPlatformList.forEach(function (testPlatform) {\n        testPlatform.testCaseList.forEach(function (testCase) {\n            if (testCase.status !== \"passed\") {\n                console.error(JSON.stringify(testCase, null, 4));\n            }\n        });\n    });\n    return testReport;\n};\n\nlocal.testReportMerge = function (testReport1, testReport2) {\n/*\n * this function will\n * 1. merge testReport2 into testReport1\n * 2. return testReport1 in html-format\n */\n    var errorStackList;\n    var testCaseNumber;\n    var testReport;\n    testReport2 = testReport2 || {};\n    // 1. merge testReport2 into testReport1\n    [\n        testReport1, testReport2\n    ].forEach(function (testReport, ii) {\n        ii += 1;\n        local.objectSetDefault(testReport, {\n            date: new Date().toISOString(),\n            errorStackList: [],\n            testPlatformList: [],\n            timeElapsed: 0\n        }, 8);\n        // security - handle malformed testReport\n        local.assertThrow(\n            typeof testReport === \"object\" && testReport,\n            ii + \" invalid testReport \" + typeof testReport\n        );\n        // validate timeElapsed\n        local.assertThrow(\n            typeof testReport.timeElapsed === \"number\",\n            ii + \" invalid testReport.timeElapsed \"\n            + typeof testReport.timeElapsed\n        );\n        // security - handle malformed testReport.testPlatformList\n        testReport.testPlatformList.forEach(function (testPlatform) {\n            local.objectSetDefault(testPlatform, {\n                name: \"undefined\",\n                testCaseList: [],\n                timeElapsed: 0\n            }, 8);\n            local.assertThrow(\n                typeof testPlatform.name === \"string\",\n                ii + \" invalid testPlatform.name \" + typeof testPlatform.name\n            );\n            // insert $MODE_BUILD into testPlatform.name\n            if (local.env.MODE_BUILD) {\n                testPlatform.name = testPlatform.name.replace((\n                    /^(browser|node)\\b/\n                ), local.env.MODE_BUILD + \" - $1\");\n            }\n            // validate timeElapsed\n            local.assertThrow(\n                typeof testPlatform.timeElapsed === \"number\",\n                (\n                    ii + \" invalid testPlatform.timeElapsed \"\n                    + typeof testPlatform.timeElapsed\n                )\n            );\n            // security - handle malformed testPlatform.testCaseList\n            testPlatform.testCaseList.forEach(function (testCase) {\n                local.objectSetDefault(testCase, {\n                    errorStack: \"\",\n                    name: \"undefined\",\n                    timeElapsed: 0\n                }, 8);\n                local.assertThrow(\n                    typeof testCase.errorStack === \"string\",\n                    ii + \" invalid testCase.errorStack \"\n                    + typeof testCase.errorStack\n                );\n                local.assertThrow(\n                    typeof testCase.name === \"string\",\n                    ii + \" invalid testCase.name \" + typeof testCase.name\n                );\n                // validate timeElapsed\n                local.assertThrow(\n                    typeof testCase.timeElapsed === \"number\",\n                    (\n                        ii + \" invalid testCase.timeElapsed \"\n                        + typeof testCase.timeElapsed\n                    )\n                );\n            });\n        });\n    });\n    // merge testReport2.testPlatformList into testReport1.testPlatformList\n    testReport2.testPlatformList.forEach(function (testPlatform2) {\n        // add testPlatform2 to testReport1.testPlatformList\n        testReport1.testPlatformList.push(testPlatform2);\n    });\n    testReport = testReport1;\n    testReport.testsFailed = 0;\n    testReport.testsPassed = 0;\n    testReport.testsPending = 0;\n    testReport.testPlatformList.forEach(function (testPlatform) {\n        testPlatform.testsFailed = 0;\n        testPlatform.testsPassed = 0;\n        testPlatform.testsPending = 0;\n        testPlatform.testCaseList.forEach(function (testCase) {\n            switch (testCase.status) {\n            // update failed tests\n            case \"failed\":\n                testPlatform.testsFailed += 1;\n                testReport.testsFailed += 1;\n                break;\n            // update passed tests\n            case \"passed\":\n                testPlatform.testsPassed += 1;\n                testReport.testsPassed += 1;\n                break;\n            // update pending tests\n            default:\n                testPlatform.testsPending += 1;\n                testReport.testsPending += 1;\n            }\n        });\n        // update testPlatform.status\n        testPlatform.status = (\n            testPlatform.testsFailed\n            ? \"failed\"\n            : testPlatform.testsPending\n            ? \"pending\"\n            : \"passed\"\n        );\n        // sort testCaseList by status and name\n        testPlatform.testCaseList.sort(function (aa, bb) {\n            return (\n                aa.status.replace(\"passed\", \"z\") + aa.name\n                > bb.status.replace(\"passed\", \"z\") + bb.name\n                ? 1\n                : -1\n            );\n        });\n    });\n    // sort testPlatformList by status and name\n    testReport.testPlatformList.sort(function (aa, bb) {\n        return (\n            aa.status.replace(\"passed\", \"z\") + aa.name\n            > bb.status.replace(\"passed\", \"z\") + bb.name\n            ? 1\n            : -1\n        );\n    });\n    // stop testReport timer\n    if (!testReport.testsPending) {\n        local.timeElapsedPoll(testReport);\n    }\n    // 2. return testReport1 in html-format\n    // json-copy testReport that will be modified for html templating\n    testReport = local.jsonCopy(testReport1);\n    // update timeElapsed\n    local.timeElapsedPoll(testReport);\n    testReport.testPlatformList.forEach(function (testPlatform) {\n        // update testPlatform.timeElapsed\n        local.timeElapsedPoll(testPlatform);\n        testPlatform.testCaseList.forEach(function (testCase) {\n            if (!testCase.isDone) {\n                local.timeElapsedPoll(testCase);\n            }\n            testPlatform.timeElapsed = Math.max(\n                testPlatform.timeElapsed,\n                testCase.timeElapsed\n            );\n        });\n        // update testReport.timeElapsed with testPlatform.timeElapsed\n        testReport.timeElapsed = Math.max(\n            testReport.timeElapsed,\n            testPlatform.timeElapsed\n        );\n    });\n    // create html test-report\n    testCaseNumber = 0;\n    return local.templateRender(\n        local.assetsDict[\"/assets.testReport.template.html\"],\n        local.objectSetOverride(testReport, {\n            env: local.env,\n            // map testPlatformList\n            testPlatformList: testReport.testPlatformList.filter(function (\n                testPlatform\n            ) {\n                // if testPlatform has no tests, then filter it out\n                return testPlatform.testCaseList.length;\n            }).map(function (testPlatform, ii) {\n                errorStackList = [];\n                return local.objectSetOverride(testPlatform, {\n                    errorStackList,\n                    name: testPlatform.name,\n                    screenshot: testPlatform.screenshot,\n                    // map testCaseList\n                    testCaseList: testPlatform.testCaseList.map(function (\n                        testCase\n                    ) {\n                        testCaseNumber += 1;\n                        if (testCase.errorStack) {\n                            errorStackList.push({\n                                errorStack: (\n                                    testCaseNumber + \". \" + testCase.name\n                                    + \"\\n\" + testCase.errorStack\n                                )\n                            });\n                        }\n                        return local.objectSetOverride(testCase, {\n                            testCaseNumber,\n                            testReportTestStatusClass: (\n                                \"test\"\n                                + testCase.status[0].toUpperCase()\n                                + testCase.status.slice(1)\n                            )\n                        }, 8);\n                    }),\n                    preClass: (\n                        errorStackList.length\n                        ? \"\"\n                        : \"displayNone\"\n                    ),\n                    testPlatformNumber: ii + 1\n                });\n            }, 8),\n            testStatusClass: (\n                testReport.testsFailed\n                ? \"testFailed\"\n                : \"testPassed\"\n            )\n        }, 8)\n    );\n};\n\nlocal.testRunDefault = function (opt) {\n/*\n * this function will run the tests in testPlatform.testCaseList\n */\n    var processExit;\n    var testPlatform;\n    var testReport;\n    var testReportDiv1;\n    var timerInterval;\n    // run-server\n    if (!local.isBrowser) {\n        local.testRunServer(opt);\n    }\n    globalThis.utility2_modeTest = Number(\n        globalThis.utility2_modeTest\n        || opt.modeTest\n        || local.modeTest\n        || local.env.npm_config_mode_test\n    );\n    switch (globalThis.utility2_modeTest) {\n    // init\n    case 1:\n        globalThis.utility2_modeTest += 1;\n        // reset db\n        if (local.db && typeof local.db.dbReset === \"function\") {\n            local.db.dbReset(\n                globalThis.utility2_dbSeedList,\n                local.onErrorThrow\n            );\n        }\n        globalThis.utility2_onReadyAfter(function () {\n            local.testRunDefault(opt);\n        });\n        return;\n    // test-run\n    default:\n        // test-ignore\n        if (\n            globalThis.utility2_onReadyBefore.counter\n            || !globalThis.utility2_modeTest\n            || globalThis.utility2_modeTest > 2\n        ) {\n            return;\n        }\n        // test-run\n        globalThis.utility2_modeTest += 1;\n    }\n    // visual notification - testRun\n    local.ajaxProgressUpdate();\n    // mock serverLog\n    local._testRunConsoleError = local._testRunConsoleError || console.error;\n    console.error = function (arg0) {\n    /*\n     * this function will ignore serverLog-messages during test-run\n     */\n        /* istanbul ignore next */\n        if (!globalThis.__coverage__ && !(\n            /^serverLog\\u0020-\\u0020\\{/\n        ).test(arg0)) {\n            local._testRunConsoleError.apply(console, arguments); // jslint ignore:line\n        }\n    };\n    if (!local.isBrowser) {\n        // mock proces.exit\n        processExit = process.exit;\n        process.exit = local.nop;\n    }\n    // init modeTestCase\n    local.modeTestCase = (\n        local.modeTestCase\n        || local.env.npm_config_mode_test_case || \"\"\n    );\n    // init testReport\n    testReport = globalThis.utility2_testReport;\n    // init testReport timer\n    local.timeElapsedStart(testReport);\n    // init testPlatform\n    testPlatform = testReport.testPlatformList[0];\n    // init testPlatform timer\n    local.timeElapsedStart(testPlatform);\n    // reset testPlatform.testCaseList\n    testPlatform.testCaseList.length = 0;\n    // add tests into testPlatform.testCaseList\n    Object.keys(opt).forEach(function (key) {\n        // add testCase opt[key] to testPlatform.testCaseList\n        if (\n            typeof opt[key] === \"function\" && (\n                local.modeTestCase\n                ? local.modeTestCase.split(\n                    /[,\\s]/g\n                ).indexOf(key) >= 0\n                : key.indexOf(\"testCase_\") === 0\n            )\n        ) {\n            testPlatform.testCaseList.push({\n                isBrowser: local.isBrowser,\n                name: key,\n                status: \"pending\",\n                onTestCase: opt[key]\n            });\n        }\n    });\n    // visual notification - update test-progress until isDone\n    // init testReportDiv1 elem\n    if (local.isBrowser) {\n        testReportDiv1 = document.querySelector(\n            \"#testReportDiv1\"\n        );\n    }\n    testReportDiv1 = testReportDiv1 || {\n        style: {}\n    };\n    local.uiAnimateSlideDown(testReportDiv1);\n    testReportDiv1.innerHTML = local.testReportMerge(testReport, {});\n    // update test-report status every 1000 ms until isDone\n    timerInterval = setInterval(function () {\n        // update testPlatform.timeElapsed\n        local.timeElapsedPoll(testPlatform);\n        // update testReportDiv1 in browser\n        testReportDiv1.innerHTML = local.testReportMerge(testReport, {});\n        if (!testReport.testsPending) {\n            // cleanup timerInterval\n            clearInterval(timerInterval);\n        }\n        // notify of remaining tests\n        if (testPlatform.timeElapsed % 5000 < 1000) {\n            local._testRunConsoleError(\n                \"testRunDefault - \"\n                + testPlatform.timeElapsed + \" ms - testCase pending - \"\n                + testPlatform.testCaseList\n                .filter(function (testCase) {\n                    return testCase.status === \"pending\";\n                })\n                .slice(0, 4)\n                .map(function (testCase) {\n                    return testCase.name;\n                }).join(\", \") + \" ...\"\n            );\n        }\n    }, 1000);\n    // shallow-copy testPlatform.testCaseList to prevent side-effects\n    // from in-place sort from testReportMerge\n    local.onParallelList({\n        list: testPlatform.testCaseList.slice(),\n        rateLimit: Infinity\n    }, function (testCase, onParallel) {\n        var onError;\n        var timerTimeout;\n        onError = function (err) {\n            // update testPlatform.timeElapsed\n            local.timeElapsedPoll(testPlatform);\n            // cleanup timerTimeout\n            clearTimeout(timerTimeout);\n            // if testCase isDone, then fail testCase\n            if (testCase.isDone) {\n                err = err || new Error(\n                    \"callback in testCase \"\n                    + testCase.name\n                    + \" called multiple times\"\n                );\n            }\n            // if err occurred, then fail testCase\n            if (err) {\n                // restore console.log\n                console.error = local._testRunConsoleError;\n                testCase.status = \"failed\";\n                local._testRunConsoleError(\n                    \"\\ntestRunDefault - \"\n                    + testPlatform.timeElapsed + \" ms - testCase failed - \"\n                    + testCase.name + \"\\n\" + err.message + \"\\n\" + err.stack\n                );\n                testCase.errorStack = (\n                    testCase.errorStack || err.message + \"\\n\" + err.stack\n                );\n                // validate errorStack is non-empty\n                local.assertThrow(\n                    testCase.errorStack,\n                    \"invalid errorStack \" + testCase.errorStack\n                );\n            }\n            // if tests isDone, then do nothing\n            if (testCase.isDone) {\n                return;\n            }\n            testCase.isDone = true;\n            if (testCase.status === \"pending\") {\n                testCase.status = \"passed\";\n            }\n            // stop testCase timer\n            local.timeElapsedPoll(testCase);\n            local._testRunConsoleError(\n                \"testRunDefault - \"\n                + testPlatform.timeElapsed + \" ms - [\" + (\n                    local.isBrowser\n                    ? \"browser\"\n                    : \"node\"\n                ) + \" test-case \"\n                + testPlatform.testCaseList.filter(function (testCase) {\n                    return testCase.isDone;\n                }).length + \" of \" + testPlatform.testCaseList.length + \" \"\n                + testCase.status + \"] - \" + testCase.name\n            );\n            // if all testCase.isDone, then create test-report\n            onParallel();\n        };\n        testCase = testCase.elem;\n        // init timerTimeout\n        timerTimeout = local.onTimeout(\n            onError,\n            local.timeoutDefault,\n            testCase.name\n        );\n        // increment number of tests remaining\n        onParallel.counter += 1;\n        // try to run testCase\n        local.tryCatchOnError(function () {\n            // start testCase timer\n            local.timeElapsedStart(testCase);\n            testCase.onTestCase(null, onError);\n        }, onError);\n    }, function () {\n    /*\n     * this function will create the test-report after all tests isDone\n     */\n        // update testPlatform.timeElapsed\n        local.timeElapsedPoll(testPlatform);\n        globalThis.utility2_modeTest = 1;\n        local.ajaxProgressUpdate();\n        // init domOnEventWindowOnloadTimeElapsed\n        if (globalThis.domOnEventWindowOnloadTimeElapsed < 0x10000000000) {\n            testPlatform.domOnEventWindowOnloadTimeElapsed = (\n                globalThis.domOnEventWindowOnloadTimeElapsed\n            );\n        }\n        // finalize testReport\n        local.testReportMerge(testReport, {});\n        // create test-report.json\n        delete testReport.coverage;\n        local.fsWriteFileWithMkdirpSync(\n            local.env.npm_config_dir_build + \"/test-report.json\",\n            JSON.stringify(testReport, null, 4)\n        );\n        setTimeout(function () {\n            // restore console.log\n            console.error = local._testRunConsoleError;\n            // restore process.exit\n            if (processExit) {\n                process.exit = processExit;\n            }\n            // reset utility2_modeTest\n            globalThis.utility2_modeTest = 0;\n            // exit with number of tests failed\n            local.exit(testReport.testsFailed, testReport);\n        // coverage-hack - wait 1000 ms for timerInterval\n        }, 1000);\n    });\n};\n\nlocal.testRunServer = function (opt) {\n/*\n * this function will\n * 1. create server from local.middlewareList\n * 2. start server on local.env.PORT\n * 3. run tests\n */\n    if (globalThis.utility2_serverHttp1) {\n        return;\n    }\n    globalThis.utility2_onReadyBefore.counter += 1;\n    // 1. create server from local.middlewareList\n    local.middlewareList = local.middlewareList || [\n        local.middlewareInit,\n        local.middlewareForwardProxy,\n        local.middlewareAssetsCached,\n        local.middlewareJsonpStateInit,\n        local.middlewareFileServer\n    ];\n    local.serverLocalReqHandler = function (req, res) {\n        var that;\n        that = {};\n        local.onNext(that, function (err) {\n            if (err || that.modeNext >= local.middlewareList.length) {\n                local.middlewareError(err, req, res);\n                return;\n            }\n            // recurse with next middleware in middlewareList\n            local.middlewareList[that.modeNext](req, res, that.onNext);\n        });\n        that.modeNext = -1;\n        that.onNext();\n    };\n    globalThis.utility2_serverHttp1 = local.http.createServer(\n        local.serverLocalReqHandler\n    );\n    // 2. start server on local.env.PORT\n    if (local.env.npm_config_mode_library) {\n        globalThis.utility2_onReadyBefore();\n        return;\n    }\n    console.error(\"http-server listening on port \" + local.env.PORT);\n    globalThis.utility2_onReadyBefore.counter += 1;\n    globalThis.utility2_serverHttp1.listen(\n        local.env.PORT,\n        globalThis.utility2_onReadyBefore\n    );\n    // 3. run tests\n    local.testRunDefault(opt);\n    globalThis.utility2_onReadyBefore();\n};\n\nlocal.throwError = function () {\n/*\n * this function will throw new err\n */\n    throw new Error();\n};\n\nlocal.timeElapsedPoll = function (opt) {\n/*\n * this function will poll <opt>.timeElapsed\n */\n    opt = local.timeElapsedStart(opt);\n    opt.timeElapsed = Date.now() - opt.timeStart;\n    return opt;\n};\n\nlocal.timeElapsedStart = function (opt, timeStart) {\n/*\n * this function will start <opt>.timeElapsed\n */\n    opt = opt || {};\n    opt.timeStart = timeStart || opt.timeStart || Date.now();\n    return opt;\n};\n\nlocal.tryCatchOnError = function (fnc, onError) {\n/*\n * this function will run the fnc in a tryCatch block,\n * else call onError with errCaught\n */\n    var result;\n    // validate onError\n    local.assertThrow(typeof onError === \"function\", typeof onError);\n    try {\n        // reset errCaught\n        local._debugTryCatchError = null;\n        result = fnc();\n        local._debugTryCatchError = null;\n        return result;\n    } catch (errCaught) {\n        // debug errCaught\n        local._debugTryCatchError = errCaught;\n        return onError(errCaught);\n    }\n};\n\nlocal.uiAnimateShake = function (elem, onError) {\n/*\n * this function will shake dom-<elem>\n */\n    if (!elem || elem.classList.contains(\"uiAnimateShake\")) {\n        local.setTimeoutOnError(onError);\n        return;\n    }\n    elem.classList.add(\"uiAnimateShake\");\n    setTimeout(function () {\n        elem.classList.remove(\"uiAnimateShake\");\n        local.setTimeoutOnError(onError);\n    }, 500);\n};\n\nlocal.uiAnimateShakeIfError = function (err, elem, onError) {\n/*\n * this function will shake dom-<elem> if <err> occurred\n */\n    var hasError;\n    if (!elem) {\n        local.setTimeoutOnError(onError);\n        return;\n    }\n    hasError = elem.classList.contains(\"hasError\");\n    if (err && !hasError) {\n        elem.classList.add(\"hasError\");\n        local.uiAnimateShake(elem, onError);\n        return;\n    }\n    if (!err && hasError) {\n        elem.classList.remove(\"hasError\");\n    }\n    local.setTimeoutOnError(onError);\n};\n\nlocal.uiAnimateSlideAccordian = function (elem, elemList, onError) {\n/*\n * this function will slideDown <elem>, but slideUp elements in <elemList>\n */\n    elemList.forEach(function (elem2) {\n        if (elem2 !== elem) {\n            local.uiAnimateSlideUp(elem2);\n        }\n    });\n    setTimeout(function () {\n        local.uiAnimateSlideDown(elem, onError);\n    }, 250);\n};\n\nlocal.uiAnimateSlideDown = function (elem, onError) {\n/*\n * this function will slideDown dom-<elem>\n */\n    onError = onError || local.nop;\n    if (!(\n        elem\n        && elem.style && elem.style.maxHeight !== \"100%\"\n        && elem.classList && elem.classList.contains(\"uiAnimateSlide\")\n    )) {\n        onError();\n        return;\n    }\n    elem.style.borderBottom = \"\";\n    elem.style.borderTop = \"\";\n    elem.style.marginBottom = \"\";\n    elem.style.marginTop = \"\";\n    elem.style.maxHeight = 1.5 * globalThis.innerHeight + \"px\";\n    elem.style.paddingBottom = \"\";\n    elem.style.paddingTop = \"\";\n    setTimeout(function () {\n        elem.style.maxHeight = \"100%\";\n        onError();\n    }, 250);\n};\n\nlocal.uiAnimateSlideUp = function (elem, onError) {\n/*\n * this function will slideUp dom-<elem>\n */\n    if (!(\n        elem\n        && elem.style && elem.style.maxHeight !== \"0px\"\n        && elem.classList && elem.classList.contains(\"uiAnimateSlide\")\n    )) {\n        local.setTimeoutOnError(onError);\n        return;\n    }\n    elem.style.borderBottom = \"0\";\n    elem.style.borderTop = \"0\";\n    elem.style.marginBottom = \"0\";\n    elem.style.marginTop = \"0\";\n    elem.style.maxHeight = \"0\";\n    elem.style.paddingBottom = \"0\";\n    elem.style.paddingTop = \"0\";\n    local.setTimeoutOnError(onError, 250);\n};\n\nlocal.urlJoin = function (aa, bb) {\n/*\n * this function will if bb is relative, url-join aa with bb\n */\n    // bb is absolute-url\n    if ((\n        /^\\w+?:\\/\\//\n    ).test(bb)) {\n        return bb;\n    }\n    // bb is absolute-url without protocol\n    if (bb.slice(0, 2) === \"//\") {\n        return aa.split(\"/\")[0] + bb;\n    }\n    // bb is absolute-url without host\n    if (bb[0] === \"/\") {\n        return aa.split(\"/\").slice(0, 3).join(\"/\") + bb;\n    }\n    // bb is relative-url\n    if (aa.split(\"/\").length < 4) {\n        aa += \"/\";\n    }\n    return aa.replace((\n        /[?#].*?$/\n    ), \"\").replace((\n        /[^\\/]*?$/\n    ), \"\") + bb;\n};\n\nlocal.urlParse = function (url) {\n/*\n * this function will parse <url> according to below spec, plus a query param\n * https://developer.mozilla.org/en-US/docs/Web/API/URL\n */\n    var urlParsed;\n    urlParsed = {};\n    // try to parse url\n    local.tryCatchOnError(function () {\n        // resolve host-less url\n        if (local.isBrowser) {\n            local.serverLocalHost = (\n                local.serverLocalHost\n                || location.protocol + \"//\" + location.host\n            );\n            // resolve absolute path\n            if (url[0] === \"/\") {\n                url = local.serverLocalHost + url;\n            // resolve relative path\n            } else if (!(\n                /^\\w+?:\\/\\//\n            ).test(url)) {\n                url = (\n                    local.serverLocalHost\n                    + location.pathname.replace((\n                        /\\/[^\\/]*?$/\n                    ), \"\") + \"/\" + url\n                );\n            }\n            urlParsed = new globalThis.URL(url);\n            urlParsed.path = \"/\" + urlParsed.href\n            .split(\"/\")\n            .slice(3)\n            .join(\"/\")\n            .split(\"#\")[0];\n        } else {\n            local.env.PORT = local.env.PORT || \"8081\";\n            local.serverLocalHost = (\n                local.serverLocalHost\n                || (\"http://127.0.0.1:\" + local.env.PORT)\n            );\n            // resolve absolute path\n            if (url[0] === \"/\") {\n                url = local.serverLocalHost + url;\n            // resolve relative path\n            } else if (!(\n                /^\\w+?:\\/\\//\n            ).test(url)) {\n                url = local.serverLocalHost + \"/\" + url;\n            }\n            urlParsed = local.url.parse(url);\n        }\n        // init query\n        urlParsed.query = {};\n        (urlParsed.search || \"\").slice(1).replace((\n            /[^&]+/g\n        ), function (item) {\n            item = item.split(\"=\");\n            item[0] = decodeURIComponent(item[0]);\n            item[1] = decodeURIComponent(item.slice(1).join(\"=\"));\n            // parse repeating query-param as an array\n            if (urlParsed.query[item[0]]) {\n                if (!Array.isArray(urlParsed.query[item[0]])) {\n                    urlParsed.query[item[0]] = [\n                        urlParsed.query[item[0]]\n                    ];\n                }\n                urlParsed.query[item[0]].push(item[1]);\n            } else {\n                urlParsed.query[item[0]] = item[1];\n            }\n        });\n        urlParsed.basename = urlParsed.pathname.replace((\n            /^.*\\//\n        ), \"\");\n    }, local.nop);\n    // https://developer.mozilla.org/en/docs/Web/API/URL#Properties\n    return {\n        basename: urlParsed.basename || \"\",\n        hash: urlParsed.hash || \"\",\n        host: urlParsed.host || \"\",\n        hostname: urlParsed.hostname || \"\",\n        href: urlParsed.href || \"\",\n        path: urlParsed.path || \"\",\n        pathname: urlParsed.pathname || \"\",\n        port: urlParsed.port || \"\",\n        protocol: urlParsed.protocol || \"\",\n        query: urlParsed.query || {},\n        search: urlParsed.search || \"\"\n    };\n};\n\nlocal.uuid4Create = function () {\n/*\n * this function will create a random uuid,\n * with format 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n */\n    // code derived from http://jsperf.com/uuid4\n    var id;\n    var ii;\n    id = \"\";\n    ii = 0;\n    while (ii < 32) {\n        switch (ii) {\n        case 8:\n        case 20:\n            id += \"-\";\n            // coerce to finite integer\n            id += ((Math.random() * 16) | 0).toString(16);\n            break;\n        case 12:\n            id += \"-\";\n            id += \"4\";\n            break;\n        case 16:\n            id += \"-\";\n            id += ((Math.random() * 4) | 8).toString(16);\n            break;\n        default:\n            // coerce to finite integer\n            id += ((Math.random() * 16) | 0).toString(16);\n        }\n        ii += 1;\n    }\n    return id;\n};\n}());\n\n\n\n// run shared js-env code - init-after\n(function () {\nlocal.apidocCreate = local.apidoc.apidocCreate;\nlocal.browserTest({\nmodeTestReportCreate: true\n});\nlocal.cacheDict = {};\nlocal.contentTypeDict = {\n    // application\n    \".js\": \"application/javascript; charset=utf-8\",\n    \".json\": \"application/json; charset=utf-8\",\n    \".pdf\": \"application/pdf\",\n    \".xml\": \"application/xml; charset=utf-8\",\n    // image\n    \".bmp\": \"image/bmp\",\n    \".gif\": \"image/gif\",\n    \".jpeg\": \"image/jpeg\",\n    \".jpg\": \"image/jpeg\",\n    \".png\": \"image/png\",\n    \".svg\": \"image/svg+xml; charset=utf-8\",\n    // text\n    \".css\": \"text/css; charset=utf-8\",\n    \".htm\": \"text/html; charset=utf-8\",\n    \".html\": \"text/html; charset=utf-8\",\n    \".md\": \"text/markdown; charset=utf-8\",\n    \".txt\": \"text/plain; charset=utf-8\"\n};\n// init env\nlocal.env = (\n    local.isBrowser\n    ? {}\n    : process.env\n);\nlocal.objectSetDefault(local.env, {\n    npm_package_nameLib: (local.env.npm_package_name || \"\").replace((\n        /\\W/g\n    ), \"_\")\n});\nlocal.objectSetDefault(local.env, {\n    npm_package_description: \"the greatest app in the world!\",\n    npm_package_name: \"my-app-lite\",\n    npm_package_nameLib: \"my_app\",\n    npm_package_version: \"0.0.1\"\n});\nlocal.errDefault = new Error(\"default-error\");\nglobalThis.utility2_onReadyAfter = (\n    globalThis.utility2_onReadyAfter || function (onError) {\n    /*\n     * this function will call onError when utility2_onReadyBefore.counter === 0\n     */\n        globalThis.utility2_onReadyBefore.counter += 1;\n        local.taskCreate({\n            key: \"globalThis.utility2_onReadyAfter\"\n        }, null, onError);\n        setTimeout(globalThis.utility2_onReadyBefore);\n        return onError;\n    }\n);\nglobalThis.utility2_onReadyBefore = (\n    globalThis.utility2_onReadyBefore\n    || local.onParallel(function (err) {\n    /*\n     * this function will keep track of utility2_onReadyBefore.counter\n     */\n        local.taskCreate({\n            key: \"globalThis.utility2_onReadyAfter\"\n        }, function (onError) {\n            onError(err);\n        }, local.onErrorThrow);\n    })\n);\nlocal.istanbulCoverageMerge = local.istanbul.coverageMerge || local.identity;\n// cbranch-no cstat-no fstat-no missing-if-branch\nlocal.istanbulCoverageReportCreate = (\n    local.istanbul.coverageReportCreate || local.identity\n);\nlocal.istanbulInstrumentInPackage = (\n    local.istanbul.instrumentInPackage || local.identity\n);\nlocal.istanbulInstrumentSync = local.istanbul.instrumentSync || local.identity;\nlocal.jslintAndPrint = local.jslint.jslintAndPrint || local.identity;\nlocal.regexpCharsetEncodeUri = (\n    /\\w!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/:;=\\?@~/\n);\nlocal.regexpCharsetEncodeUriComponent = (\n    /\\w!%'\\(\\)\\*\\-\\.~/\n);\n// https://github.com/chjj/marked/blob/v0.3.7/lib/marked.js#L499\nlocal.regexpMatchUrl = (\n    /\\bhttps?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s]/\n);\n// https://www.w3.org/TR/html5/sec-forms.html#email-state-typeemail\nlocal.regexpValidateEmail = (\n    /^[a-zA-Z0-9.!#$%&'*+\\/=?\\^_`{|}~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)*$/\n);\n// https://en.wikipedia.org/wiki/E.164\nlocal.regexpValidatePhone = (\n    /^(?:\\+\\d{1,3}[\\u0020\\-]?)?(?:\\(\\d{1,4}\\)[\\u0020\\-]?)?\\d[\\d\\u0020\\-]{7,17}$/\n);\nlocal.regexpValidateUuid = (\n    /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/\n);\nlocal.stringCharsetAscii = (\n    \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\"\n    + \"\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\"\n    + \"\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\"\n    + \"\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f\"\n    + \" !\\\"#$%&'()*+,-./0123456789:;<=>?\"\n    + \"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\"\n    + \"`abcdefghijklmnopqrstuvwxyz{|}~\\u007f\"\n);\nlocal.stringCharsetEncodeUri = (\n    \"!#$%&'()*+,-./\"\n    + \"0123456789:;=?@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~\"\n);\nlocal.stringCharsetEncodeUriComponent = (\n    \"!%'()*-.\"\n    + \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~\"\n);\nlocal.stringHelloEmoji = \"hello \\ud83d\\ude01\\n\";\n// mock swgg\nlocal.swgg = local.swgg || {\n    apiUpdate: local.nop,\n    normalizeSwaggerJson: local.nop,\n    swaggerValidate: local.nop\n};\nlocal.taskOnTaskDict = {};\n// init serverLocalHost\nlocal.urlParse(\"\");\n// init timeoutDefault\nif (local.isBrowser) {\n    location.search.replace((\n        /\\b(NODE_ENV|mode[A-Z]\\w+|timeExit|timeoutDefault)=([^&#]+)/g\n    ), function (match0, key, value) {\n        local[key] = decodeURIComponent(value);\n        local.env[key] = local[key];\n        // try to JSON.parse the string\n        local.tryCatchOnError(function () {\n            local[key] = JSON.parse(match0);\n        }, local.nop);\n    });\n} else {\n    local.timeoutDefault = local.env.npm_config_timeout_default;\n}\n// init timeExit\nlocal.timeExit = (\n    Number(local.env.npm_config_time_exit) || local.timeExit\n    || Number(Date.now() + Number(local.env.npm_config_timeout_exit))\n);\nif (local.timeExit) {\n    local.timeoutDefault = local.timeExit - Date.now();\n    setTimeout(local.exit, local.timeoutDefault);\n}\n// re-init timeoutDefault\nlocal.timeoutDefault = Number(local.timeoutDefault) || 30000;\nglobalThis.utility2_onReadyAfter(local.nop);\n}());\n\n\n\n// run browser js-env code - init-after\n(function () {\nif (!local.isBrowser) {\n    return;\n}\n// require modules\nlocal.http = local._http;\nlocal.https = local._http;\n}());\n\n\n\n/* istanbul ignore next */\n// run node js-env code - init-after\n(function () {\nif (local.isBrowser) {\n    return;\n}\nlocal.Module = require(\"module\");\n// init env\nlocal.objectAssignDefault(local.env, {\n    npm_config_dir_build: process.cwd() + \"/tmp/build\",\n    npm_config_dir_tmp: process.cwd() + \"/tmp\"\n});\n// merge previous test-report\nif (local.env.npm_config_file_test_report_merge) {\n    local.testReportMerge(\n        globalThis.utility2_testReport,\n        local.fsReadFileOrEmptyStringSync(\n            local.env.npm_config_file_test_report_merge,\n            \"json\"\n        )\n    );\n    if (process.argv[2] !== \"--help\") {\n        console.error(\n            \"\\n\" + local.env.MODE_BUILD + \" - merged test-report from file \"\n            + local.env.npm_config_file_test_report_merge\n        );\n    }\n}\n// init cli\nif (module === require.main && (!globalThis.utility2_rollup || (\n    process.argv[2]\n    && local.cliDict[process.argv[2]]\n    && process.argv[2].indexOf(\"utility2.\") === 0\n))) {\n    local.cliRun({}, local.nop);\n    if (local.cliDict[process.argv[2]]) {\n        local.cliDict[process.argv[2]]();\n        switch (process.argv[2]) {\n        case \"--interactive\":\n        case \"-i\":\n        case \"utility2.swaggerValidateFile\":\n        case \"utility2.start\":\n            break;\n        default:\n            return;\n        }\n    }\n}\n/* validateLineSortedReset */\n// override assets\n[\n    \"/assets.index.template.html\",\n    \"/assets.swgg.swagger.json\",\n    \"/assets.swgg.swagger.server.json\"\n].forEach(function (file) {\n    local.assetsDict[file] = local.assetsDict[file] || \"\";\n    if (process.argv[2] !== \"--help\" && local.fs.existsSync(__dirname + file)) {\n        console.error(\"override assets \" + __dirname + file);\n        local.assetsDict[file] = local.fs.readFileSync(\n            __dirname + file,\n            \"utf8\"\n        );\n    }\n});\nif (globalThis.utility2_rollup) {\n    local.assetsDict[\"/assets.utility2.rollup.js\"] = (\n        local.fs.readFileSync(\n            __filename,\n            \"utf8\"\n        ).split(\"\\n/* script-end /assets.utility2.rollup.end.js */\")[0]\n        + \"\\n/* script-end /assets.utility2.rollup.end.js */\\n\"\n    );\n    return;\n}\n// init assets\n[\n    \"/assets.utility2.example.js\",\n    \"/assets.utility2.html\",\n    \"/assets.utility2.test.js\",\n    \"lib.apidoc.js\",\n    \"lib.db.js\",\n    \"lib.github_crud.js\",\n    \"lib.istanbul.js\",\n    \"lib.jslint.js\",\n    \"lib.marked.js\",\n    \"lib.sjcl.js\",\n    \"lib.swgg.js\",\n    \"lib.utility2.js\",\n    \"test.js\"\n].forEach(function (key) {\n    switch (key) {\n    case \"/assets.utility2.example.js\":\n        local.assetsDict[key] = \"\";\n        local.tryCatchOnError(function () {\n            local.fs.readFileSync(\n                __dirname + \"/README.md\",\n                \"utf8\"\n            ).replace((\n                /```javascript([\\S\\s]*?)```/\n            ), function (ignore, match1) {\n                local.assetsDict[key] = match1.trim() + \"\\n\";\n            });\n        }, local.nop);\n        break;\n    case \"/assets.utility2.html\":\n        local.assetsDict[key] = \"\";\n        local.tryCatchOnError(function () {\n            local.fs.readFileSync(__dirname + \"/README.md\", \"utf8\").replace((\n                /<!doctype\\u0020html>[\\S\\s]*?<\\/html>\\\\n\\\\\\n/\n            ), function (match0) {\n                local.assetsDict[key] = (\n                    local.templateRender(match0\n                    .replace((\n                        /\\\\n\\\\$/gm\n                    ), \"\")\n                    .replace(\n                        \"<script src=\\\"assets.app.js\\\"></script>\\n\",\n                        (\n                            \"<script \"\n                            + \"src=\\\"assets.utility2.rollup.js\\\"></script>\\n\"\n                            + \"<script \"\n                            + \"src=\\\"assets.utility2.example.js\\\"></script>\\n\"\n                            + \"<script \"\n                            + \"src=\\\"assets.utility2.test.js\\\"></script>\\n\"\n                        )\n                    )\n                    .replace(\"assets.example.js\", \"assets.utility2.example.js\")\n                    .replace(\"assets.test.js\", \"assets.utility2.test.js\")\n                    .replace((\n                        /npm_package_/g\n                    ), \"\")\n                    // uncomment utility2-comment\n                    .replace((\n                        /<!--\\u0020utility2-comment\\b([\\S\\s]*?)\\butility2-comment\\u0020-->/g\n                    ), \"$1\"), {\n                        env: local.objectSetDefault({\n                            version: \"0.0.1\"\n                        }, require(__dirname + \"/package.json\")),\n                        isRollup: true\n                    })\n                );\n            });\n        }, local.nop);\n        break;\n    case \"/assets.utility2.test.js\":\n        local.assetsDict[key] = local.fsReadFileOrEmptyStringSync(\n            __dirname + \"/test.js\",\n            \"utf8\"\n        );\n        break;\n    case \"lib.swgg.js\":\n    case \"lib.utility2.js\":\n        key = key.replace(\"lib.\", \"\");\n        local.assetsDict[\"/assets.\" + key] = local.fsReadFileOrEmptyStringSync(\n            __dirname + \"/lib.\" + key,\n            \"utf8\"\n        ).replace((\n            /^#!\\//\n        ), \"// \");\n        break;\n    default:\n        local.assetsDict[\"/assets.utility2.\" + key] = (\n            local.fsReadFileOrEmptyStringSync(\n                __dirname + \"/\" + key,\n                \"utf8\"\n            ).replace((\n                /^#!\\//\n            ), \"// \")\n        );\n    }\n});\nlocal.assetsDict[\"/assets.utility2.rollup.js\"] = [\n    \"header\",\n    \"/assets.utility2.rollup.begin.js\",\n    \"lib.apidoc.js\",\n    \"lib.db.js\",\n    \"lib.github_crud.js\",\n    \"lib.istanbul.js\",\n    \"lib.jslint.js\",\n    \"lib.marked.js\",\n    \"lib.sjcl.js\",\n    \"lib.utility2.js\",\n    \"lib.swgg.js\",\n    \"/assets.utility2.example.js\",\n    \"/assets.utility2.html\",\n    \"/assets.utility2.test.js\",\n    \"/assets.utility2.rollup.end.js\"\n].map(function (key) {\n    var script;\n    switch (key) {\n    case \"/assets.utility2.example.js\":\n    case \"/assets.utility2.html\":\n    case \"/assets.utility2.test.js\":\n        // handle large string-replace\n        script = local.assetsDict[\"/assets.utility2.rollup.content.js\"]\n        .split(\"/* utility2.rollup.js content */\");\n        script.splice(1, 0, (\n            \"local.assetsDict[\\\"\" + key + \"\\\"] = \"\n            + JSON.stringify(local.assetsDict[key])\n        ).replace((\n            /\\\\\\\\/g\n        ), \"\\u0000\").replace((\n            /\\\\n/g\n        ), \"\\\\n\\\\\\n\").replace((\n            /\\u0000/g\n        ), \"\\\\\\\\\"));\n        script = script.join(\"\");\n        script += \"\\n\";\n        break;\n    case \"/assets.utility2.rollup.begin.js\":\n    case \"/assets.utility2.rollup.end.js\":\n        script = local.assetsDict[key];\n        break;\n    case \"header\":\n        return (\n            \"/* this rollup was created with utility2\\n\"\n            + \" * https://github.com/kaizhu256/node-utility2\\n\"\n            + \" */\\n\"\n        );\n    case \"lib.swgg.js\":\n    case \"lib.utility2.js\":\n        key = \"/assets.\" + key.replace(\"lib.\", \"\");\n        script = local.assetsDict[key];\n        break;\n    default:\n        key = \"/assets.utility2.\" + key;\n        script = local.assetsDict[key];\n    }\n    return (\n        \"/* script-begin \" + key + \" */\\n\"\n        + script.trim()\n        + \"\\n/* script-end \" + key + \" */\\n\"\n    );\n}).join(\"\\n\\n\\n\");\n// init lib dependents\n[\n    \"swgg\"\n].forEach(function (lib) {\n    var file;\n    file = __dirname + \"/lib.\" + lib + \".js\";\n    if (local.fs.existsSync(file)) {\n        local[lib] = require(file);\n    }\n});\n}());\n\n\n\n}());\n","/home/travis/build/kaizhu256/node-utility2/example.js":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nexample.js\n\nthis script will demo automated browser-tests with coverage (via electron and istanbul)\n\ninstruction\n    1. save this script as example.js\n    2. run the shell-command:\n        $ npm install utility2 electron-lite && \\\n            PATH=\"$(pwd)/node_modules/.bin:$PATH\" \\\n            PORT=8081 \\\n            npm_config_mode_coverage=utility2 \\\n            node_modules/.bin/utility2 test example.js\n    3. view test-report in ./tmp/build/test-report.html\n    4. view coverage in ./tmp/build/coverage.html/index.html\n*/\n\n\n\n/* istanbul instrument in package utility2 */\n/* istanbul ignore next */\n/* jslint utility2:true */\n(function (globalThis) {\n    \"use strict\";\n    var consoleError;\n    var local;\n    // init globalThis\n    (function () {\n        try {\n            globalThis = Function(\"return this\")(); // jslint ignore:line\n        } catch (ignore) {}\n    }());\n    globalThis.globalThis = globalThis;\n    // init debug_inline\n    if (!globalThis[\"debug\\u0049nline\"]) {\n        consoleError = console.error;\n        globalThis[\"debug\\u0049nline\"] = function () {\n        /*\n         * this function will both print <arguments> to stderr\n         * and return <arguments>[0]\n         */\n            var argList;\n            argList = Array.from(arguments); // jslint ignore:line\n            // debug arguments\n            globalThis[\"debug\\u0049nlineArguments\"] = argList;\n            consoleError(\"\\n\\ndebug\\u0049nline\");\n            consoleError.apply(console, argList);\n            consoleError(\"\\n\");\n            // return arg0 for inspection\n            return argList[0];\n        };\n    }\n    // init local\n    local = {};\n    local.local = local;\n    globalThis.globalLocal = local;\n    // init isBrowser\n    local.isBrowser = (\n        typeof window === \"object\"\n        && window === globalThis\n        && typeof window.XMLHttpRequest === \"function\"\n        && window.document\n        && typeof window.document.querySelector === \"function\"\n    );\n    // init function\n    local.assertThrow = function (passed, message) {\n    /*\n     * this function will throw err.<message> if <passed> is falsy\n     */\n        var err;\n        if (passed) {\n            return;\n        }\n        err = (\n            // ternary-operator\n            (\n                message\n                && typeof message.message === \"string\"\n                && typeof message.stack === \"string\"\n            )\n            // if message is errObj, then leave as is\n            ? message\n            : new Error(\n                typeof message === \"string\"\n                // if message is a string, then leave as is\n                ? message\n                // else JSON.stringify message\n                : JSON.stringify(message, null, 4)\n            )\n        );\n        throw err;\n    };\n    local.functionOrNop = function (fnc) {\n    /*\n     * this function will if <fnc> exists,\n     * them return <fnc>,\n     * else return <nop>\n     */\n        return fnc || local.nop;\n    };\n    local.identity = function (value) {\n    /*\n     * this function will return <value>\n     */\n        return value;\n    };\n    local.nop = function () {\n    /*\n     * this function will do nothing\n     */\n        return;\n    };\n    local.objectAssignDefault = function (target, source) {\n    /*\n     * this function will if items from <target> are\n     * null, undefined, or empty-string,\n     * then overwrite them with items from <source>\n     */\n        target = target || {};\n        Object.keys(source || {}).forEach(function (key) {\n            if (\n                target[key] === null\n                || target[key] === undefined\n                || target[key] === \"\"\n            ) {\n                target[key] = target[key] || source[key];\n            }\n        });\n        return target;\n    };\n    // require builtin\n    if (!local.isBrowser) {\n        local.assert = require(\"assert\");\n        local.buffer = require(\"buffer\");\n        local.child_process = require(\"child_process\");\n        local.cluster = require(\"cluster\");\n        local.crypto = require(\"crypto\");\n        local.dgram = require(\"dgram\");\n        local.dns = require(\"dns\");\n        local.domain = require(\"domain\");\n        local.events = require(\"events\");\n        local.fs = require(\"fs\");\n        local.http = require(\"http\");\n        local.https = require(\"https\");\n        local.net = require(\"net\");\n        local.os = require(\"os\");\n        local.path = require(\"path\");\n        local.querystring = require(\"querystring\");\n        local.readline = require(\"readline\");\n        local.repl = require(\"repl\");\n        local.stream = require(\"stream\");\n        local.string_decoder = require(\"string_decoder\");\n        local.timers = require(\"timers\");\n        local.tls = require(\"tls\");\n        local.tty = require(\"tty\");\n        local.url = require(\"url\");\n        local.util = require(\"util\");\n        local.vm = require(\"vm\");\n        local.zlib = require(\"zlib\");\n    }\n}(this));\n\n\n\n(function (local) {\n\"use strict\";\n\n\n\n// run shared js-env code - init-before\n(function () {\n// init local\nlocal = (\n    globalThis.utility2_rollup\n    || globalThis.utility2_utility2\n    || globalThis.utility2_moduleExports\n);\n// init exports\nglobalThis.local = local;\n// run test-server\nlocal.testRunServer(local);\n// init assets\nlocal.assetsDict[\"/assets.hello.txt\"] = \"hello \\ud83d\\ude01\\n\";\nlocal.assetsDict[\"/assets.index.template.html\"] = \"\";\n}());\n\n\n\n// run shared js-env code - function\n(function () {\nlocal.testCase_ajax_200 = function (opt, onError) {\n/*\n * this function will test ajax's \"200 ok\" handling-behavior\n */\n    if (!local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    opt = {};\n    // test ajax-path \"assets.hello.txt\"\n    local.ajax({\n        url: \"assets.hello.txt\"\n    }, function (err, xhr) {\n        local.tryCatchOnError(function () {\n            // validate no err occurred\n            local.assertThrow(!err, err);\n            // validate data\n            opt.data = xhr.responseText;\n            local.assertThrow(\n                opt.data === \"hello \\ud83d\\ude01\\n\",\n                opt.data\n            );\n            onError();\n        }, onError);\n    });\n};\n\nlocal.testCase_ajax_404 = function (opt, onError) {\n/*\n * this function will test ajax's \"404 not found\" handling-behavior\n */\n    if (!local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    opt = {};\n    // test ajax-path \"/undefined\"\n    local.ajax({\n        url: \"/undefined\"\n    }, function (err) {\n        local.tryCatchOnError(function () {\n            // validate err occurred\n            local.assertThrow(err, err);\n            opt.statusCode = err.statusCode;\n            // validate 404 http statusCode\n            local.assertThrow(opt.statusCode === 404, opt.statusCode);\n            onError();\n        }, onError);\n    });\n};\n\nlocal.testCase_webpage_default = function (opt, onError) {\n/*\n * this function will test webpage's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(null, opt);\n        return;\n    }\n    opt = {\n        modeCoverageMerge: true,\n        url: local.serverLocalHost + \"?modeTest=1\"\n    };\n    local.browserTest(opt, onError);\n};\n}());\n\n\n\n/* istanbul ignore next */\n// run browser js-env code - init-test\n(function () {\nif (!local.isBrowser) {\n    return;\n}\n// log stderr and stdout to #outputStdout1\n[\"error\", \"log\"].forEach(function (key) {\n    var argList;\n    var elem;\n    var fnc;\n    elem = document.querySelector(\n        \"#outputStdout1\"\n    );\n    if (!elem) {\n        return;\n    }\n    fnc = console[key];\n    console[key] = function () {\n        argList = Array.from(arguments); // jslint ignore:line\n        fnc.apply(console, argList);\n        // append text to #outputStdout1\n        elem.textContent += argList.map(function (arg) {\n            return (\n                typeof arg === \"string\"\n                ? arg\n                : JSON.stringify(arg, null, 4)\n            );\n        }).join(\" \").replace((\n            /\\u001b\\[\\d*m/g\n        ), \"\") + \"\\n\";\n        // scroll textarea to bottom\n        elem.scrollTop = elem.scrollHeight;\n    };\n});\nObject.assign(local, globalThis.domOnEventDelegateDict);\nglobalThis.domOnEventDelegateDict = local;\nlocal.onEventDomDb = (\n    local.db && local.db.onEventDomDb\n);\nlocal.testRunBrowser = function (evt) {\n/*\n * this function will run browser-tests\n */\n    switch (\n        !evt.ctrlKey\n        && !evt.metaKey\n        && (\n            evt.modeInit\n            || (evt.type + \".\" + (evt.target && evt.target.id))\n        )\n    ) {\n    // custom-case\n    case \"click.jslintAutofixButton1\":\n    case \"keydown.inputEval1\":\n    case true:\n        globalThis.domOnEventDelegateDict.domOnEventResetOutput();\n        // jslint #inputEval1\n        local.jslint.jslintAndPrint(\n            document.querySelector(\n                \"#inputEval1\"\n            ).value,\n            \"inputEval1.js\",\n            {\n                autofix: (\n                    evt\n                    && evt.currentTarget\n                    && evt.currentTarget.id === \"jslintAutofixButton1\"\n                ),\n                conditional: true\n            }\n        );\n        if (local.jslint.jslintResult.autofix) {\n            document.querySelector(\n                \"#inputEval1\"\n            ).value = (\n                local.jslint.jslintResult.code\n            );\n        }\n        document.querySelector(\n            \"#outputJslintPre1\"\n        ).textContent = (\n            local.jslint.jslintResult.errText\n        ).replace((\n            /\\u001b\\[\\d*m/g\n        ), \"\").trim();\n        // try to cleanup __coverage__\n        try {\n            delete globalThis.__coverage__[\"/inputEval1.js\"];\n        } catch (ignore) {}\n        // try to cover and eval input-code\n        try {\n            document.querySelector(\n                \"#outputCode1\"\n            ).textContent = (\n                local.istanbul.instrumentSync(\n                    document.querySelector(\n                        \"#inputEval1\"\n                    ).value,\n                    \"/inputEval1.js\"\n                )\n            );\n            eval( // jslint ignore:line\n                document.querySelector(\n                    \"#outputCode1\"\n                ).textContent.replace((\n                    /^#!\\//\n                ), \"// \")\n            );\n            document.querySelector(\n                \"#coverageReportDiv1\"\n            ).innerHTML = (\n                local.istanbul.coverageReportCreate({\n                    coverage: window.__coverage__\n                })\n            );\n        } catch (errorCaught2) {\n            console.error(errorCaught2);\n        }\n        return;\n    case \"click.testRunButton1\":\n        local.modeTest = 1;\n        local.testRunDefault(local);\n        return;\n    // run browser-tests\n    default:\n        if (\n            (evt.target && evt.target.id) !== \"testRunButton1\"\n            && !(evt.modeInit && (\n                /\\bmodeTest=1\\b/\n            ).test(location.search))\n        ) {\n            return;\n        }\n        // show browser-tests\n        if (document.querySelector(\n            \"#testReportDiv1\"\n        ).style.maxHeight === \"0px\") {\n            globalThis.domOnEventDelegateDict.domOnEventResetOutput();\n            local.uiAnimateSlideDown(document.querySelector(\n                \"#testReportDiv1\"\n            ));\n            document.querySelector(\n                \"#testRunButton1\"\n            ).textContent = \"hide internal test\";\n            local.modeTest = 1;\n            local.testRunDefault(local);\n            return;\n        }\n        // hide browser-tests\n        local.uiAnimateSlideUp(document.querySelector(\n            \"#testReportDiv1\"\n        ));\n        document.querySelector(\n            \"#testRunButton1\"\n        ).textContent = \"run internal test\";\n    }\n};\n\nlocal.testRunBrowser({\n    modeInit: true\n});\n}());\n\n\n\n/* istanbul ignore next */\n// run node js-env code - init-test\n(function () {\nif (local.isBrowser) {\n    return;\n}\n// init exports\nmodule.exports = local;\n/* validateLineSortedReset */\n// init assets\nlocal.assetsDict = local.assetsDict || {};\n[\n    \"assets.index.template.html\",\n    \"assets.swgg.swagger.json\",\n    \"assets.swgg.swagger.server.json\"\n].forEach(function (file) {\n    file = \"/\" + file;\n    local.assetsDict[file] = local.assetsDict[file] || \"\";\n    if (local.fs.existsSync(local.__dirname + file)) {\n        local.assetsDict[file] = local.fs.readFileSync(\n            local.__dirname + file,\n            \"utf8\"\n        );\n    }\n});\n/* jslint ignore:start */\nlocal.assetsDict[\"/assets.index.template.html\"] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"utf-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<!-- \"assets.utility2.template.html\" -->\\n\\\n<title>{{env.npm_package_name}} ({{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/* jslint utility2:true */\\n\\\n/*csslint\\n\\\n*/\\n\\\n/* csslint ignore:start */\\n\\\n*,\\n\\\n*:after,\\n\\\n*:before {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\n/* csslint ignore:end */\\n\\\n@keyframes uiAnimateShake {\\n\\\n0%,\\n\\\n50% {\\n\\\n    transform: translateX(10px);\\n\\\n}\\n\\\n100% {\\n\\\n    transform: translateX(0);\\n\\\n}\\n\\\n25%,\\n\\\n75% {\\n\\\n    transform: translateX(-10px);\\n\\\n}\\n\\\n}\\n\\\n@keyframes uiAnimateSpin {\\n\\\n0% {\\n\\\n    transform: rotate(0deg);\\n\\\n}\\n\\\n100% {\\n\\\n    transform: rotate(360deg);\\n\\\n}\\n\\\n}\\n\\\na {\\n\\\n    overflow-wrap: break-word;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #eef;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    font-size: small;\\n\\\n    margin: 0 40px;\\n\\\n}\\n\\\nbody > div,\\n\\\nbody > form > div,\\n\\\nbody > form > input,\\n\\\nbody > form > pre,\\n\\\nbody > form > .button,\\n\\\nbody > form > .textarea,\\n\\\nbody > input,\\n\\\nbody > pre,\\n\\\nbody > .button,\\n\\\nbody > .textarea {\\n\\\n    margin-bottom: 20px;\\n\\\n    margin-top: 0;\\n\\\n}\\n\\\nbody > form > input,\\n\\\nbody > form > .button,\\n\\\nbody > input,\\n\\\nbody > .button {\\n\\\n    width: 20rem;\\n\\\n}\\n\\\nbody > form > .textarea,\\n\\\nbody > .textarea {\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\nbody > .readonly {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\ncode,\\n\\\npre,\\n\\\n.textarea {\\n\\\n    font-family: Consolas, Menlo, monospace;\\n\\\n    font-size: smaller;\\n\\\n}\\n\\\npre {\\n\\\n    overflow-wrap: break-word;\\n\\\n    white-space: pre-wrap;\\n\\\n}\\n\\\n.button {\\n\\\n    background-color: #fff;\\n\\\n    border: 1px solid;\\n\\\n    border-bottom-color: rgb(186, 186, 186);\\n\\\n    border-left-color: rgb(209, 209, 209);\\n\\\n    border-radius: 4px;\\n\\\n    border-right-color: rgb(209, 209, 209);\\n\\\n    border-top-color: rgb(216, 216, 216);\\n\\\n    color: #00d;\\n\\\n    cursor: pointer;\\n\\\n    display: inline-block;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    font-size: 12px;\\n\\\n    font-style: normal;\\n\\\n    font-weight: normal;\\n\\\n    margin: 0;\\n\\\n    padding: 2px 7px 3px 7px;\\n\\\n    text-align: center;\\n\\\n    text-decoration: underline;\\n\\\n}\\n\\\n.colorError {\\n\\\n    color: #d00;\\n\\\n}\\n\\\n.textarea {\\n\\\n    background: #fff;\\n\\\n    border: 1px solid #999;\\n\\\n    border-radius: 0;\\n\\\n    cursor: auto;\\n\\\n    overflow: auto;\\n\\\n    padding: 2px;\\n\\\n}\\n\\\n.uiAnimateShake {\\n\\\n    animation-duration: 500ms;\\n\\\n    animation-name: uiAnimateShake;\\n\\\n}\\n\\\n.uiAnimateSlide {\\n\\\n    overflow-y: hidden;\\n\\\n    transition: max-height ease-in 250ms, min-height ease-in 250ms, padding-bottom ease-in 250ms, padding-top ease-in 250ms;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    text-align: center;\\n\\\n}\\n\\\n.zeroPixel {\\n\\\n    border: 0;\\n\\\n    height: 0;\\n\\\n    margin: 0;\\n\\\n    padding: 0;\\n\\\n    width: 0;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 500ms, width 1500ms; width: 0%; z-index: 1;\"></div>\\n\\\n<div class=\"uiAnimateSpin\" style=\"animation: uiAnimateSpin 2s linear infinite; border: 5px solid #999; border-radius: 50%; border-top: 5px solid #7d7; display: none; height: 25px; vertical-align: middle; width: 25px;\"></div>\\n\\\n<a class=\"zeroPixel\" download=\"db.persistence.json\" href=\"\" id=\"dbExportA1\"></a>\\n\\\n<input class=\"zeroPixel\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbImportInput\" type=\"file\">\\n\\\n<script>\\n\\\n/* jslint utility2:true */\\n\\\n// init domOnEventWindowOnloadTimeElapsed\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will measure and print time-elapsed for window.onload\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    if (window.domOnEventWindowOnloadTimeElapsed) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventWindowOnloadTimeElapsed = Date.now() + 100;\\n\\\n    window.addEventListener(\"load\", function () {\\n\\\n        setTimeout(function () {\\n\\\n            window.domOnEventWindowOnloadTimeElapsed = (\\n\\\n                Date.now()\\n\\\n                - window.domOnEventWindowOnloadTimeElapsed\\n\\\n            );\\n\\\n            console.error(\\n\\\n                \"domOnEventWindowOnloadTimeElapsed = \"\\n\\\n                + window.domOnEventWindowOnloadTimeElapsed\\n\\\n            );\\n\\\n        }, 100);\\n\\\n    });\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n// init domOnEventDelegateDict\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will handle delegated dom-event\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    var timerTimeoutDict;\\n\\\n    if (window.domOnEventDelegateDict) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventDelegateDict = {};\\n\\\n    timerTimeoutDict = {};\\n\\\n    window.domOnEventDelegateDict.domOnEventDelegate = function (evt) {\\n\\\n        evt.targetOnEvent = evt.target.closest(\\n\\\n            \"[data-onevent]\"\\n\\\n        );\\n\\\n        if (\\n\\\n            !evt.targetOnEvent\\n\\\n            || evt.targetOnEvent.dataset.onevent === \"domOnEventNop\"\\n\\\n            || evt.target.closest(\\n\\\n                \".disabled, .readonly\"\\n\\\n            )\\n\\\n        ) {\\n\\\n            return;\\n\\\n        }\\n\\\n        // rate-limit high-frequency-event\\n\\\n        switch (evt.type) {\\n\\\n        case \"keydown\":\\n\\\n        case \"keyup\":\\n\\\n            // filter non-input keyboard-event\\n\\\n            if (!evt.target.closest(\\n\\\n                \"input, option, select, textarea\"\\n\\\n            )) {\\n\\\n                return;\\n\\\n            }\\n\\\n            if (timerTimeoutDict[evt.type] !== true) {\\n\\\n                timerTimeoutDict[evt.type] = timerTimeoutDict[\\n\\\n                    evt.type\\n\\\n                ] || setTimeout(function () {\\n\\\n                    timerTimeoutDict[evt.type] = true;\\n\\\n                    window.domOnEventDelegateDict.domOnEventDelegate(evt);\\n\\\n                }, 50);\\n\\\n                return;\\n\\\n            }\\n\\\n            timerTimeoutDict[evt.type] = null;\\n\\\n            break;\\n\\\n        }\\n\\\n        switch (evt.targetOnEvent.tagName) {\\n\\\n        case \"BUTTON\":\\n\\\n        case \"FORM\":\\n\\\n            evt.preventDefault();\\n\\\n            break;\\n\\\n        }\\n\\\n        evt.stopPropagation();\\n\\\n        window.domOnEventDelegateDict[evt.targetOnEvent.dataset.onevent](\\n\\\n            evt\\n\\\n        );\\n\\\n    };\\n\\\n    window.domOnEventDelegateDict.domOnEventResetOutput = function () {\\n\\\n        Array.from(document.querySelectorAll(\\n\\\n            \".onevent-reset-output\"\\n\\\n        )).forEach(function (elem) {\\n\\\n            switch (elem.tagName) {\\n\\\n            case \"INPUT\":\\n\\\n            case \"TEXTAREA\":\\n\\\n                elem.value = \"\";\\n\\\n                break;\\n\\\n            case \"PRE\":\\n\\\n                elem.textContent = \"\";\\n\\\n                break;\\n\\\n            default:\\n\\\n                elem.innerHTML = \"\";\\n\\\n            }\\n\\\n        });\\n\\\n    };\\n\\\n    // init event-handling\\n\\\n    [\\n\\\n        \"change\",\\n\\\n        \"click\",\\n\\\n        \"keydown\",\\n\\\n        \"submit\"\\n\\\n    ].forEach(function (eventType) {\\n\\\n        document.addEventListener(\\n\\\n            eventType,\\n\\\n            window.domOnEventDelegateDict.domOnEventDelegate\\n\\\n        );\\n\\\n    });\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n// init timerIntervalAjaxProgressUpdate\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will increment ajax-progress-bar\\n\\\n * until webpage has loaded\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    var ajaxProgressDiv1;\\n\\\n    var ajaxProgressState;\\n\\\n    var ajaxProgressUpdate;\\n\\\n    if (\\n\\\n        window.timerIntervalAjaxProgressUpdate\\n\\\n        || !document.querySelector(\\n\\\n            \"#ajaxProgressDiv1\"\\n\\\n        )\\n\\\n    ) {\\n\\\n        return;\\n\\\n    }\\n\\\n    ajaxProgressDiv1 = document.querySelector(\\n\\\n        \"#ajaxProgressDiv1\"\\n\\\n    );\\n\\\n    setTimeout(function () {\\n\\\n        ajaxProgressDiv1.style.width = \"25%\";\\n\\\n    });\\n\\\n    ajaxProgressState = 0;\\n\\\n    ajaxProgressUpdate = (\\n\\\n        window.local\\n\\\n        && window.local.ajaxProgressUpdate\\n\\\n    ) || function () {\\n\\\n        ajaxProgressDiv1.style.width = \"100%\";\\n\\\n        setTimeout(function () {\\n\\\n            ajaxProgressDiv1.style.background = \"transparent\";\\n\\\n            setTimeout(function () {\\n\\\n                ajaxProgressDiv1.style.width = \"0%\";\\n\\\n            }, 500);\\n\\\n        }, 1000);\\n\\\n    };\\n\\\n    window.timerIntervalAjaxProgressUpdate = setInterval(function () {\\n\\\n        ajaxProgressState += 1;\\n\\\n        ajaxProgressDiv1.style.width = Math.max(\\n\\\n            100 - 75 * Math.exp(-0.125 * ajaxProgressState),\\n\\\n            ajaxProgressDiv1.style.width.slice(0, -1) | 0\\n\\\n        ) + \"%\";\\n\\\n    }, 1000);\\n\\\n    window.addEventListener(\"load\", function () {\\n\\\n        clearInterval(window.timerIntervalAjaxProgressUpdate);\\n\\\n        ajaxProgressUpdate();\\n\\\n    });\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n\\n\\\n// init domOnEventSelectAllWithinPre\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will limit select-all within <pre tabIndex=\"0\"> elements\\n\\\n * https://stackoverflow.com/questions/985272/selecting-text-in-an-element-akin-to-highlighting-with-your-mouse\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    if (window.domOnEventSelectAllWithinPre) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventSelectAllWithinPre = function (evt) {\\n\\\n        var range;\\n\\\n        var selection;\\n\\\n        if (\\n\\\n            evt\\n\\\n            && evt.key === \"a\"\\n\\\n            && (evt.ctrlKey || evt.metaKey)\\n\\\n            && evt.target.closest(\\n\\\n                \"pre\"\\n\\\n            )\\n\\\n        ) {\\n\\\n            range = document.createRange();\\n\\\n            range.selectNodeContents(evt.target.closest(\\n\\\n                \"pre\"\\n\\\n            ));\\n\\\n            selection = window.getSelection();\\n\\\n            selection.removeAllRanges();\\n\\\n            selection.addRange(range);\\n\\\n            evt.preventDefault();\\n\\\n        }\\n\\\n    };\\n\\\n    // init event-handling\\n\\\n    document.addEventListener(\\n\\\n        \"keydown\",\\n\\\n        window.domOnEventSelectAllWithinPre\\n\\\n    );\\n\\\n}());\\n\\\n</script>\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} ({{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\\n\\\n<button class=\"button\" data-onevent=\"testRunBrowser\" id=\"testRunButton1\">run internal test</button><br>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>edit or paste script below to cover and test</label>\\n\\\n<textarea class=\"textarea\" data-onevent=\"testRunBrowser\" id=\"inputEval1\">\\n\\\n// remove comment below to disable jslint\\n\\\n/*jslint browser, devel*/\\n\\\n/*global window*/\\n\\\n(function () {\\n\\\n    \"use strict\";\\n\\\n    var testCaseDict;\\n\\\n    testCaseDict = {};\\n\\\n    testCaseDict.modeTest = 1;\\n\\\n\\n\\\n    // comment this testCase to disable failed error demo\\n\\\n    testCaseDict.testCase_failed_error_demo = function (opt, onError) {\\n\\\n    /*\\n\\\n     * this function will run a failed error demo\\n\\\n     */\\n\\\n        // jslint-hack\\n\\\n        window.utility2.nop(opt);\\n\\\n        onError(new Error(\"this is a failed error demo\"));\\n\\\n    };\\n\\\n\\n\\\n    testCaseDict.testCase_passed_ajax_demo = function (opt, onError) {\\n\\\n    /*\\n\\\n     * this function will demo a passed ajax test\\n\\\n     */\\n\\\n        var data;\\n\\\n        opt = {url: \"/\"};\\n\\\n        // test ajax-req for main-page \"/\"\\n\\\n        window.utility2.ajax(opt, function (err, xhr) {\\n\\\n            try {\\n\\\n                // validate no err occurred\\n\\\n                console.assert(!err, err);\\n\\\n                // validate \"200 ok\" status\\n\\\n                console.assert(xhr.statusCode === 200, xhr.statusCode);\\n\\\n                // validate non-empty data\\n\\\n                data = xhr.responseText;\\n\\\n                console.assert(data && data.length > 0, data);\\n\\\n                onError();\\n\\\n            } catch (errorCaught) {\\n\\\n                onError(errorCaught);\\n\\\n            }\\n\\\n        });\\n\\\n    };\\n\\\n\\n\\\n    window.utility2.testRunDefault(testCaseDict);\\n\\\n}());\\n\\\n</textarea>\\n\\\n<button class=\"button\" data-onevent=\"testRunBrowser\" id=\"jslintAutofixButton1\">jslint autofix</button><br>\\n\\\n<pre class= \"colorError\" id=\"outputJslintPre1\" tabindex=\"0\"></pre>\\n\\\n<label>instrumented-code</label>\\n\\\n<pre class=\"readonly textarea\" id=\"outputCode1\" tabindex=\"0\"></pre>\\n\\\n<label>stderr and stdout</label>\\n\\\n<pre class=\"onevent-reset-output readonly textarea\" id=\"outputStdout1\" tabindex=\"0\"></pre>\\n\\\n<div id=\"testReportDiv1\"></div>\\n\\\n<div id=\"coverageReportDiv1\"></div>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.lib.istanbul.js\"></script>\\n\\\n<script src=\"assets.utility2.lib.jslint.js\"></script>\\n\\\n<script src=\"assets.utility2.lib.db.js\"></script>\\n\\\n<script src=\"assets.utility2.lib.marked.js\"></script>\\n\\\n<script src=\"assets.utility2.lib.sjcl.js\"></script>\\n\\\n<script src=\"assets.utility2.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore.counter += 1;</script>\\n\\\n<script src=\"jsonp.utility2.stateInit?callback=window.utility2.stateInit\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore();</script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n/* jslint ignore:end */\n/* validateLineSortedReset */\n/* jslint ignore:start */\nlocal.assetsDict[\"/assets.utility2.js\"] =\n    local.assetsDict[\"/assets.utility2.js\"] ||\n    local.fs.readFileSync(local.__dirname + \"/lib.utility2.js\", \"utf8\"\n).replace((/^#!\\//), \"// \");\n/* jslint ignore:end */\n/* validateLineSortedReset */\nlocal.assetsDict[\"/\"] = local.assetsDict[\"/assets.index.template.html\"]\n.replace((\n    /\\{\\{env\\.(\\w+?)\\}\\}/g\n), function (match0, match1) {\n    switch (match1) {\n    case \"npm_package_description\":\n        return \"the greatest app in the world!\";\n    case \"npm_package_name\":\n        return \"utility2\";\n    case \"npm_package_nameLib\":\n        return \"utility2\";\n    case \"npm_package_version\":\n        return \"0.0.1\";\n    default:\n        return match0;\n    }\n});\nlocal.assetsDict[\"/assets.example.html\"] = local.assetsDict[\"/\"];\nlocal.assetsDict[\"/index.html\"] = local.assetsDict[\"/\"];\n// init cli\nif (module !== require.main || globalThis.utility2_rollup) {\n    return;\n}\n/* validateLineSortedReset */\nlocal.assetsDict[\"/assets.example.js\"] = (\n    local.assetsDict[\"/assets.example.js\"]\n    || local.fs.readFileSync(__filename, \"utf8\")\n);\nlocal.assetsDict[\"/favicon.ico\"] = local.assetsDict[\"/favicon.ico\"] || \"\";\n// if $npm_config_timeout_exit exists,\n// then exit this process after $npm_config_timeout_exit ms\nif (Number(process.env.npm_config_timeout_exit)) {\n    setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n}\n// start server\nif (globalThis.utility2_serverHttp1) {\n    return;\n}\nprocess.env.PORT = process.env.PORT || \"8081\";\nconsole.error(\"http-server listening on port \" + process.env.PORT);\nlocal.http.createServer(function (req, res) {\n    req.urlParsed = local.url.parse(req.url);\n    if (local.assetsDict[req.urlParsed.pathname] !== undefined) {\n        res.end(local.assetsDict[req.urlParsed.pathname]);\n        return;\n    }\n    res.statusCode = 404;\n    res.end();\n}).listen(process.env.PORT);\n}());\n\n\n\n}());"}